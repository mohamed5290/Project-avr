
implimntation_dio.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002cc0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000012  00800060  00002cc0  00002d34  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001980  00000000  00000000  00002d48  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000009a6  00000000  00000000  000046c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  0000506e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  000051ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  0000531e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  00006f67  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  00007e52  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00008c00  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  00008d60  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  00008fed  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  000097bb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 ec       	ldi	r30, 0xC0	; 192
      68:	fc e2       	ldi	r31, 0x2C	; 44
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a2 37       	cpi	r26, 0x72	; 114
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <main>
      7a:	0c 94 5e 16 	jmp	0x2cbc	; 0x2cbc <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 27 16 	jmp	0x2c4e	; 0x2c4e <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 43 16 	jmp	0x2c86	; 0x2c86 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 33 16 	jmp	0x2c66	; 0x2c66 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 4f 16 	jmp	0x2c9e	; 0x2c9e <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 33 16 	jmp	0x2c66	; 0x2c66 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 4f 16 	jmp	0x2c9e	; 0x2c9e <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 27 16 	jmp	0x2c4e	; 0x2c4e <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 43 16 	jmp	0x2c86	; 0x2c86 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 33 16 	jmp	0x2c66	; 0x2c66 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 4f 16 	jmp	0x2c9e	; 0x2c9e <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 33 16 	jmp	0x2c66	; 0x2c66 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 4f 16 	jmp	0x2c9e	; 0x2c9e <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 33 16 	jmp	0x2c66	; 0x2c66 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 4f 16 	jmp	0x2c9e	; 0x2c9e <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 37 16 	jmp	0x2c6e	; 0x2c6e <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 53 16 	jmp	0x2ca6	; 0x2ca6 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <DIO_voidInit>:
#include "DIO_config.h"
#include "DiO_private.h"


void DIO_voidInit(void)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62
	DIO_U8_DDRA_REG=conc(DIO_u8_PA7_DIRECTION,DIO_u8_PA6_DIRECTION,DIO_u8_PA5_DIRECTION,DIO_u8_PA4_DIRECTION,
     b3e:	ea e3       	ldi	r30, 0x3A	; 58
     b40:	f0 e0       	ldi	r31, 0x00	; 0
     b42:	10 82       	st	Z, r1
	               		 DIO_u8_PA3_DIRECTION,DIO_u8_PA2_DIRECTION,DIO_u8_PA1_DIRECTION,DIO_u8_PA0_DIRECTION );

    DIO_U8_DDRB_REG=conc(DIO_u8_PB7_DIRECTION,DIO_u8_PB6_DIRECTION,DIO_u8_PB5_DIRECTION,
     b44:	e7 e3       	ldi	r30, 0x37	; 55
     b46:	f0 e0       	ldi	r31, 0x00	; 0
     b48:	10 82       	st	Z, r1
				         DIO_u8_PB4_DIRECTION,DIO_u8_PB3_DIRECTION,DIO_u8_PB2_DIRECTION,DIO_u8_PB1_DIRECTION,DIO_u8_PB0_DIRECTION );

    DIO_U8_DDRC_REG=conc(DIO_u8_PC7_DIRECTION,DIO_u8_PC6_DIRECTION,DIO_u8_PC5_DIRECTION,
     b4a:	e4 e3       	ldi	r30, 0x34	; 52
     b4c:	f0 e0       	ldi	r31, 0x00	; 0
     b4e:	10 82       	st	Z, r1
				         DIO_u8_PC4_DIRECTION,DIO_u8_PC3_DIRECTION,DIO_u8_PC2_DIRECTION,DIO_u8_PC1_DIRECTION,DIO_u8_PC0_DIRECTION );

    DIO_U8_DDRD_REG=conc(DIO_u8_PD7_DIRECTION,DIO_u8_PD6_DIRECTION,DIO_u8_PD5_DIRECTION,
     b50:	e1 e3       	ldi	r30, 0x31	; 49
     b52:	f0 e0       	ldi	r31, 0x00	; 0
     b54:	10 82       	st	Z, r1
				         DIO_u8_PA4_DIRECTION,DIO_u8_PD3_DIRECTION,DIO_u8_PD2_DIRECTION,DIO_u8_PD1_DIRECTION,DIO_u8_PD0_DIRECTION );



    DIO_U8_PORTA_REG=conc(DIO_u8_PA7_INITTIAL_VALUE,DIO_u8_PA6_INITTIAL_VALUE,DIO_u8_PA5_INITTIAL_VALUE,
     b56:	eb e3       	ldi	r30, 0x3B	; 59
     b58:	f0 e0       	ldi	r31, 0x00	; 0
     b5a:	10 82       	st	Z, r1
    		              DIO_u8_PA4_INITTIAL_VALUE,DIO_u8_PA3_INITTIAL_VALUE,DIO_u8_PA2_INITTIAL_VALUE,DIO_u8_PA1_INITTIAL_VALUE,DIO_u8_PA0_INITTIAL_VALUE);

    DIO_U8_PORTB_REG=conc(DIO_u8_PB7_INITTIAL_VALUE,DIO_u8_PB6_INITTIAL_VALUE,DIO_u8_PB5_INITTIAL_VALUE,
     b5c:	e8 e3       	ldi	r30, 0x38	; 56
     b5e:	f0 e0       	ldi	r31, 0x00	; 0
     b60:	10 82       	st	Z, r1
    		              DIO_u8_PB4_INITTIAL_VALUE,DIO_u8_PB3_INITTIAL_VALUE,DIO_u8_PB2_INITTIAL_VALUE,DIO_u8_PB1_INITTIAL_VALUE,DIO_u8_PB0_INITTIAL_VALUE);

	DIO_U8_PORTC_REG=conc(DIO_u8_PC7_INITTIAL_VALUE,DIO_u8_PC6_INITTIAL_VALUE,DIO_u8_PC5_INITTIAL_VALUE,
     b62:	e5 e3       	ldi	r30, 0x35	; 53
     b64:	f0 e0       	ldi	r31, 0x00	; 0
     b66:	10 82       	st	Z, r1
				          DIO_u8_PC4_INITTIAL_VALUE,DIO_u8_PC3_INITTIAL_VALUE,DIO_u8_PC2_INITTIAL_VALUE,DIO_u8_PC1_INITTIAL_VALUE,DIO_u8_PC0_INITTIAL_VALUE);

    DIO_U8_PORTD_REG=conc(DIO_u8_PD7_INITTIAL_VALUE,DIO_u8_PD6_INITTIAL_VALUE,DIO_u8_PD5_INITTIAL_VALUE,
     b68:	e2 e3       	ldi	r30, 0x32	; 50
     b6a:	f0 e0       	ldi	r31, 0x00	; 0
     b6c:	10 82       	st	Z, r1
    		              DIO_u8_PD4_INITTIAL_VALUE,DIO_u8_PD3_INITTIAL_VALUE,DIO_u8_PD2_INITTIAL_VALUE,DIO_u8_PD1_INITTIAL_VALUE,DIO_u8_PD0_INITTIAL_VALUE);


}
     b6e:	cf 91       	pop	r28
     b70:	df 91       	pop	r29
     b72:	08 95       	ret

00000b74 <DIO_u8SetPinDirction>:


u8 DIO_u8SetPinDirction(u8 copy_u8PortId,u8 copy_u8PinId,u8 copy_u8PinDirction )
{
     b74:	df 93       	push	r29
     b76:	cf 93       	push	r28
     b78:	00 d0       	rcall	.+0      	; 0xb7a <DIO_u8SetPinDirction+0x6>
     b7a:	00 d0       	rcall	.+0      	; 0xb7c <DIO_u8SetPinDirction+0x8>
     b7c:	00 d0       	rcall	.+0      	; 0xb7e <DIO_u8SetPinDirction+0xa>
     b7e:	cd b7       	in	r28, 0x3d	; 61
     b80:	de b7       	in	r29, 0x3e	; 62
     b82:	8a 83       	std	Y+2, r24	; 0x02
     b84:	6b 83       	std	Y+3, r22	; 0x03
     b86:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErorrState = STD_TYPES_OK;
     b88:	81 e0       	ldi	r24, 0x01	; 1
     b8a:	89 83       	std	Y+1, r24	; 0x01
	if((copy_u8PortId<= DIO_U8_PORTD) && (copy_u8PinId <=DIO_U8_PIN7) && (copy_u8PinDirction<=DIO_U8_OUTPUT))
     b8c:	8a 81       	ldd	r24, Y+2	; 0x02
     b8e:	84 30       	cpi	r24, 0x04	; 4
     b90:	08 f0       	brcs	.+2      	; 0xb94 <DIO_u8SetPinDirction+0x20>
     b92:	da c0       	rjmp	.+436    	; 0xd48 <DIO_u8SetPinDirction+0x1d4>
     b94:	8b 81       	ldd	r24, Y+3	; 0x03
     b96:	88 30       	cpi	r24, 0x08	; 8
     b98:	08 f0       	brcs	.+2      	; 0xb9c <DIO_u8SetPinDirction+0x28>
     b9a:	d6 c0       	rjmp	.+428    	; 0xd48 <DIO_u8SetPinDirction+0x1d4>
     b9c:	8c 81       	ldd	r24, Y+4	; 0x04
     b9e:	82 30       	cpi	r24, 0x02	; 2
     ba0:	08 f0       	brcs	.+2      	; 0xba4 <DIO_u8SetPinDirction+0x30>
     ba2:	d2 c0       	rjmp	.+420    	; 0xd48 <DIO_u8SetPinDirction+0x1d4>
	{
		switch(copy_u8PortId)
     ba4:	8a 81       	ldd	r24, Y+2	; 0x02
     ba6:	28 2f       	mov	r18, r24
     ba8:	30 e0       	ldi	r19, 0x00	; 0
     baa:	3e 83       	std	Y+6, r19	; 0x06
     bac:	2d 83       	std	Y+5, r18	; 0x05
     bae:	8d 81       	ldd	r24, Y+5	; 0x05
     bb0:	9e 81       	ldd	r25, Y+6	; 0x06
     bb2:	81 30       	cpi	r24, 0x01	; 1
     bb4:	91 05       	cpc	r25, r1
     bb6:	09 f4       	brne	.+2      	; 0xbba <DIO_u8SetPinDirction+0x46>
     bb8:	43 c0       	rjmp	.+134    	; 0xc40 <DIO_u8SetPinDirction+0xcc>
     bba:	2d 81       	ldd	r18, Y+5	; 0x05
     bbc:	3e 81       	ldd	r19, Y+6	; 0x06
     bbe:	22 30       	cpi	r18, 0x02	; 2
     bc0:	31 05       	cpc	r19, r1
     bc2:	2c f4       	brge	.+10     	; 0xbce <DIO_u8SetPinDirction+0x5a>
     bc4:	8d 81       	ldd	r24, Y+5	; 0x05
     bc6:	9e 81       	ldd	r25, Y+6	; 0x06
     bc8:	00 97       	sbiw	r24, 0x00	; 0
     bca:	71 f0       	breq	.+28     	; 0xbe8 <DIO_u8SetPinDirction+0x74>
     bcc:	be c0       	rjmp	.+380    	; 0xd4a <DIO_u8SetPinDirction+0x1d6>
     bce:	2d 81       	ldd	r18, Y+5	; 0x05
     bd0:	3e 81       	ldd	r19, Y+6	; 0x06
     bd2:	22 30       	cpi	r18, 0x02	; 2
     bd4:	31 05       	cpc	r19, r1
     bd6:	09 f4       	brne	.+2      	; 0xbda <DIO_u8SetPinDirction+0x66>
     bd8:	5f c0       	rjmp	.+190    	; 0xc98 <DIO_u8SetPinDirction+0x124>
     bda:	8d 81       	ldd	r24, Y+5	; 0x05
     bdc:	9e 81       	ldd	r25, Y+6	; 0x06
     bde:	83 30       	cpi	r24, 0x03	; 3
     be0:	91 05       	cpc	r25, r1
     be2:	09 f4       	brne	.+2      	; 0xbe6 <DIO_u8SetPinDirction+0x72>
     be4:	85 c0       	rjmp	.+266    	; 0xcf0 <DIO_u8SetPinDirction+0x17c>
     be6:	b1 c0       	rjmp	.+354    	; 0xd4a <DIO_u8SetPinDirction+0x1d6>
		{
			case DIO_U8_PORTA:
			       if(copy_u8PinDirction==DIO_U8_OUTPUT)
     be8:	8c 81       	ldd	r24, Y+4	; 0x04
     bea:	81 30       	cpi	r24, 0x01	; 1
     bec:	a1 f4       	brne	.+40     	; 0xc16 <DIO_u8SetPinDirction+0xa2>
			       {
			            SET_BIT(DIO_U8_DDRA_REG,copy_u8PinId);
     bee:	aa e3       	ldi	r26, 0x3A	; 58
     bf0:	b0 e0       	ldi	r27, 0x00	; 0
     bf2:	ea e3       	ldi	r30, 0x3A	; 58
     bf4:	f0 e0       	ldi	r31, 0x00	; 0
     bf6:	80 81       	ld	r24, Z
     bf8:	48 2f       	mov	r20, r24
     bfa:	8b 81       	ldd	r24, Y+3	; 0x03
     bfc:	28 2f       	mov	r18, r24
     bfe:	30 e0       	ldi	r19, 0x00	; 0
     c00:	81 e0       	ldi	r24, 0x01	; 1
     c02:	90 e0       	ldi	r25, 0x00	; 0
     c04:	02 2e       	mov	r0, r18
     c06:	02 c0       	rjmp	.+4      	; 0xc0c <DIO_u8SetPinDirction+0x98>
     c08:	88 0f       	add	r24, r24
     c0a:	99 1f       	adc	r25, r25
     c0c:	0a 94       	dec	r0
     c0e:	e2 f7       	brpl	.-8      	; 0xc08 <DIO_u8SetPinDirction+0x94>
     c10:	84 2b       	or	r24, r20
     c12:	8c 93       	st	X, r24
     c14:	9a c0       	rjmp	.+308    	; 0xd4a <DIO_u8SetPinDirction+0x1d6>
			       }
			       else
				   {
			            CLE_BIT(DIO_U8_DDRA_REG,copy_u8PinId);
     c16:	aa e3       	ldi	r26, 0x3A	; 58
     c18:	b0 e0       	ldi	r27, 0x00	; 0
     c1a:	ea e3       	ldi	r30, 0x3A	; 58
     c1c:	f0 e0       	ldi	r31, 0x00	; 0
     c1e:	80 81       	ld	r24, Z
     c20:	48 2f       	mov	r20, r24
     c22:	8b 81       	ldd	r24, Y+3	; 0x03
     c24:	28 2f       	mov	r18, r24
     c26:	30 e0       	ldi	r19, 0x00	; 0
     c28:	81 e0       	ldi	r24, 0x01	; 1
     c2a:	90 e0       	ldi	r25, 0x00	; 0
     c2c:	02 2e       	mov	r0, r18
     c2e:	02 c0       	rjmp	.+4      	; 0xc34 <DIO_u8SetPinDirction+0xc0>
     c30:	88 0f       	add	r24, r24
     c32:	99 1f       	adc	r25, r25
     c34:	0a 94       	dec	r0
     c36:	e2 f7       	brpl	.-8      	; 0xc30 <DIO_u8SetPinDirction+0xbc>
     c38:	80 95       	com	r24
     c3a:	84 23       	and	r24, r20
     c3c:	8c 93       	st	X, r24
     c3e:	85 c0       	rjmp	.+266    	; 0xd4a <DIO_u8SetPinDirction+0x1d6>
				   }
			break;
			case DIO_U8_PORTB :
			       if(copy_u8PinDirction==DIO_U8_OUTPUT)
     c40:	8c 81       	ldd	r24, Y+4	; 0x04
     c42:	81 30       	cpi	r24, 0x01	; 1
     c44:	a1 f4       	brne	.+40     	; 0xc6e <DIO_u8SetPinDirction+0xfa>
			       {
			            SET_BIT(DIO_U8_DDRB_REG,copy_u8PinId);
     c46:	a7 e3       	ldi	r26, 0x37	; 55
     c48:	b0 e0       	ldi	r27, 0x00	; 0
     c4a:	e7 e3       	ldi	r30, 0x37	; 55
     c4c:	f0 e0       	ldi	r31, 0x00	; 0
     c4e:	80 81       	ld	r24, Z
     c50:	48 2f       	mov	r20, r24
     c52:	8b 81       	ldd	r24, Y+3	; 0x03
     c54:	28 2f       	mov	r18, r24
     c56:	30 e0       	ldi	r19, 0x00	; 0
     c58:	81 e0       	ldi	r24, 0x01	; 1
     c5a:	90 e0       	ldi	r25, 0x00	; 0
     c5c:	02 2e       	mov	r0, r18
     c5e:	02 c0       	rjmp	.+4      	; 0xc64 <DIO_u8SetPinDirction+0xf0>
     c60:	88 0f       	add	r24, r24
     c62:	99 1f       	adc	r25, r25
     c64:	0a 94       	dec	r0
     c66:	e2 f7       	brpl	.-8      	; 0xc60 <DIO_u8SetPinDirction+0xec>
     c68:	84 2b       	or	r24, r20
     c6a:	8c 93       	st	X, r24
     c6c:	6e c0       	rjmp	.+220    	; 0xd4a <DIO_u8SetPinDirction+0x1d6>
			       }
			       else
				   {
			            CLE_BIT(DIO_U8_DDRB_REG,copy_u8PinId);
     c6e:	a7 e3       	ldi	r26, 0x37	; 55
     c70:	b0 e0       	ldi	r27, 0x00	; 0
     c72:	e7 e3       	ldi	r30, 0x37	; 55
     c74:	f0 e0       	ldi	r31, 0x00	; 0
     c76:	80 81       	ld	r24, Z
     c78:	48 2f       	mov	r20, r24
     c7a:	8b 81       	ldd	r24, Y+3	; 0x03
     c7c:	28 2f       	mov	r18, r24
     c7e:	30 e0       	ldi	r19, 0x00	; 0
     c80:	81 e0       	ldi	r24, 0x01	; 1
     c82:	90 e0       	ldi	r25, 0x00	; 0
     c84:	02 2e       	mov	r0, r18
     c86:	02 c0       	rjmp	.+4      	; 0xc8c <DIO_u8SetPinDirction+0x118>
     c88:	88 0f       	add	r24, r24
     c8a:	99 1f       	adc	r25, r25
     c8c:	0a 94       	dec	r0
     c8e:	e2 f7       	brpl	.-8      	; 0xc88 <DIO_u8SetPinDirction+0x114>
     c90:	80 95       	com	r24
     c92:	84 23       	and	r24, r20
     c94:	8c 93       	st	X, r24
     c96:	59 c0       	rjmp	.+178    	; 0xd4a <DIO_u8SetPinDirction+0x1d6>
				   }
			break;
			case DIO_U8_PORTC:
			        if(copy_u8PinDirction==DIO_U8_OUTPUT)
     c98:	8c 81       	ldd	r24, Y+4	; 0x04
     c9a:	81 30       	cpi	r24, 0x01	; 1
     c9c:	a1 f4       	brne	.+40     	; 0xcc6 <DIO_u8SetPinDirction+0x152>
			        {
			            SET_BIT(DIO_U8_DDRC_REG,copy_u8PinId);
     c9e:	a4 e3       	ldi	r26, 0x34	; 52
     ca0:	b0 e0       	ldi	r27, 0x00	; 0
     ca2:	e4 e3       	ldi	r30, 0x34	; 52
     ca4:	f0 e0       	ldi	r31, 0x00	; 0
     ca6:	80 81       	ld	r24, Z
     ca8:	48 2f       	mov	r20, r24
     caa:	8b 81       	ldd	r24, Y+3	; 0x03
     cac:	28 2f       	mov	r18, r24
     cae:	30 e0       	ldi	r19, 0x00	; 0
     cb0:	81 e0       	ldi	r24, 0x01	; 1
     cb2:	90 e0       	ldi	r25, 0x00	; 0
     cb4:	02 2e       	mov	r0, r18
     cb6:	02 c0       	rjmp	.+4      	; 0xcbc <DIO_u8SetPinDirction+0x148>
     cb8:	88 0f       	add	r24, r24
     cba:	99 1f       	adc	r25, r25
     cbc:	0a 94       	dec	r0
     cbe:	e2 f7       	brpl	.-8      	; 0xcb8 <DIO_u8SetPinDirction+0x144>
     cc0:	84 2b       	or	r24, r20
     cc2:	8c 93       	st	X, r24
     cc4:	42 c0       	rjmp	.+132    	; 0xd4a <DIO_u8SetPinDirction+0x1d6>
			        }
			        else
			        {
						CLE_BIT(DIO_U8_DDRC_REG,copy_u8PinId);
     cc6:	a4 e3       	ldi	r26, 0x34	; 52
     cc8:	b0 e0       	ldi	r27, 0x00	; 0
     cca:	e4 e3       	ldi	r30, 0x34	; 52
     ccc:	f0 e0       	ldi	r31, 0x00	; 0
     cce:	80 81       	ld	r24, Z
     cd0:	48 2f       	mov	r20, r24
     cd2:	8b 81       	ldd	r24, Y+3	; 0x03
     cd4:	28 2f       	mov	r18, r24
     cd6:	30 e0       	ldi	r19, 0x00	; 0
     cd8:	81 e0       	ldi	r24, 0x01	; 1
     cda:	90 e0       	ldi	r25, 0x00	; 0
     cdc:	02 2e       	mov	r0, r18
     cde:	02 c0       	rjmp	.+4      	; 0xce4 <DIO_u8SetPinDirction+0x170>
     ce0:	88 0f       	add	r24, r24
     ce2:	99 1f       	adc	r25, r25
     ce4:	0a 94       	dec	r0
     ce6:	e2 f7       	brpl	.-8      	; 0xce0 <DIO_u8SetPinDirction+0x16c>
     ce8:	80 95       	com	r24
     cea:	84 23       	and	r24, r20
     cec:	8c 93       	st	X, r24
     cee:	2d c0       	rjmp	.+90     	; 0xd4a <DIO_u8SetPinDirction+0x1d6>
					}
			break;
			case DIO_U8_PORTD:
			        if(copy_u8PinDirction==DIO_U8_OUTPUT)
     cf0:	8c 81       	ldd	r24, Y+4	; 0x04
     cf2:	81 30       	cpi	r24, 0x01	; 1
     cf4:	a1 f4       	brne	.+40     	; 0xd1e <DIO_u8SetPinDirction+0x1aa>
			        {
			            SET_BIT(DIO_U8_DDRD_REG,copy_u8PinId);
     cf6:	a1 e3       	ldi	r26, 0x31	; 49
     cf8:	b0 e0       	ldi	r27, 0x00	; 0
     cfa:	e1 e3       	ldi	r30, 0x31	; 49
     cfc:	f0 e0       	ldi	r31, 0x00	; 0
     cfe:	80 81       	ld	r24, Z
     d00:	48 2f       	mov	r20, r24
     d02:	8b 81       	ldd	r24, Y+3	; 0x03
     d04:	28 2f       	mov	r18, r24
     d06:	30 e0       	ldi	r19, 0x00	; 0
     d08:	81 e0       	ldi	r24, 0x01	; 1
     d0a:	90 e0       	ldi	r25, 0x00	; 0
     d0c:	02 2e       	mov	r0, r18
     d0e:	02 c0       	rjmp	.+4      	; 0xd14 <DIO_u8SetPinDirction+0x1a0>
     d10:	88 0f       	add	r24, r24
     d12:	99 1f       	adc	r25, r25
     d14:	0a 94       	dec	r0
     d16:	e2 f7       	brpl	.-8      	; 0xd10 <DIO_u8SetPinDirction+0x19c>
     d18:	84 2b       	or	r24, r20
     d1a:	8c 93       	st	X, r24
     d1c:	16 c0       	rjmp	.+44     	; 0xd4a <DIO_u8SetPinDirction+0x1d6>
			        }
			        else
					{
                 		CLE_BIT(DIO_U8_DDRD_REG,copy_u8PinId);
     d1e:	a1 e3       	ldi	r26, 0x31	; 49
     d20:	b0 e0       	ldi	r27, 0x00	; 0
     d22:	e1 e3       	ldi	r30, 0x31	; 49
     d24:	f0 e0       	ldi	r31, 0x00	; 0
     d26:	80 81       	ld	r24, Z
     d28:	48 2f       	mov	r20, r24
     d2a:	8b 81       	ldd	r24, Y+3	; 0x03
     d2c:	28 2f       	mov	r18, r24
     d2e:	30 e0       	ldi	r19, 0x00	; 0
     d30:	81 e0       	ldi	r24, 0x01	; 1
     d32:	90 e0       	ldi	r25, 0x00	; 0
     d34:	02 2e       	mov	r0, r18
     d36:	02 c0       	rjmp	.+4      	; 0xd3c <DIO_u8SetPinDirction+0x1c8>
     d38:	88 0f       	add	r24, r24
     d3a:	99 1f       	adc	r25, r25
     d3c:	0a 94       	dec	r0
     d3e:	e2 f7       	brpl	.-8      	; 0xd38 <DIO_u8SetPinDirction+0x1c4>
     d40:	80 95       	com	r24
     d42:	84 23       	and	r24, r20
     d44:	8c 93       	st	X, r24
     d46:	01 c0       	rjmp	.+2      	; 0xd4a <DIO_u8SetPinDirction+0x1d6>
			break;
		}
	}
	else
	{
		Local_u8ErorrState =STD_TYPES_NOK; 
     d48:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ErorrState;
     d4a:	89 81       	ldd	r24, Y+1	; 0x01
}
     d4c:	26 96       	adiw	r28, 0x06	; 6
     d4e:	0f b6       	in	r0, 0x3f	; 63
     d50:	f8 94       	cli
     d52:	de bf       	out	0x3e, r29	; 62
     d54:	0f be       	out	0x3f, r0	; 63
     d56:	cd bf       	out	0x3d, r28	; 61
     d58:	cf 91       	pop	r28
     d5a:	df 91       	pop	r29
     d5c:	08 95       	ret

00000d5e <DIO_u8SetPinValue>:

u8 DIO_u8SetPinValue(u8 copy_u8PortId,u8 copy_u8PinId,u8 copy_u8PinValue)
{
     d5e:	df 93       	push	r29
     d60:	cf 93       	push	r28
     d62:	00 d0       	rcall	.+0      	; 0xd64 <DIO_u8SetPinValue+0x6>
     d64:	00 d0       	rcall	.+0      	; 0xd66 <DIO_u8SetPinValue+0x8>
     d66:	00 d0       	rcall	.+0      	; 0xd68 <DIO_u8SetPinValue+0xa>
     d68:	cd b7       	in	r28, 0x3d	; 61
     d6a:	de b7       	in	r29, 0x3e	; 62
     d6c:	8a 83       	std	Y+2, r24	; 0x02
     d6e:	6b 83       	std	Y+3, r22	; 0x03
     d70:	4c 83       	std	Y+4, r20	; 0x04
		u8 Local_u8ErorrState = STD_TYPES_OK;
     d72:	81 e0       	ldi	r24, 0x01	; 1
     d74:	89 83       	std	Y+1, r24	; 0x01
	if((copy_u8PortId<= DIO_U8_PORTD) && (copy_u8PinId <=DIO_U8_PIN7) && (copy_u8PinValue<=DIO_U8_OUTPUT))
     d76:	8a 81       	ldd	r24, Y+2	; 0x02
     d78:	84 30       	cpi	r24, 0x04	; 4
     d7a:	08 f0       	brcs	.+2      	; 0xd7e <DIO_u8SetPinValue+0x20>
     d7c:	da c0       	rjmp	.+436    	; 0xf32 <DIO_u8SetPinValue+0x1d4>
     d7e:	8b 81       	ldd	r24, Y+3	; 0x03
     d80:	88 30       	cpi	r24, 0x08	; 8
     d82:	08 f0       	brcs	.+2      	; 0xd86 <DIO_u8SetPinValue+0x28>
     d84:	d6 c0       	rjmp	.+428    	; 0xf32 <DIO_u8SetPinValue+0x1d4>
     d86:	8c 81       	ldd	r24, Y+4	; 0x04
     d88:	82 30       	cpi	r24, 0x02	; 2
     d8a:	08 f0       	brcs	.+2      	; 0xd8e <DIO_u8SetPinValue+0x30>
     d8c:	d2 c0       	rjmp	.+420    	; 0xf32 <DIO_u8SetPinValue+0x1d4>
	{
	  switch(copy_u8PortId)
     d8e:	8a 81       	ldd	r24, Y+2	; 0x02
     d90:	28 2f       	mov	r18, r24
     d92:	30 e0       	ldi	r19, 0x00	; 0
     d94:	3e 83       	std	Y+6, r19	; 0x06
     d96:	2d 83       	std	Y+5, r18	; 0x05
     d98:	8d 81       	ldd	r24, Y+5	; 0x05
     d9a:	9e 81       	ldd	r25, Y+6	; 0x06
     d9c:	81 30       	cpi	r24, 0x01	; 1
     d9e:	91 05       	cpc	r25, r1
     da0:	09 f4       	brne	.+2      	; 0xda4 <DIO_u8SetPinValue+0x46>
     da2:	43 c0       	rjmp	.+134    	; 0xe2a <DIO_u8SetPinValue+0xcc>
     da4:	2d 81       	ldd	r18, Y+5	; 0x05
     da6:	3e 81       	ldd	r19, Y+6	; 0x06
     da8:	22 30       	cpi	r18, 0x02	; 2
     daa:	31 05       	cpc	r19, r1
     dac:	2c f4       	brge	.+10     	; 0xdb8 <DIO_u8SetPinValue+0x5a>
     dae:	8d 81       	ldd	r24, Y+5	; 0x05
     db0:	9e 81       	ldd	r25, Y+6	; 0x06
     db2:	00 97       	sbiw	r24, 0x00	; 0
     db4:	71 f0       	breq	.+28     	; 0xdd2 <DIO_u8SetPinValue+0x74>
     db6:	be c0       	rjmp	.+380    	; 0xf34 <DIO_u8SetPinValue+0x1d6>
     db8:	2d 81       	ldd	r18, Y+5	; 0x05
     dba:	3e 81       	ldd	r19, Y+6	; 0x06
     dbc:	22 30       	cpi	r18, 0x02	; 2
     dbe:	31 05       	cpc	r19, r1
     dc0:	09 f4       	brne	.+2      	; 0xdc4 <DIO_u8SetPinValue+0x66>
     dc2:	5f c0       	rjmp	.+190    	; 0xe82 <DIO_u8SetPinValue+0x124>
     dc4:	8d 81       	ldd	r24, Y+5	; 0x05
     dc6:	9e 81       	ldd	r25, Y+6	; 0x06
     dc8:	83 30       	cpi	r24, 0x03	; 3
     dca:	91 05       	cpc	r25, r1
     dcc:	09 f4       	brne	.+2      	; 0xdd0 <DIO_u8SetPinValue+0x72>
     dce:	85 c0       	rjmp	.+266    	; 0xeda <DIO_u8SetPinValue+0x17c>
     dd0:	b1 c0       	rjmp	.+354    	; 0xf34 <DIO_u8SetPinValue+0x1d6>
	  {
		  case DIO_U8_PORTA:
		       if(copy_u8PinValue==DIO_U8_OUTPUT)
     dd2:	8c 81       	ldd	r24, Y+4	; 0x04
     dd4:	81 30       	cpi	r24, 0x01	; 1
     dd6:	a1 f4       	brne	.+40     	; 0xe00 <DIO_u8SetPinValue+0xa2>
	       	   {
			       SET_BIT(DIO_U8_PORTA_REG,copy_u8PinId);
     dd8:	ab e3       	ldi	r26, 0x3B	; 59
     dda:	b0 e0       	ldi	r27, 0x00	; 0
     ddc:	eb e3       	ldi	r30, 0x3B	; 59
     dde:	f0 e0       	ldi	r31, 0x00	; 0
     de0:	80 81       	ld	r24, Z
     de2:	48 2f       	mov	r20, r24
     de4:	8b 81       	ldd	r24, Y+3	; 0x03
     de6:	28 2f       	mov	r18, r24
     de8:	30 e0       	ldi	r19, 0x00	; 0
     dea:	81 e0       	ldi	r24, 0x01	; 1
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	02 2e       	mov	r0, r18
     df0:	02 c0       	rjmp	.+4      	; 0xdf6 <DIO_u8SetPinValue+0x98>
     df2:	88 0f       	add	r24, r24
     df4:	99 1f       	adc	r25, r25
     df6:	0a 94       	dec	r0
     df8:	e2 f7       	brpl	.-8      	; 0xdf2 <DIO_u8SetPinValue+0x94>
     dfa:	84 2b       	or	r24, r20
     dfc:	8c 93       	st	X, r24
     dfe:	9a c0       	rjmp	.+308    	; 0xf34 <DIO_u8SetPinValue+0x1d6>
		       }
		       else
			   {
				   CLE_BIT(DIO_U8_PORTA_REG,copy_u8PinId);
     e00:	ab e3       	ldi	r26, 0x3B	; 59
     e02:	b0 e0       	ldi	r27, 0x00	; 0
     e04:	eb e3       	ldi	r30, 0x3B	; 59
     e06:	f0 e0       	ldi	r31, 0x00	; 0
     e08:	80 81       	ld	r24, Z
     e0a:	48 2f       	mov	r20, r24
     e0c:	8b 81       	ldd	r24, Y+3	; 0x03
     e0e:	28 2f       	mov	r18, r24
     e10:	30 e0       	ldi	r19, 0x00	; 0
     e12:	81 e0       	ldi	r24, 0x01	; 1
     e14:	90 e0       	ldi	r25, 0x00	; 0
     e16:	02 2e       	mov	r0, r18
     e18:	02 c0       	rjmp	.+4      	; 0xe1e <DIO_u8SetPinValue+0xc0>
     e1a:	88 0f       	add	r24, r24
     e1c:	99 1f       	adc	r25, r25
     e1e:	0a 94       	dec	r0
     e20:	e2 f7       	brpl	.-8      	; 0xe1a <DIO_u8SetPinValue+0xbc>
     e22:	80 95       	com	r24
     e24:	84 23       	and	r24, r20
     e26:	8c 93       	st	X, r24
     e28:	85 c0       	rjmp	.+266    	; 0xf34 <DIO_u8SetPinValue+0x1d6>
			   }
		  break;
		  case DIO_U8_PORTB:
		       if(copy_u8PinValue==DIO_U8_OUTPUT)
     e2a:	8c 81       	ldd	r24, Y+4	; 0x04
     e2c:	81 30       	cpi	r24, 0x01	; 1
     e2e:	a1 f4       	brne	.+40     	; 0xe58 <DIO_u8SetPinValue+0xfa>
	       	   {
			       SET_BIT(DIO_U8_PORTB_REG,copy_u8PinId);
     e30:	a8 e3       	ldi	r26, 0x38	; 56
     e32:	b0 e0       	ldi	r27, 0x00	; 0
     e34:	e8 e3       	ldi	r30, 0x38	; 56
     e36:	f0 e0       	ldi	r31, 0x00	; 0
     e38:	80 81       	ld	r24, Z
     e3a:	48 2f       	mov	r20, r24
     e3c:	8b 81       	ldd	r24, Y+3	; 0x03
     e3e:	28 2f       	mov	r18, r24
     e40:	30 e0       	ldi	r19, 0x00	; 0
     e42:	81 e0       	ldi	r24, 0x01	; 1
     e44:	90 e0       	ldi	r25, 0x00	; 0
     e46:	02 2e       	mov	r0, r18
     e48:	02 c0       	rjmp	.+4      	; 0xe4e <DIO_u8SetPinValue+0xf0>
     e4a:	88 0f       	add	r24, r24
     e4c:	99 1f       	adc	r25, r25
     e4e:	0a 94       	dec	r0
     e50:	e2 f7       	brpl	.-8      	; 0xe4a <DIO_u8SetPinValue+0xec>
     e52:	84 2b       	or	r24, r20
     e54:	8c 93       	st	X, r24
     e56:	6e c0       	rjmp	.+220    	; 0xf34 <DIO_u8SetPinValue+0x1d6>
		       }
		       else
			   {
				   CLE_BIT(DIO_U8_PORTB_REG,copy_u8PinId);
     e58:	a8 e3       	ldi	r26, 0x38	; 56
     e5a:	b0 e0       	ldi	r27, 0x00	; 0
     e5c:	e8 e3       	ldi	r30, 0x38	; 56
     e5e:	f0 e0       	ldi	r31, 0x00	; 0
     e60:	80 81       	ld	r24, Z
     e62:	48 2f       	mov	r20, r24
     e64:	8b 81       	ldd	r24, Y+3	; 0x03
     e66:	28 2f       	mov	r18, r24
     e68:	30 e0       	ldi	r19, 0x00	; 0
     e6a:	81 e0       	ldi	r24, 0x01	; 1
     e6c:	90 e0       	ldi	r25, 0x00	; 0
     e6e:	02 2e       	mov	r0, r18
     e70:	02 c0       	rjmp	.+4      	; 0xe76 <DIO_u8SetPinValue+0x118>
     e72:	88 0f       	add	r24, r24
     e74:	99 1f       	adc	r25, r25
     e76:	0a 94       	dec	r0
     e78:	e2 f7       	brpl	.-8      	; 0xe72 <DIO_u8SetPinValue+0x114>
     e7a:	80 95       	com	r24
     e7c:	84 23       	and	r24, r20
     e7e:	8c 93       	st	X, r24
     e80:	59 c0       	rjmp	.+178    	; 0xf34 <DIO_u8SetPinValue+0x1d6>
			   }
		  break;
		  case DIO_U8_PORTC:
		       if(copy_u8PinValue==DIO_U8_OUTPUT)
     e82:	8c 81       	ldd	r24, Y+4	; 0x04
     e84:	81 30       	cpi	r24, 0x01	; 1
     e86:	a1 f4       	brne	.+40     	; 0xeb0 <DIO_u8SetPinValue+0x152>
	       	   {
			       SET_BIT(DIO_U8_PORTC_REG,copy_u8PinId);
     e88:	a5 e3       	ldi	r26, 0x35	; 53
     e8a:	b0 e0       	ldi	r27, 0x00	; 0
     e8c:	e5 e3       	ldi	r30, 0x35	; 53
     e8e:	f0 e0       	ldi	r31, 0x00	; 0
     e90:	80 81       	ld	r24, Z
     e92:	48 2f       	mov	r20, r24
     e94:	8b 81       	ldd	r24, Y+3	; 0x03
     e96:	28 2f       	mov	r18, r24
     e98:	30 e0       	ldi	r19, 0x00	; 0
     e9a:	81 e0       	ldi	r24, 0x01	; 1
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	02 2e       	mov	r0, r18
     ea0:	02 c0       	rjmp	.+4      	; 0xea6 <DIO_u8SetPinValue+0x148>
     ea2:	88 0f       	add	r24, r24
     ea4:	99 1f       	adc	r25, r25
     ea6:	0a 94       	dec	r0
     ea8:	e2 f7       	brpl	.-8      	; 0xea2 <DIO_u8SetPinValue+0x144>
     eaa:	84 2b       	or	r24, r20
     eac:	8c 93       	st	X, r24
     eae:	42 c0       	rjmp	.+132    	; 0xf34 <DIO_u8SetPinValue+0x1d6>
		       }
		       else
			   {
				   CLE_BIT(DIO_U8_PORTC_REG,copy_u8PinId);
     eb0:	a5 e3       	ldi	r26, 0x35	; 53
     eb2:	b0 e0       	ldi	r27, 0x00	; 0
     eb4:	e5 e3       	ldi	r30, 0x35	; 53
     eb6:	f0 e0       	ldi	r31, 0x00	; 0
     eb8:	80 81       	ld	r24, Z
     eba:	48 2f       	mov	r20, r24
     ebc:	8b 81       	ldd	r24, Y+3	; 0x03
     ebe:	28 2f       	mov	r18, r24
     ec0:	30 e0       	ldi	r19, 0x00	; 0
     ec2:	81 e0       	ldi	r24, 0x01	; 1
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	02 2e       	mov	r0, r18
     ec8:	02 c0       	rjmp	.+4      	; 0xece <DIO_u8SetPinValue+0x170>
     eca:	88 0f       	add	r24, r24
     ecc:	99 1f       	adc	r25, r25
     ece:	0a 94       	dec	r0
     ed0:	e2 f7       	brpl	.-8      	; 0xeca <DIO_u8SetPinValue+0x16c>
     ed2:	80 95       	com	r24
     ed4:	84 23       	and	r24, r20
     ed6:	8c 93       	st	X, r24
     ed8:	2d c0       	rjmp	.+90     	; 0xf34 <DIO_u8SetPinValue+0x1d6>
			   }
		  break;
		  case DIO_U8_PORTD:
		       if(copy_u8PinValue==DIO_U8_OUTPUT)
     eda:	8c 81       	ldd	r24, Y+4	; 0x04
     edc:	81 30       	cpi	r24, 0x01	; 1
     ede:	a1 f4       	brne	.+40     	; 0xf08 <DIO_u8SetPinValue+0x1aa>
	       	   {
			       SET_BIT(DIO_U8_PORTD_REG,copy_u8PinId);
     ee0:	a2 e3       	ldi	r26, 0x32	; 50
     ee2:	b0 e0       	ldi	r27, 0x00	; 0
     ee4:	e2 e3       	ldi	r30, 0x32	; 50
     ee6:	f0 e0       	ldi	r31, 0x00	; 0
     ee8:	80 81       	ld	r24, Z
     eea:	48 2f       	mov	r20, r24
     eec:	8b 81       	ldd	r24, Y+3	; 0x03
     eee:	28 2f       	mov	r18, r24
     ef0:	30 e0       	ldi	r19, 0x00	; 0
     ef2:	81 e0       	ldi	r24, 0x01	; 1
     ef4:	90 e0       	ldi	r25, 0x00	; 0
     ef6:	02 2e       	mov	r0, r18
     ef8:	02 c0       	rjmp	.+4      	; 0xefe <DIO_u8SetPinValue+0x1a0>
     efa:	88 0f       	add	r24, r24
     efc:	99 1f       	adc	r25, r25
     efe:	0a 94       	dec	r0
     f00:	e2 f7       	brpl	.-8      	; 0xefa <DIO_u8SetPinValue+0x19c>
     f02:	84 2b       	or	r24, r20
     f04:	8c 93       	st	X, r24
     f06:	16 c0       	rjmp	.+44     	; 0xf34 <DIO_u8SetPinValue+0x1d6>
		       }
		       else
			   {
				   CLE_BIT(DIO_U8_PORTD_REG,copy_u8PinId);
     f08:	a2 e3       	ldi	r26, 0x32	; 50
     f0a:	b0 e0       	ldi	r27, 0x00	; 0
     f0c:	e2 e3       	ldi	r30, 0x32	; 50
     f0e:	f0 e0       	ldi	r31, 0x00	; 0
     f10:	80 81       	ld	r24, Z
     f12:	48 2f       	mov	r20, r24
     f14:	8b 81       	ldd	r24, Y+3	; 0x03
     f16:	28 2f       	mov	r18, r24
     f18:	30 e0       	ldi	r19, 0x00	; 0
     f1a:	81 e0       	ldi	r24, 0x01	; 1
     f1c:	90 e0       	ldi	r25, 0x00	; 0
     f1e:	02 2e       	mov	r0, r18
     f20:	02 c0       	rjmp	.+4      	; 0xf26 <DIO_u8SetPinValue+0x1c8>
     f22:	88 0f       	add	r24, r24
     f24:	99 1f       	adc	r25, r25
     f26:	0a 94       	dec	r0
     f28:	e2 f7       	brpl	.-8      	; 0xf22 <DIO_u8SetPinValue+0x1c4>
     f2a:	80 95       	com	r24
     f2c:	84 23       	and	r24, r20
     f2e:	8c 93       	st	X, r24
     f30:	01 c0       	rjmp	.+2      	; 0xf34 <DIO_u8SetPinValue+0x1d6>
		  
	  }
	}
	else
	{
	Local_u8ErorrState =STD_TYPES_NOK; 
     f32:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ErorrState;
     f34:	89 81       	ldd	r24, Y+1	; 0x01
	
}
     f36:	26 96       	adiw	r28, 0x06	; 6
     f38:	0f b6       	in	r0, 0x3f	; 63
     f3a:	f8 94       	cli
     f3c:	de bf       	out	0x3e, r29	; 62
     f3e:	0f be       	out	0x3f, r0	; 63
     f40:	cd bf       	out	0x3d, r28	; 61
     f42:	cf 91       	pop	r28
     f44:	df 91       	pop	r29
     f46:	08 95       	ret

00000f48 <DIO_u8GetPinValue>:

u8 DIO_u8GetPinValue(u8 copy_u8PortId,u8 copy_u8PinId,u8 *copy_pu8PinValue )
{
     f48:	df 93       	push	r29
     f4a:	cf 93       	push	r28
     f4c:	cd b7       	in	r28, 0x3d	; 61
     f4e:	de b7       	in	r29, 0x3e	; 62
     f50:	27 97       	sbiw	r28, 0x07	; 7
     f52:	0f b6       	in	r0, 0x3f	; 63
     f54:	f8 94       	cli
     f56:	de bf       	out	0x3e, r29	; 62
     f58:	0f be       	out	0x3f, r0	; 63
     f5a:	cd bf       	out	0x3d, r28	; 61
     f5c:	8a 83       	std	Y+2, r24	; 0x02
     f5e:	6b 83       	std	Y+3, r22	; 0x03
     f60:	5d 83       	std	Y+5, r21	; 0x05
     f62:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErorrState = STD_TYPES_OK;
     f64:	81 e0       	ldi	r24, 0x01	; 1
     f66:	89 83       	std	Y+1, r24	; 0x01
	if((copy_u8PortId<= DIO_U8_PORTD) && (copy_u8PinId <=DIO_U8_PIN7))
     f68:	8a 81       	ldd	r24, Y+2	; 0x02
     f6a:	84 30       	cpi	r24, 0x04	; 4
     f6c:	08 f0       	brcs	.+2      	; 0xf70 <DIO_u8GetPinValue+0x28>
     f6e:	75 c0       	rjmp	.+234    	; 0x105a <DIO_u8GetPinValue+0x112>
     f70:	8b 81       	ldd	r24, Y+3	; 0x03
     f72:	88 30       	cpi	r24, 0x08	; 8
     f74:	08 f0       	brcs	.+2      	; 0xf78 <DIO_u8GetPinValue+0x30>
     f76:	71 c0       	rjmp	.+226    	; 0x105a <DIO_u8GetPinValue+0x112>
	{
	 switch(copy_u8PortId)
     f78:	8a 81       	ldd	r24, Y+2	; 0x02
     f7a:	28 2f       	mov	r18, r24
     f7c:	30 e0       	ldi	r19, 0x00	; 0
     f7e:	3f 83       	std	Y+7, r19	; 0x07
     f80:	2e 83       	std	Y+6, r18	; 0x06
     f82:	4e 81       	ldd	r20, Y+6	; 0x06
     f84:	5f 81       	ldd	r21, Y+7	; 0x07
     f86:	41 30       	cpi	r20, 0x01	; 1
     f88:	51 05       	cpc	r21, r1
     f8a:	59 f1       	breq	.+86     	; 0xfe2 <DIO_u8GetPinValue+0x9a>
     f8c:	8e 81       	ldd	r24, Y+6	; 0x06
     f8e:	9f 81       	ldd	r25, Y+7	; 0x07
     f90:	82 30       	cpi	r24, 0x02	; 2
     f92:	91 05       	cpc	r25, r1
     f94:	34 f4       	brge	.+12     	; 0xfa2 <DIO_u8GetPinValue+0x5a>
     f96:	2e 81       	ldd	r18, Y+6	; 0x06
     f98:	3f 81       	ldd	r19, Y+7	; 0x07
     f9a:	21 15       	cp	r18, r1
     f9c:	31 05       	cpc	r19, r1
     f9e:	69 f0       	breq	.+26     	; 0xfba <DIO_u8GetPinValue+0x72>
     fa0:	5d c0       	rjmp	.+186    	; 0x105c <DIO_u8GetPinValue+0x114>
     fa2:	4e 81       	ldd	r20, Y+6	; 0x06
     fa4:	5f 81       	ldd	r21, Y+7	; 0x07
     fa6:	42 30       	cpi	r20, 0x02	; 2
     fa8:	51 05       	cpc	r21, r1
     faa:	79 f1       	breq	.+94     	; 0x100a <DIO_u8GetPinValue+0xc2>
     fac:	8e 81       	ldd	r24, Y+6	; 0x06
     fae:	9f 81       	ldd	r25, Y+7	; 0x07
     fb0:	83 30       	cpi	r24, 0x03	; 3
     fb2:	91 05       	cpc	r25, r1
     fb4:	09 f4       	brne	.+2      	; 0xfb8 <DIO_u8GetPinValue+0x70>
     fb6:	3d c0       	rjmp	.+122    	; 0x1032 <DIO_u8GetPinValue+0xea>
     fb8:	51 c0       	rjmp	.+162    	; 0x105c <DIO_u8GetPinValue+0x114>
	  {
		 case DIO_U8_PORTA:
		 
			  *copy_pu8PinValue = GET_BIT(DIO_U8_PINA_REG,copy_u8PinId);
     fba:	e9 e3       	ldi	r30, 0x39	; 57
     fbc:	f0 e0       	ldi	r31, 0x00	; 0
     fbe:	80 81       	ld	r24, Z
     fc0:	28 2f       	mov	r18, r24
     fc2:	30 e0       	ldi	r19, 0x00	; 0
     fc4:	8b 81       	ldd	r24, Y+3	; 0x03
     fc6:	88 2f       	mov	r24, r24
     fc8:	90 e0       	ldi	r25, 0x00	; 0
     fca:	a9 01       	movw	r20, r18
     fcc:	02 c0       	rjmp	.+4      	; 0xfd2 <DIO_u8GetPinValue+0x8a>
     fce:	55 95       	asr	r21
     fd0:	47 95       	ror	r20
     fd2:	8a 95       	dec	r24
     fd4:	e2 f7       	brpl	.-8      	; 0xfce <DIO_u8GetPinValue+0x86>
     fd6:	ca 01       	movw	r24, r20
     fd8:	81 70       	andi	r24, 0x01	; 1
     fda:	ec 81       	ldd	r30, Y+4	; 0x04
     fdc:	fd 81       	ldd	r31, Y+5	; 0x05
     fde:	80 83       	st	Z, r24
     fe0:	3d c0       	rjmp	.+122    	; 0x105c <DIO_u8GetPinValue+0x114>
		
		 break;
		 case DIO_U8_PORTB:
		 
			  *copy_pu8PinValue = GET_BIT(DIO_U8_PINB_REG,copy_u8PinId);
     fe2:	e6 e3       	ldi	r30, 0x36	; 54
     fe4:	f0 e0       	ldi	r31, 0x00	; 0
     fe6:	80 81       	ld	r24, Z
     fe8:	28 2f       	mov	r18, r24
     fea:	30 e0       	ldi	r19, 0x00	; 0
     fec:	8b 81       	ldd	r24, Y+3	; 0x03
     fee:	88 2f       	mov	r24, r24
     ff0:	90 e0       	ldi	r25, 0x00	; 0
     ff2:	a9 01       	movw	r20, r18
     ff4:	02 c0       	rjmp	.+4      	; 0xffa <DIO_u8GetPinValue+0xb2>
     ff6:	55 95       	asr	r21
     ff8:	47 95       	ror	r20
     ffa:	8a 95       	dec	r24
     ffc:	e2 f7       	brpl	.-8      	; 0xff6 <DIO_u8GetPinValue+0xae>
     ffe:	ca 01       	movw	r24, r20
    1000:	81 70       	andi	r24, 0x01	; 1
    1002:	ec 81       	ldd	r30, Y+4	; 0x04
    1004:	fd 81       	ldd	r31, Y+5	; 0x05
    1006:	80 83       	st	Z, r24
    1008:	29 c0       	rjmp	.+82     	; 0x105c <DIO_u8GetPinValue+0x114>
		
		 break;
		 case DIO_U8_PORTC:
		 
			  *copy_pu8PinValue = GET_BIT(DIO_U8_PINC_REG,copy_u8PinId);
    100a:	e3 e3       	ldi	r30, 0x33	; 51
    100c:	f0 e0       	ldi	r31, 0x00	; 0
    100e:	80 81       	ld	r24, Z
    1010:	28 2f       	mov	r18, r24
    1012:	30 e0       	ldi	r19, 0x00	; 0
    1014:	8b 81       	ldd	r24, Y+3	; 0x03
    1016:	88 2f       	mov	r24, r24
    1018:	90 e0       	ldi	r25, 0x00	; 0
    101a:	a9 01       	movw	r20, r18
    101c:	02 c0       	rjmp	.+4      	; 0x1022 <DIO_u8GetPinValue+0xda>
    101e:	55 95       	asr	r21
    1020:	47 95       	ror	r20
    1022:	8a 95       	dec	r24
    1024:	e2 f7       	brpl	.-8      	; 0x101e <DIO_u8GetPinValue+0xd6>
    1026:	ca 01       	movw	r24, r20
    1028:	81 70       	andi	r24, 0x01	; 1
    102a:	ec 81       	ldd	r30, Y+4	; 0x04
    102c:	fd 81       	ldd	r31, Y+5	; 0x05
    102e:	80 83       	st	Z, r24
    1030:	15 c0       	rjmp	.+42     	; 0x105c <DIO_u8GetPinValue+0x114>
		
		 break;
		 case DIO_U8_PORTD:
		 
			  *copy_pu8PinValue = GET_BIT(DIO_U8_PIND_REG,copy_u8PinId);
    1032:	e0 e3       	ldi	r30, 0x30	; 48
    1034:	f0 e0       	ldi	r31, 0x00	; 0
    1036:	80 81       	ld	r24, Z
    1038:	28 2f       	mov	r18, r24
    103a:	30 e0       	ldi	r19, 0x00	; 0
    103c:	8b 81       	ldd	r24, Y+3	; 0x03
    103e:	88 2f       	mov	r24, r24
    1040:	90 e0       	ldi	r25, 0x00	; 0
    1042:	a9 01       	movw	r20, r18
    1044:	02 c0       	rjmp	.+4      	; 0x104a <DIO_u8GetPinValue+0x102>
    1046:	55 95       	asr	r21
    1048:	47 95       	ror	r20
    104a:	8a 95       	dec	r24
    104c:	e2 f7       	brpl	.-8      	; 0x1046 <DIO_u8GetPinValue+0xfe>
    104e:	ca 01       	movw	r24, r20
    1050:	81 70       	andi	r24, 0x01	; 1
    1052:	ec 81       	ldd	r30, Y+4	; 0x04
    1054:	fd 81       	ldd	r31, Y+5	; 0x05
    1056:	80 83       	st	Z, r24
    1058:	01 c0       	rjmp	.+2      	; 0x105c <DIO_u8GetPinValue+0x114>
		 break;
	  }
	}
	else
	{
	Local_u8ErorrState =STD_TYPES_NOK;	
    105a:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ErorrState;
    105c:	89 81       	ldd	r24, Y+1	; 0x01
}
    105e:	27 96       	adiw	r28, 0x07	; 7
    1060:	0f b6       	in	r0, 0x3f	; 63
    1062:	f8 94       	cli
    1064:	de bf       	out	0x3e, r29	; 62
    1066:	0f be       	out	0x3f, r0	; 63
    1068:	cd bf       	out	0x3d, r28	; 61
    106a:	cf 91       	pop	r28
    106c:	df 91       	pop	r29
    106e:	08 95       	ret

00001070 <DIO_u8SetPortDirction>:

u8 DIO_u8SetPortDirction(u8 copy_u8PortId,u8 copy_u8PortDirction )
{
    1070:	df 93       	push	r29
    1072:	cf 93       	push	r28
    1074:	cd b7       	in	r28, 0x3d	; 61
    1076:	de b7       	in	r29, 0x3e	; 62
    1078:	2d 97       	sbiw	r28, 0x0d	; 13
    107a:	0f b6       	in	r0, 0x3f	; 63
    107c:	f8 94       	cli
    107e:	de bf       	out	0x3e, r29	; 62
    1080:	0f be       	out	0x3f, r0	; 63
    1082:	cd bf       	out	0x3d, r28	; 61
    1084:	8a 83       	std	Y+2, r24	; 0x02
    1086:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErorrState = STD_TYPES_OK; 	
    1088:	81 e0       	ldi	r24, 0x01	; 1
    108a:	89 83       	std	Y+1, r24	; 0x01
	if((copy_u8PortId<=DIO_U8_PORTD) && (copy_u8PortDirction<=DIO_U8_OUTPUT))
    108c:	8a 81       	ldd	r24, Y+2	; 0x02
    108e:	84 30       	cpi	r24, 0x04	; 4
    1090:	08 f0       	brcs	.+2      	; 0x1094 <DIO_u8SetPortDirction+0x24>
    1092:	6b c0       	rjmp	.+214    	; 0x116a <DIO_u8SetPortDirction+0xfa>
    1094:	8b 81       	ldd	r24, Y+3	; 0x03
    1096:	82 30       	cpi	r24, 0x02	; 2
    1098:	08 f0       	brcs	.+2      	; 0x109c <DIO_u8SetPortDirction+0x2c>
    109a:	67 c0       	rjmp	.+206    	; 0x116a <DIO_u8SetPortDirction+0xfa>
	{
		switch(copy_u8PortId)
    109c:	8a 81       	ldd	r24, Y+2	; 0x02
    109e:	28 2f       	mov	r18, r24
    10a0:	30 e0       	ldi	r19, 0x00	; 0
    10a2:	3d 87       	std	Y+13, r19	; 0x0d
    10a4:	2c 87       	std	Y+12, r18	; 0x0c
    10a6:	8c 85       	ldd	r24, Y+12	; 0x0c
    10a8:	9d 85       	ldd	r25, Y+13	; 0x0d
    10aa:	81 30       	cpi	r24, 0x01	; 1
    10ac:	91 05       	cpc	r25, r1
    10ae:	39 f1       	breq	.+78     	; 0x10fe <DIO_u8SetPortDirction+0x8e>
    10b0:	2c 85       	ldd	r18, Y+12	; 0x0c
    10b2:	3d 85       	ldd	r19, Y+13	; 0x0d
    10b4:	22 30       	cpi	r18, 0x02	; 2
    10b6:	31 05       	cpc	r19, r1
    10b8:	2c f4       	brge	.+10     	; 0x10c4 <DIO_u8SetPortDirction+0x54>
    10ba:	8c 85       	ldd	r24, Y+12	; 0x0c
    10bc:	9d 85       	ldd	r25, Y+13	; 0x0d
    10be:	00 97       	sbiw	r24, 0x00	; 0
    10c0:	61 f0       	breq	.+24     	; 0x10da <DIO_u8SetPortDirction+0x6a>
    10c2:	54 c0       	rjmp	.+168    	; 0x116c <DIO_u8SetPortDirction+0xfc>
    10c4:	2c 85       	ldd	r18, Y+12	; 0x0c
    10c6:	3d 85       	ldd	r19, Y+13	; 0x0d
    10c8:	22 30       	cpi	r18, 0x02	; 2
    10ca:	31 05       	cpc	r19, r1
    10cc:	51 f1       	breq	.+84     	; 0x1122 <DIO_u8SetPortDirction+0xb2>
    10ce:	8c 85       	ldd	r24, Y+12	; 0x0c
    10d0:	9d 85       	ldd	r25, Y+13	; 0x0d
    10d2:	83 30       	cpi	r24, 0x03	; 3
    10d4:	91 05       	cpc	r25, r1
    10d6:	b9 f1       	breq	.+110    	; 0x1146 <DIO_u8SetPortDirction+0xd6>
    10d8:	49 c0       	rjmp	.+146    	; 0x116c <DIO_u8SetPortDirction+0xfc>
		{
			case DIO_U8_PORTA:
			     if(copy_u8PortDirction==DIO_U8_OUTPUT)
    10da:	8b 81       	ldd	r24, Y+3	; 0x03
    10dc:	81 30       	cpi	r24, 0x01	; 1
    10de:	41 f4       	brne	.+16     	; 0x10f0 <DIO_u8SetPortDirction+0x80>
			     { 
			     SET_PORT(DIO_U8_DDRA_REG);	
    10e0:	ea e3       	ldi	r30, 0x3A	; 58
    10e2:	f0 e0       	ldi	r31, 0x00	; 0
    10e4:	90 81       	ld	r25, Z
    10e6:	ea e3       	ldi	r30, 0x3A	; 58
    10e8:	f0 e0       	ldi	r31, 0x00	; 0
    10ea:	8f ef       	ldi	r24, 0xFF	; 255
    10ec:	80 83       	st	Z, r24
    10ee:	3e c0       	rjmp	.+124    	; 0x116c <DIO_u8SetPortDirction+0xfc>
			     }
			     else
			     {
			      CLE_PORT(DIO_U8_DDRA_REG);
    10f0:	ea e3       	ldi	r30, 0x3A	; 58
    10f2:	f0 e0       	ldi	r31, 0x00	; 0
    10f4:	20 81       	ld	r18, Z
    10f6:	ea e3       	ldi	r30, 0x3A	; 58
    10f8:	f0 e0       	ldi	r31, 0x00	; 0
    10fa:	10 82       	st	Z, r1
    10fc:	37 c0       	rjmp	.+110    	; 0x116c <DIO_u8SetPortDirction+0xfc>
	       		 }
     		break;
			case DIO_U8_PORTB:
			     if(copy_u8PortDirction==DIO_U8_OUTPUT)
    10fe:	8b 81       	ldd	r24, Y+3	; 0x03
    1100:	81 30       	cpi	r24, 0x01	; 1
    1102:	41 f4       	brne	.+16     	; 0x1114 <DIO_u8SetPortDirction+0xa4>
			     { 
			     SET_PORT(DIO_U8_DDRB_REG);	
    1104:	e7 e3       	ldi	r30, 0x37	; 55
    1106:	f0 e0       	ldi	r31, 0x00	; 0
    1108:	30 81       	ld	r19, Z
    110a:	e7 e3       	ldi	r30, 0x37	; 55
    110c:	f0 e0       	ldi	r31, 0x00	; 0
    110e:	8f ef       	ldi	r24, 0xFF	; 255
    1110:	80 83       	st	Z, r24
    1112:	2c c0       	rjmp	.+88     	; 0x116c <DIO_u8SetPortDirction+0xfc>
			     }
			     else
			     {
			      CLE_PORT(DIO_U8_DDRB_REG);
    1114:	e7 e3       	ldi	r30, 0x37	; 55
    1116:	f0 e0       	ldi	r31, 0x00	; 0
    1118:	80 81       	ld	r24, Z
    111a:	e7 e3       	ldi	r30, 0x37	; 55
    111c:	f0 e0       	ldi	r31, 0x00	; 0
    111e:	10 82       	st	Z, r1
    1120:	25 c0       	rjmp	.+74     	; 0x116c <DIO_u8SetPortDirction+0xfc>
	       		 }
     		break;
			case DIO_U8_PORTC:
			     if(copy_u8PortDirction==DIO_U8_OUTPUT)
    1122:	8b 81       	ldd	r24, Y+3	; 0x03
    1124:	81 30       	cpi	r24, 0x01	; 1
    1126:	41 f4       	brne	.+16     	; 0x1138 <DIO_u8SetPortDirction+0xc8>
			     { 
			     SET_PORT(DIO_U8_DDRC_REG);	
    1128:	e4 e3       	ldi	r30, 0x34	; 52
    112a:	f0 e0       	ldi	r31, 0x00	; 0
    112c:	90 81       	ld	r25, Z
    112e:	e4 e3       	ldi	r30, 0x34	; 52
    1130:	f0 e0       	ldi	r31, 0x00	; 0
    1132:	8f ef       	ldi	r24, 0xFF	; 255
    1134:	80 83       	st	Z, r24
    1136:	1a c0       	rjmp	.+52     	; 0x116c <DIO_u8SetPortDirction+0xfc>
			     }
			     else
			     {
			      CLE_PORT(DIO_U8_DDRC_REG);
    1138:	e4 e3       	ldi	r30, 0x34	; 52
    113a:	f0 e0       	ldi	r31, 0x00	; 0
    113c:	20 81       	ld	r18, Z
    113e:	e4 e3       	ldi	r30, 0x34	; 52
    1140:	f0 e0       	ldi	r31, 0x00	; 0
    1142:	10 82       	st	Z, r1
    1144:	13 c0       	rjmp	.+38     	; 0x116c <DIO_u8SetPortDirction+0xfc>
	       		 }
     		break;
			case DIO_U8_PORTD:
			     if(copy_u8PortDirction==DIO_U8_OUTPUT)
    1146:	8b 81       	ldd	r24, Y+3	; 0x03
    1148:	81 30       	cpi	r24, 0x01	; 1
    114a:	41 f4       	brne	.+16     	; 0x115c <DIO_u8SetPortDirction+0xec>
			     { 
			     SET_PORT(DIO_U8_DDRD_REG);	
    114c:	e1 e3       	ldi	r30, 0x31	; 49
    114e:	f0 e0       	ldi	r31, 0x00	; 0
    1150:	30 81       	ld	r19, Z
    1152:	e1 e3       	ldi	r30, 0x31	; 49
    1154:	f0 e0       	ldi	r31, 0x00	; 0
    1156:	8f ef       	ldi	r24, 0xFF	; 255
    1158:	80 83       	st	Z, r24
    115a:	08 c0       	rjmp	.+16     	; 0x116c <DIO_u8SetPortDirction+0xfc>
			     }
			     else
			     {
			      CLE_PORT(DIO_U8_DDRD_REG);
    115c:	e1 e3       	ldi	r30, 0x31	; 49
    115e:	f0 e0       	ldi	r31, 0x00	; 0
    1160:	80 81       	ld	r24, Z
    1162:	e1 e3       	ldi	r30, 0x31	; 49
    1164:	f0 e0       	ldi	r31, 0x00	; 0
    1166:	10 82       	st	Z, r1
    1168:	01 c0       	rjmp	.+2      	; 0x116c <DIO_u8SetPortDirction+0xfc>
     		break;
		}
	}
    else
	{
	Local_u8ErorrState =STD_TYPES_NOK;	
    116a:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ErorrState;	
    116c:	89 81       	ldd	r24, Y+1	; 0x01
}
    116e:	2d 96       	adiw	r28, 0x0d	; 13
    1170:	0f b6       	in	r0, 0x3f	; 63
    1172:	f8 94       	cli
    1174:	de bf       	out	0x3e, r29	; 62
    1176:	0f be       	out	0x3f, r0	; 63
    1178:	cd bf       	out	0x3d, r28	; 61
    117a:	cf 91       	pop	r28
    117c:	df 91       	pop	r29
    117e:	08 95       	ret

00001180 <DIO_u8SetPortValue>:

u8 DIO_u8SetPortValue(u8 copy_u8PortId,u8 copy_u8PortValue)
{
    1180:	df 93       	push	r29
    1182:	cf 93       	push	r28
    1184:	cd b7       	in	r28, 0x3d	; 61
    1186:	de b7       	in	r29, 0x3e	; 62
    1188:	2d 97       	sbiw	r28, 0x0d	; 13
    118a:	0f b6       	in	r0, 0x3f	; 63
    118c:	f8 94       	cli
    118e:	de bf       	out	0x3e, r29	; 62
    1190:	0f be       	out	0x3f, r0	; 63
    1192:	cd bf       	out	0x3d, r28	; 61
    1194:	8a 83       	std	Y+2, r24	; 0x02
    1196:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErorrState = STD_TYPES_OK; 	
    1198:	81 e0       	ldi	r24, 0x01	; 1
    119a:	89 83       	std	Y+1, r24	; 0x01
	if((copy_u8PortId<=DIO_U8_PORTD) && (copy_u8PortValue<=DIO_U8_OUTPUT))
    119c:	8a 81       	ldd	r24, Y+2	; 0x02
    119e:	84 30       	cpi	r24, 0x04	; 4
    11a0:	08 f0       	brcs	.+2      	; 0x11a4 <DIO_u8SetPortValue+0x24>
    11a2:	6b c0       	rjmp	.+214    	; 0x127a <DIO_u8SetPortValue+0xfa>
    11a4:	8b 81       	ldd	r24, Y+3	; 0x03
    11a6:	82 30       	cpi	r24, 0x02	; 2
    11a8:	08 f0       	brcs	.+2      	; 0x11ac <DIO_u8SetPortValue+0x2c>
    11aa:	67 c0       	rjmp	.+206    	; 0x127a <DIO_u8SetPortValue+0xfa>
	{
		switch(copy_u8PortId)
    11ac:	8a 81       	ldd	r24, Y+2	; 0x02
    11ae:	28 2f       	mov	r18, r24
    11b0:	30 e0       	ldi	r19, 0x00	; 0
    11b2:	3d 87       	std	Y+13, r19	; 0x0d
    11b4:	2c 87       	std	Y+12, r18	; 0x0c
    11b6:	8c 85       	ldd	r24, Y+12	; 0x0c
    11b8:	9d 85       	ldd	r25, Y+13	; 0x0d
    11ba:	81 30       	cpi	r24, 0x01	; 1
    11bc:	91 05       	cpc	r25, r1
    11be:	39 f1       	breq	.+78     	; 0x120e <DIO_u8SetPortValue+0x8e>
    11c0:	2c 85       	ldd	r18, Y+12	; 0x0c
    11c2:	3d 85       	ldd	r19, Y+13	; 0x0d
    11c4:	22 30       	cpi	r18, 0x02	; 2
    11c6:	31 05       	cpc	r19, r1
    11c8:	2c f4       	brge	.+10     	; 0x11d4 <DIO_u8SetPortValue+0x54>
    11ca:	8c 85       	ldd	r24, Y+12	; 0x0c
    11cc:	9d 85       	ldd	r25, Y+13	; 0x0d
    11ce:	00 97       	sbiw	r24, 0x00	; 0
    11d0:	61 f0       	breq	.+24     	; 0x11ea <DIO_u8SetPortValue+0x6a>
    11d2:	54 c0       	rjmp	.+168    	; 0x127c <DIO_u8SetPortValue+0xfc>
    11d4:	2c 85       	ldd	r18, Y+12	; 0x0c
    11d6:	3d 85       	ldd	r19, Y+13	; 0x0d
    11d8:	22 30       	cpi	r18, 0x02	; 2
    11da:	31 05       	cpc	r19, r1
    11dc:	51 f1       	breq	.+84     	; 0x1232 <DIO_u8SetPortValue+0xb2>
    11de:	8c 85       	ldd	r24, Y+12	; 0x0c
    11e0:	9d 85       	ldd	r25, Y+13	; 0x0d
    11e2:	83 30       	cpi	r24, 0x03	; 3
    11e4:	91 05       	cpc	r25, r1
    11e6:	b9 f1       	breq	.+110    	; 0x1256 <DIO_u8SetPortValue+0xd6>
    11e8:	49 c0       	rjmp	.+146    	; 0x127c <DIO_u8SetPortValue+0xfc>
		{
			case DIO_U8_PORTA:
			     if(copy_u8PortValue==DIO_U8_OUTPUT)
    11ea:	8b 81       	ldd	r24, Y+3	; 0x03
    11ec:	81 30       	cpi	r24, 0x01	; 1
    11ee:	41 f4       	brne	.+16     	; 0x1200 <DIO_u8SetPortValue+0x80>
			     {
			     SET_PORT(DIO_U8_PORTA_REG);
    11f0:	eb e3       	ldi	r30, 0x3B	; 59
    11f2:	f0 e0       	ldi	r31, 0x00	; 0
    11f4:	90 81       	ld	r25, Z
    11f6:	eb e3       	ldi	r30, 0x3B	; 59
    11f8:	f0 e0       	ldi	r31, 0x00	; 0
    11fa:	8f ef       	ldi	r24, 0xFF	; 255
    11fc:	80 83       	st	Z, r24
    11fe:	3e c0       	rjmp	.+124    	; 0x127c <DIO_u8SetPortValue+0xfc>
			     }
			     else
			     {
			      CLE_PORT(DIO_U8_PORTA_REG);
    1200:	eb e3       	ldi	r30, 0x3B	; 59
    1202:	f0 e0       	ldi	r31, 0x00	; 0
    1204:	20 81       	ld	r18, Z
    1206:	eb e3       	ldi	r30, 0x3B	; 59
    1208:	f0 e0       	ldi	r31, 0x00	; 0
    120a:	10 82       	st	Z, r1
    120c:	37 c0       	rjmp	.+110    	; 0x127c <DIO_u8SetPortValue+0xfc>
	       		 }
     		break;
			case DIO_U8_PORTB:
			     if(copy_u8PortValue==DIO_U8_OUTPUT)
    120e:	8b 81       	ldd	r24, Y+3	; 0x03
    1210:	81 30       	cpi	r24, 0x01	; 1
    1212:	41 f4       	brne	.+16     	; 0x1224 <DIO_u8SetPortValue+0xa4>
			     { 
			     SET_PORT(DIO_U8_PORTB_REG);
    1214:	e8 e3       	ldi	r30, 0x38	; 56
    1216:	f0 e0       	ldi	r31, 0x00	; 0
    1218:	30 81       	ld	r19, Z
    121a:	e8 e3       	ldi	r30, 0x38	; 56
    121c:	f0 e0       	ldi	r31, 0x00	; 0
    121e:	8f ef       	ldi	r24, 0xFF	; 255
    1220:	80 83       	st	Z, r24
    1222:	2c c0       	rjmp	.+88     	; 0x127c <DIO_u8SetPortValue+0xfc>
			     }
			     else
			     {
			      CLE_PORT(DIO_U8_PORTB_REG);
    1224:	e8 e3       	ldi	r30, 0x38	; 56
    1226:	f0 e0       	ldi	r31, 0x00	; 0
    1228:	80 81       	ld	r24, Z
    122a:	e8 e3       	ldi	r30, 0x38	; 56
    122c:	f0 e0       	ldi	r31, 0x00	; 0
    122e:	10 82       	st	Z, r1
    1230:	25 c0       	rjmp	.+74     	; 0x127c <DIO_u8SetPortValue+0xfc>
	       		 }
     		break;
			case DIO_U8_PORTC:
			     if(copy_u8PortValue==DIO_U8_OUTPUT)
    1232:	8b 81       	ldd	r24, Y+3	; 0x03
    1234:	81 30       	cpi	r24, 0x01	; 1
    1236:	41 f4       	brne	.+16     	; 0x1248 <DIO_u8SetPortValue+0xc8>
			     { 
			     SET_PORT(DIO_U8_PORTC_REG);
    1238:	e5 e3       	ldi	r30, 0x35	; 53
    123a:	f0 e0       	ldi	r31, 0x00	; 0
    123c:	90 81       	ld	r25, Z
    123e:	e5 e3       	ldi	r30, 0x35	; 53
    1240:	f0 e0       	ldi	r31, 0x00	; 0
    1242:	8f ef       	ldi	r24, 0xFF	; 255
    1244:	80 83       	st	Z, r24
    1246:	1a c0       	rjmp	.+52     	; 0x127c <DIO_u8SetPortValue+0xfc>
			     }
			     else
			     {
			      CLE_PORT(DIO_U8_PORTC_REG);
    1248:	e5 e3       	ldi	r30, 0x35	; 53
    124a:	f0 e0       	ldi	r31, 0x00	; 0
    124c:	20 81       	ld	r18, Z
    124e:	e5 e3       	ldi	r30, 0x35	; 53
    1250:	f0 e0       	ldi	r31, 0x00	; 0
    1252:	10 82       	st	Z, r1
    1254:	13 c0       	rjmp	.+38     	; 0x127c <DIO_u8SetPortValue+0xfc>
	       		 }
     		break;
			case DIO_U8_PORTD:
			     if(copy_u8PortValue==DIO_U8_OUTPUT)
    1256:	8b 81       	ldd	r24, Y+3	; 0x03
    1258:	81 30       	cpi	r24, 0x01	; 1
    125a:	41 f4       	brne	.+16     	; 0x126c <DIO_u8SetPortValue+0xec>
			     { 
			     SET_PORT(DIO_U8_PORTD_REG);
    125c:	e2 e3       	ldi	r30, 0x32	; 50
    125e:	f0 e0       	ldi	r31, 0x00	; 0
    1260:	30 81       	ld	r19, Z
    1262:	e2 e3       	ldi	r30, 0x32	; 50
    1264:	f0 e0       	ldi	r31, 0x00	; 0
    1266:	8f ef       	ldi	r24, 0xFF	; 255
    1268:	80 83       	st	Z, r24
    126a:	08 c0       	rjmp	.+16     	; 0x127c <DIO_u8SetPortValue+0xfc>
			     }
			     else
			     {
			      CLE_PORT(DIO_U8_PORTD_REG);
    126c:	e2 e3       	ldi	r30, 0x32	; 50
    126e:	f0 e0       	ldi	r31, 0x00	; 0
    1270:	80 81       	ld	r24, Z
    1272:	e2 e3       	ldi	r30, 0x32	; 50
    1274:	f0 e0       	ldi	r31, 0x00	; 0
    1276:	10 82       	st	Z, r1
    1278:	01 c0       	rjmp	.+2      	; 0x127c <DIO_u8SetPortValue+0xfc>
     		break;
		}
	}
    else
	{
	Local_u8ErorrState =STD_TYPES_NOK;	
    127a:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ErorrState;
    127c:	89 81       	ldd	r24, Y+1	; 0x01
}
    127e:	2d 96       	adiw	r28, 0x0d	; 13
    1280:	0f b6       	in	r0, 0x3f	; 63
    1282:	f8 94       	cli
    1284:	de bf       	out	0x3e, r29	; 62
    1286:	0f be       	out	0x3f, r0	; 63
    1288:	cd bf       	out	0x3d, r28	; 61
    128a:	cf 91       	pop	r28
    128c:	df 91       	pop	r29
    128e:	08 95       	ret

00001290 <DIO_u8GetPortValue>:

u8 DIO_u8GetPortValue(u8 copy_u8PortId, u8 *copy_pu8PortValue)
{
    1290:	df 93       	push	r29
    1292:	cf 93       	push	r28
    1294:	00 d0       	rcall	.+0      	; 0x1296 <DIO_u8GetPortValue+0x6>
    1296:	00 d0       	rcall	.+0      	; 0x1298 <DIO_u8GetPortValue+0x8>
    1298:	00 d0       	rcall	.+0      	; 0x129a <DIO_u8GetPortValue+0xa>
    129a:	cd b7       	in	r28, 0x3d	; 61
    129c:	de b7       	in	r29, 0x3e	; 62
    129e:	8a 83       	std	Y+2, r24	; 0x02
    12a0:	7c 83       	std	Y+4, r23	; 0x04
    12a2:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErorrState = STD_TYPES_OK; 	
    12a4:	81 e0       	ldi	r24, 0x01	; 1
    12a6:	89 83       	std	Y+1, r24	; 0x01
	if(copy_u8PortId<=DIO_U8_PORTD)
    12a8:	8a 81       	ldd	r24, Y+2	; 0x02
    12aa:	84 30       	cpi	r24, 0x04	; 4
    12ac:	d8 f5       	brcc	.+118    	; 0x1324 <DIO_u8GetPortValue+0x94>
	{
		switch(copy_u8PortId)
    12ae:	8a 81       	ldd	r24, Y+2	; 0x02
    12b0:	28 2f       	mov	r18, r24
    12b2:	30 e0       	ldi	r19, 0x00	; 0
    12b4:	3e 83       	std	Y+6, r19	; 0x06
    12b6:	2d 83       	std	Y+5, r18	; 0x05
    12b8:	8d 81       	ldd	r24, Y+5	; 0x05
    12ba:	9e 81       	ldd	r25, Y+6	; 0x06
    12bc:	81 30       	cpi	r24, 0x01	; 1
    12be:	91 05       	cpc	r25, r1
    12c0:	e1 f0       	breq	.+56     	; 0x12fa <DIO_u8GetPortValue+0x6a>
    12c2:	2d 81       	ldd	r18, Y+5	; 0x05
    12c4:	3e 81       	ldd	r19, Y+6	; 0x06
    12c6:	22 30       	cpi	r18, 0x02	; 2
    12c8:	31 05       	cpc	r19, r1
    12ca:	2c f4       	brge	.+10     	; 0x12d6 <DIO_u8GetPortValue+0x46>
    12cc:	8d 81       	ldd	r24, Y+5	; 0x05
    12ce:	9e 81       	ldd	r25, Y+6	; 0x06
    12d0:	00 97       	sbiw	r24, 0x00	; 0
    12d2:	61 f0       	breq	.+24     	; 0x12ec <DIO_u8GetPortValue+0x5c>
    12d4:	28 c0       	rjmp	.+80     	; 0x1326 <DIO_u8GetPortValue+0x96>
    12d6:	2d 81       	ldd	r18, Y+5	; 0x05
    12d8:	3e 81       	ldd	r19, Y+6	; 0x06
    12da:	22 30       	cpi	r18, 0x02	; 2
    12dc:	31 05       	cpc	r19, r1
    12de:	a1 f0       	breq	.+40     	; 0x1308 <DIO_u8GetPortValue+0x78>
    12e0:	8d 81       	ldd	r24, Y+5	; 0x05
    12e2:	9e 81       	ldd	r25, Y+6	; 0x06
    12e4:	83 30       	cpi	r24, 0x03	; 3
    12e6:	91 05       	cpc	r25, r1
    12e8:	b1 f0       	breq	.+44     	; 0x1316 <DIO_u8GetPortValue+0x86>
    12ea:	1d c0       	rjmp	.+58     	; 0x1326 <DIO_u8GetPortValue+0x96>
		{
			case DIO_U8_PORTA:
			   
			   *copy_pu8PortValue = GET_PORT(DIO_U8_PORTA_REG);
    12ec:	eb e3       	ldi	r30, 0x3B	; 59
    12ee:	f0 e0       	ldi	r31, 0x00	; 0
    12f0:	80 81       	ld	r24, Z
    12f2:	eb 81       	ldd	r30, Y+3	; 0x03
    12f4:	fc 81       	ldd	r31, Y+4	; 0x04
    12f6:	80 83       	st	Z, r24
    12f8:	16 c0       	rjmp	.+44     	; 0x1326 <DIO_u8GetPortValue+0x96>
			    
     		break;
			case DIO_U8_PORTB:
			    
				*copy_pu8PortValue = GET_PORT(DIO_U8_PORTB_REG);
    12fa:	e8 e3       	ldi	r30, 0x38	; 56
    12fc:	f0 e0       	ldi	r31, 0x00	; 0
    12fe:	80 81       	ld	r24, Z
    1300:	eb 81       	ldd	r30, Y+3	; 0x03
    1302:	fc 81       	ldd	r31, Y+4	; 0x04
    1304:	80 83       	st	Z, r24
    1306:	0f c0       	rjmp	.+30     	; 0x1326 <DIO_u8GetPortValue+0x96>
			
     		break;
			case DIO_U8_PORTC:
			     
				*copy_pu8PortValue = GET_PORT(DIO_U8_PORTC_REG);
    1308:	e5 e3       	ldi	r30, 0x35	; 53
    130a:	f0 e0       	ldi	r31, 0x00	; 0
    130c:	80 81       	ld	r24, Z
    130e:	eb 81       	ldd	r30, Y+3	; 0x03
    1310:	fc 81       	ldd	r31, Y+4	; 0x04
    1312:	80 83       	st	Z, r24
    1314:	08 c0       	rjmp	.+16     	; 0x1326 <DIO_u8GetPortValue+0x96>
			   
     		break;
			case DIO_U8_PORTD:
			 
				*copy_pu8PortValue = GET_PORT(DIO_U8_PORTD_REG);
    1316:	e2 e3       	ldi	r30, 0x32	; 50
    1318:	f0 e0       	ldi	r31, 0x00	; 0
    131a:	80 81       	ld	r24, Z
    131c:	eb 81       	ldd	r30, Y+3	; 0x03
    131e:	fc 81       	ldd	r31, Y+4	; 0x04
    1320:	80 83       	st	Z, r24
    1322:	01 c0       	rjmp	.+2      	; 0x1326 <DIO_u8GetPortValue+0x96>
     		break;
		}
	}
    else
	{
	Local_u8ErorrState =STD_TYPES_NOK;	
    1324:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ErorrState;
    1326:	89 81       	ldd	r24, Y+1	; 0x01
	
}
    1328:	26 96       	adiw	r28, 0x06	; 6
    132a:	0f b6       	in	r0, 0x3f	; 63
    132c:	f8 94       	cli
    132e:	de bf       	out	0x3e, r29	; 62
    1330:	0f be       	out	0x3f, r0	; 63
    1332:	cd bf       	out	0x3d, r28	; 61
    1334:	cf 91       	pop	r28
    1336:	df 91       	pop	r29
    1338:	08 95       	ret

0000133a <DIO_u8AnalogPort>:
u8 DIO_u8AnalogPort(u8 copy_u8PortId,u8 copy_u8PortValue)
{
    133a:	df 93       	push	r29
    133c:	cf 93       	push	r28
    133e:	00 d0       	rcall	.+0      	; 0x1340 <DIO_u8AnalogPort+0x6>
    1340:	00 d0       	rcall	.+0      	; 0x1342 <DIO_u8AnalogPort+0x8>
    1342:	0f 92       	push	r0
    1344:	cd b7       	in	r28, 0x3d	; 61
    1346:	de b7       	in	r29, 0x3e	; 62
    1348:	8a 83       	std	Y+2, r24	; 0x02
    134a:	6b 83       	std	Y+3, r22	; 0x03
    u8	Local_u8ErorrState =STD_TYPES_OK;
    134c:	81 e0       	ldi	r24, 0x01	; 1
    134e:	89 83       	std	Y+1, r24	; 0x01
	if((copy_u8PortId<=DIO_U8_PORTD)  &&  (copy_u8PortValue<= 0xff))
    1350:	8a 81       	ldd	r24, Y+2	; 0x02
    1352:	84 30       	cpi	r24, 0x04	; 4
    1354:	98 f5       	brcc	.+102    	; 0x13bc <DIO_u8AnalogPort+0x82>
	{
		switch(copy_u8PortId)
    1356:	8a 81       	ldd	r24, Y+2	; 0x02
    1358:	28 2f       	mov	r18, r24
    135a:	30 e0       	ldi	r19, 0x00	; 0
    135c:	3d 83       	std	Y+5, r19	; 0x05
    135e:	2c 83       	std	Y+4, r18	; 0x04
    1360:	8c 81       	ldd	r24, Y+4	; 0x04
    1362:	9d 81       	ldd	r25, Y+5	; 0x05
    1364:	81 30       	cpi	r24, 0x01	; 1
    1366:	91 05       	cpc	r25, r1
    1368:	d1 f0       	breq	.+52     	; 0x139e <DIO_u8AnalogPort+0x64>
    136a:	2c 81       	ldd	r18, Y+4	; 0x04
    136c:	3d 81       	ldd	r19, Y+5	; 0x05
    136e:	22 30       	cpi	r18, 0x02	; 2
    1370:	31 05       	cpc	r19, r1
    1372:	2c f4       	brge	.+10     	; 0x137e <DIO_u8AnalogPort+0x44>
    1374:	8c 81       	ldd	r24, Y+4	; 0x04
    1376:	9d 81       	ldd	r25, Y+5	; 0x05
    1378:	00 97       	sbiw	r24, 0x00	; 0
    137a:	61 f0       	breq	.+24     	; 0x1394 <DIO_u8AnalogPort+0x5a>
    137c:	20 c0       	rjmp	.+64     	; 0x13be <DIO_u8AnalogPort+0x84>
    137e:	2c 81       	ldd	r18, Y+4	; 0x04
    1380:	3d 81       	ldd	r19, Y+5	; 0x05
    1382:	22 30       	cpi	r18, 0x02	; 2
    1384:	31 05       	cpc	r19, r1
    1386:	81 f0       	breq	.+32     	; 0x13a8 <DIO_u8AnalogPort+0x6e>
    1388:	8c 81       	ldd	r24, Y+4	; 0x04
    138a:	9d 81       	ldd	r25, Y+5	; 0x05
    138c:	83 30       	cpi	r24, 0x03	; 3
    138e:	91 05       	cpc	r25, r1
    1390:	81 f0       	breq	.+32     	; 0x13b2 <DIO_u8AnalogPort+0x78>
    1392:	15 c0       	rjmp	.+42     	; 0x13be <DIO_u8AnalogPort+0x84>
		{
		case DIO_U8_PORTA:

			DIO_U8_PORTA_REG = copy_u8PortValue;
    1394:	eb e3       	ldi	r30, 0x3B	; 59
    1396:	f0 e0       	ldi	r31, 0x00	; 0
    1398:	8b 81       	ldd	r24, Y+3	; 0x03
    139a:	80 83       	st	Z, r24
    139c:	10 c0       	rjmp	.+32     	; 0x13be <DIO_u8AnalogPort+0x84>
		break;
		case DIO_U8_PORTB:

			 DIO_U8_PORTB_REG = copy_u8PortValue;
    139e:	e8 e3       	ldi	r30, 0x38	; 56
    13a0:	f0 e0       	ldi	r31, 0x00	; 0
    13a2:	8b 81       	ldd	r24, Y+3	; 0x03
    13a4:	80 83       	st	Z, r24
    13a6:	0b c0       	rjmp	.+22     	; 0x13be <DIO_u8AnalogPort+0x84>
		break;
		case DIO_U8_PORTC:

			DIO_U8_PORTC_REG = copy_u8PortValue;
    13a8:	e5 e3       	ldi	r30, 0x35	; 53
    13aa:	f0 e0       	ldi	r31, 0x00	; 0
    13ac:	8b 81       	ldd	r24, Y+3	; 0x03
    13ae:	80 83       	st	Z, r24
    13b0:	06 c0       	rjmp	.+12     	; 0x13be <DIO_u8AnalogPort+0x84>
		break;
		case DIO_U8_PORTD:

			 DIO_U8_PORTD_REG = copy_u8PortValue;
    13b2:	e2 e3       	ldi	r30, 0x32	; 50
    13b4:	f0 e0       	ldi	r31, 0x00	; 0
    13b6:	8b 81       	ldd	r24, Y+3	; 0x03
    13b8:	80 83       	st	Z, r24
    13ba:	01 c0       	rjmp	.+2      	; 0x13be <DIO_u8AnalogPort+0x84>
		break;
		}
	}
	else
	{
		Local_u8ErorrState =STD_TYPES_NOK;
    13bc:	19 82       	std	Y+1, r1	; 0x01
	}
		return Local_u8ErorrState;
    13be:	89 81       	ldd	r24, Y+1	; 0x01
}
    13c0:	0f 90       	pop	r0
    13c2:	0f 90       	pop	r0
    13c4:	0f 90       	pop	r0
    13c6:	0f 90       	pop	r0
    13c8:	0f 90       	pop	r0
    13ca:	cf 91       	pop	r28
    13cc:	df 91       	pop	r29
    13ce:	08 95       	ret

000013d0 <main>:
 *      Author: MOHAMED ADEL
 */
#define   F_CPU 8000000UL
#include <util/delay.h>
void main(void)
{
    13d0:	0f 93       	push	r16
    13d2:	1f 93       	push	r17
    13d4:	df 93       	push	r29
    13d6:	cf 93       	push	r28
    13d8:	cd b7       	in	r28, 0x3d	; 61
    13da:	de b7       	in	r29, 0x3e	; 62
    13dc:	c5 5f       	subi	r28, 0xF5	; 245
    13de:	d0 40       	sbci	r29, 0x00	; 0
    13e0:	0f b6       	in	r0, 0x3f	; 63
    13e2:	f8 94       	cli
    13e4:	de bf       	out	0x3e, r29	; 62
    13e6:	0f be       	out	0x3f, r0	; 63
    13e8:	cd bf       	out	0x3d, r28	; 61
  unsigned char sevenseg [10] = {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};
    13ea:	ce 01       	movw	r24, r28
    13ec:	8d 51       	subi	r24, 0x1D	; 29
    13ee:	9f 4f       	sbci	r25, 0xFF	; 255
    13f0:	cf 50       	subi	r28, 0x0F	; 15
    13f2:	df 4f       	sbci	r29, 0xFF	; 255
    13f4:	99 83       	std	Y+1, r25	; 0x01
    13f6:	88 83       	st	Y, r24
    13f8:	c1 5f       	subi	r28, 0xF1	; 241
    13fa:	d0 40       	sbci	r29, 0x00	; 0
    13fc:	88 e6       	ldi	r24, 0x68	; 104
    13fe:	90 e0       	ldi	r25, 0x00	; 0
    1400:	cd 50       	subi	r28, 0x0D	; 13
    1402:	df 4f       	sbci	r29, 0xFF	; 255
    1404:	99 83       	std	Y+1, r25	; 0x01
    1406:	88 83       	st	Y, r24
    1408:	c3 5f       	subi	r28, 0xF3	; 243
    140a:	d0 40       	sbci	r29, 0x00	; 0
    140c:	9a e0       	ldi	r25, 0x0A	; 10
    140e:	cb 50       	subi	r28, 0x0B	; 11
    1410:	df 4f       	sbci	r29, 0xFF	; 255
    1412:	98 83       	st	Y, r25
    1414:	c5 5f       	subi	r28, 0xF5	; 245
    1416:	d0 40       	sbci	r29, 0x00	; 0
    1418:	cd 50       	subi	r28, 0x0D	; 13
    141a:	df 4f       	sbci	r29, 0xFF	; 255
    141c:	e8 81       	ld	r30, Y
    141e:	f9 81       	ldd	r31, Y+1	; 0x01
    1420:	c3 5f       	subi	r28, 0xF3	; 243
    1422:	d0 40       	sbci	r29, 0x00	; 0
    1424:	00 80       	ld	r0, Z
    1426:	cd 50       	subi	r28, 0x0D	; 13
    1428:	df 4f       	sbci	r29, 0xFF	; 255
    142a:	88 81       	ld	r24, Y
    142c:	99 81       	ldd	r25, Y+1	; 0x01
    142e:	c3 5f       	subi	r28, 0xF3	; 243
    1430:	d0 40       	sbci	r29, 0x00	; 0
    1432:	01 96       	adiw	r24, 0x01	; 1
    1434:	cd 50       	subi	r28, 0x0D	; 13
    1436:	df 4f       	sbci	r29, 0xFF	; 255
    1438:	99 83       	std	Y+1, r25	; 0x01
    143a:	88 83       	st	Y, r24
    143c:	c3 5f       	subi	r28, 0xF3	; 243
    143e:	d0 40       	sbci	r29, 0x00	; 0
    1440:	cf 50       	subi	r28, 0x0F	; 15
    1442:	df 4f       	sbci	r29, 0xFF	; 255
    1444:	e8 81       	ld	r30, Y
    1446:	f9 81       	ldd	r31, Y+1	; 0x01
    1448:	c1 5f       	subi	r28, 0xF1	; 241
    144a:	d0 40       	sbci	r29, 0x00	; 0
    144c:	00 82       	st	Z, r0
    144e:	cf 50       	subi	r28, 0x0F	; 15
    1450:	df 4f       	sbci	r29, 0xFF	; 255
    1452:	88 81       	ld	r24, Y
    1454:	99 81       	ldd	r25, Y+1	; 0x01
    1456:	c1 5f       	subi	r28, 0xF1	; 241
    1458:	d0 40       	sbci	r29, 0x00	; 0
    145a:	01 96       	adiw	r24, 0x01	; 1
    145c:	cf 50       	subi	r28, 0x0F	; 15
    145e:	df 4f       	sbci	r29, 0xFF	; 255
    1460:	99 83       	std	Y+1, r25	; 0x01
    1462:	88 83       	st	Y, r24
    1464:	c1 5f       	subi	r28, 0xF1	; 241
    1466:	d0 40       	sbci	r29, 0x00	; 0
    1468:	cb 50       	subi	r28, 0x0B	; 11
    146a:	df 4f       	sbci	r29, 0xFF	; 255
    146c:	98 81       	ld	r25, Y
    146e:	c5 5f       	subi	r28, 0xF5	; 245
    1470:	d0 40       	sbci	r29, 0x00	; 0
    1472:	91 50       	subi	r25, 0x01	; 1
    1474:	cb 50       	subi	r28, 0x0B	; 11
    1476:	df 4f       	sbci	r29, 0xFF	; 255
    1478:	98 83       	st	Y, r25
    147a:	c5 5f       	subi	r28, 0xF5	; 245
    147c:	d0 40       	sbci	r29, 0x00	; 0
    147e:	cb 50       	subi	r28, 0x0B	; 11
    1480:	df 4f       	sbci	r29, 0xFF	; 255
    1482:	e8 81       	ld	r30, Y
    1484:	c5 5f       	subi	r28, 0xF5	; 245
    1486:	d0 40       	sbci	r29, 0x00	; 0
    1488:	ee 23       	and	r30, r30
    148a:	31 f6       	brne	.-116    	; 0x1418 <main+0x48>
  char *pu8_GetPinValue;
  char *pu8_GetPinValue1;
  signed char i=0,x=0;
    148c:	fe 01       	movw	r30, r28
    148e:	ee 51       	subi	r30, 0x1E	; 30
    1490:	ff 4f       	sbci	r31, 0xFF	; 255
    1492:	10 82       	st	Z, r1
    1494:	fe 01       	movw	r30, r28
    1496:	ef 51       	subi	r30, 0x1F	; 31
    1498:	ff 4f       	sbci	r31, 0xFF	; 255
    149a:	10 82       	st	Z, r1
  DIO_u8SetPinDirction (1,0,0);
    149c:	81 e0       	ldi	r24, 0x01	; 1
    149e:	90 e0       	ldi	r25, 0x00	; 0
    14a0:	60 e0       	ldi	r22, 0x00	; 0
    14a2:	70 e0       	ldi	r23, 0x00	; 0
    14a4:	40 e0       	ldi	r20, 0x00	; 0
    14a6:	50 e0       	ldi	r21, 0x00	; 0
    14a8:	0e 94 ba 05 	call	0xb74	; 0xb74 <DIO_u8SetPinDirction>
  DIO_u8SetPinDirction (1,1,0);
    14ac:	81 e0       	ldi	r24, 0x01	; 1
    14ae:	90 e0       	ldi	r25, 0x00	; 0
    14b0:	61 e0       	ldi	r22, 0x01	; 1
    14b2:	70 e0       	ldi	r23, 0x00	; 0
    14b4:	40 e0       	ldi	r20, 0x00	; 0
    14b6:	50 e0       	ldi	r21, 0x00	; 0
    14b8:	0e 94 ba 05 	call	0xb74	; 0xb74 <DIO_u8SetPinDirction>
  DIO_u8SetPortDirction(2,1);
    14bc:	82 e0       	ldi	r24, 0x02	; 2
    14be:	90 e0       	ldi	r25, 0x00	; 0
    14c0:	61 e0       	ldi	r22, 0x01	; 1
    14c2:	70 e0       	ldi	r23, 0x00	; 0
    14c4:	0e 94 38 08 	call	0x1070	; 0x1070 <DIO_u8SetPortDirction>
  DIO_u8SetPortDirction(3,1);
    14c8:	83 e0       	ldi	r24, 0x03	; 3
    14ca:	90 e0       	ldi	r25, 0x00	; 0
    14cc:	61 e0       	ldi	r22, 0x01	; 1
    14ce:	70 e0       	ldi	r23, 0x00	; 0
    14d0:	0e 94 38 08 	call	0x1070	; 0x1070 <DIO_u8SetPortDirction>

  DIO_u8AnalogPort(1,0x03);
    14d4:	81 e0       	ldi	r24, 0x01	; 1
    14d6:	90 e0       	ldi	r25, 0x00	; 0
    14d8:	63 e0       	ldi	r22, 0x03	; 3
    14da:	70 e0       	ldi	r23, 0x00	; 0
    14dc:	0e 94 9d 09 	call	0x133a	; 0x133a <DIO_u8AnalogPort>
//  DIO_u8SetPortValue(1,0);

 while(1)
 {
  DIO_u8GetPinValue(1,0,&pu8_GetPinValue);
    14e0:	9e 01       	movw	r18, r28
    14e2:	23 51       	subi	r18, 0x13	; 19
    14e4:	3f 4f       	sbci	r19, 0xFF	; 255
    14e6:	81 e0       	ldi	r24, 0x01	; 1
    14e8:	90 e0       	ldi	r25, 0x00	; 0
    14ea:	60 e0       	ldi	r22, 0x00	; 0
    14ec:	70 e0       	ldi	r23, 0x00	; 0
    14ee:	a9 01       	movw	r20, r18
    14f0:	0e 94 a4 07 	call	0xf48	; 0xf48 <DIO_u8GetPinValue>
    14f4:	fe 01       	movw	r30, r28
    14f6:	e3 52       	subi	r30, 0x23	; 35
    14f8:	ff 4f       	sbci	r31, 0xFF	; 255
    14fa:	80 e0       	ldi	r24, 0x00	; 0
    14fc:	90 e0       	ldi	r25, 0x00	; 0
    14fe:	a0 ef       	ldi	r26, 0xF0	; 240
    1500:	b1 e4       	ldi	r27, 0x41	; 65
    1502:	80 83       	st	Z, r24
    1504:	91 83       	std	Z+1, r25	; 0x01
    1506:	a2 83       	std	Z+2, r26	; 0x02
    1508:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    150a:	8e 01       	movw	r16, r28
    150c:	07 52       	subi	r16, 0x27	; 39
    150e:	1f 4f       	sbci	r17, 0xFF	; 255
    1510:	fe 01       	movw	r30, r28
    1512:	e3 52       	subi	r30, 0x23	; 35
    1514:	ff 4f       	sbci	r31, 0xFF	; 255
    1516:	60 81       	ld	r22, Z
    1518:	71 81       	ldd	r23, Z+1	; 0x01
    151a:	82 81       	ldd	r24, Z+2	; 0x02
    151c:	93 81       	ldd	r25, Z+3	; 0x03
    151e:	20 e0       	ldi	r18, 0x00	; 0
    1520:	30 e0       	ldi	r19, 0x00	; 0
    1522:	4a ef       	ldi	r20, 0xFA	; 250
    1524:	54 e4       	ldi	r21, 0x44	; 68
    1526:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    152a:	dc 01       	movw	r26, r24
    152c:	cb 01       	movw	r24, r22
    152e:	f8 01       	movw	r30, r16
    1530:	80 83       	st	Z, r24
    1532:	91 83       	std	Z+1, r25	; 0x01
    1534:	a2 83       	std	Z+2, r26	; 0x02
    1536:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1538:	fe 01       	movw	r30, r28
    153a:	e7 52       	subi	r30, 0x27	; 39
    153c:	ff 4f       	sbci	r31, 0xFF	; 255
    153e:	60 81       	ld	r22, Z
    1540:	71 81       	ldd	r23, Z+1	; 0x01
    1542:	82 81       	ldd	r24, Z+2	; 0x02
    1544:	93 81       	ldd	r25, Z+3	; 0x03
    1546:	20 e0       	ldi	r18, 0x00	; 0
    1548:	30 e0       	ldi	r19, 0x00	; 0
    154a:	40 e8       	ldi	r20, 0x80	; 128
    154c:	5f e3       	ldi	r21, 0x3F	; 63
    154e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1552:	88 23       	and	r24, r24
    1554:	44 f4       	brge	.+16     	; 0x1566 <main+0x196>
		__ticks = 1;
    1556:	fe 01       	movw	r30, r28
    1558:	e9 52       	subi	r30, 0x29	; 41
    155a:	ff 4f       	sbci	r31, 0xFF	; 255
    155c:	81 e0       	ldi	r24, 0x01	; 1
    155e:	90 e0       	ldi	r25, 0x00	; 0
    1560:	91 83       	std	Z+1, r25	; 0x01
    1562:	80 83       	st	Z, r24
    1564:	64 c0       	rjmp	.+200    	; 0x162e <main+0x25e>
	else if (__tmp > 65535)
    1566:	fe 01       	movw	r30, r28
    1568:	e7 52       	subi	r30, 0x27	; 39
    156a:	ff 4f       	sbci	r31, 0xFF	; 255
    156c:	60 81       	ld	r22, Z
    156e:	71 81       	ldd	r23, Z+1	; 0x01
    1570:	82 81       	ldd	r24, Z+2	; 0x02
    1572:	93 81       	ldd	r25, Z+3	; 0x03
    1574:	20 e0       	ldi	r18, 0x00	; 0
    1576:	3f ef       	ldi	r19, 0xFF	; 255
    1578:	4f e7       	ldi	r20, 0x7F	; 127
    157a:	57 e4       	ldi	r21, 0x47	; 71
    157c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1580:	18 16       	cp	r1, r24
    1582:	0c f0       	brlt	.+2      	; 0x1586 <main+0x1b6>
    1584:	43 c0       	rjmp	.+134    	; 0x160c <main+0x23c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1586:	fe 01       	movw	r30, r28
    1588:	e3 52       	subi	r30, 0x23	; 35
    158a:	ff 4f       	sbci	r31, 0xFF	; 255
    158c:	60 81       	ld	r22, Z
    158e:	71 81       	ldd	r23, Z+1	; 0x01
    1590:	82 81       	ldd	r24, Z+2	; 0x02
    1592:	93 81       	ldd	r25, Z+3	; 0x03
    1594:	20 e0       	ldi	r18, 0x00	; 0
    1596:	30 e0       	ldi	r19, 0x00	; 0
    1598:	40 e2       	ldi	r20, 0x20	; 32
    159a:	51 e4       	ldi	r21, 0x41	; 65
    159c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15a0:	dc 01       	movw	r26, r24
    15a2:	cb 01       	movw	r24, r22
    15a4:	8e 01       	movw	r16, r28
    15a6:	09 52       	subi	r16, 0x29	; 41
    15a8:	1f 4f       	sbci	r17, 0xFF	; 255
    15aa:	bc 01       	movw	r22, r24
    15ac:	cd 01       	movw	r24, r26
    15ae:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    15b2:	dc 01       	movw	r26, r24
    15b4:	cb 01       	movw	r24, r22
    15b6:	f8 01       	movw	r30, r16
    15b8:	91 83       	std	Z+1, r25	; 0x01
    15ba:	80 83       	st	Z, r24
    15bc:	1f c0       	rjmp	.+62     	; 0x15fc <main+0x22c>
    15be:	fe 01       	movw	r30, r28
    15c0:	eb 52       	subi	r30, 0x2B	; 43
    15c2:	ff 4f       	sbci	r31, 0xFF	; 255
    15c4:	88 ec       	ldi	r24, 0xC8	; 200
    15c6:	90 e0       	ldi	r25, 0x00	; 0
    15c8:	91 83       	std	Z+1, r25	; 0x01
    15ca:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    15cc:	fe 01       	movw	r30, r28
    15ce:	eb 52       	subi	r30, 0x2B	; 43
    15d0:	ff 4f       	sbci	r31, 0xFF	; 255
    15d2:	80 81       	ld	r24, Z
    15d4:	91 81       	ldd	r25, Z+1	; 0x01
    15d6:	01 97       	sbiw	r24, 0x01	; 1
    15d8:	f1 f7       	brne	.-4      	; 0x15d6 <main+0x206>
    15da:	fe 01       	movw	r30, r28
    15dc:	eb 52       	subi	r30, 0x2B	; 43
    15de:	ff 4f       	sbci	r31, 0xFF	; 255
    15e0:	91 83       	std	Z+1, r25	; 0x01
    15e2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15e4:	de 01       	movw	r26, r28
    15e6:	a9 52       	subi	r26, 0x29	; 41
    15e8:	bf 4f       	sbci	r27, 0xFF	; 255
    15ea:	fe 01       	movw	r30, r28
    15ec:	e9 52       	subi	r30, 0x29	; 41
    15ee:	ff 4f       	sbci	r31, 0xFF	; 255
    15f0:	80 81       	ld	r24, Z
    15f2:	91 81       	ldd	r25, Z+1	; 0x01
    15f4:	01 97       	sbiw	r24, 0x01	; 1
    15f6:	11 96       	adiw	r26, 0x01	; 1
    15f8:	9c 93       	st	X, r25
    15fa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15fc:	fe 01       	movw	r30, r28
    15fe:	e9 52       	subi	r30, 0x29	; 41
    1600:	ff 4f       	sbci	r31, 0xFF	; 255
    1602:	80 81       	ld	r24, Z
    1604:	91 81       	ldd	r25, Z+1	; 0x01
    1606:	00 97       	sbiw	r24, 0x00	; 0
    1608:	d1 f6       	brne	.-76     	; 0x15be <main+0x1ee>
    160a:	27 c0       	rjmp	.+78     	; 0x165a <main+0x28a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    160c:	8e 01       	movw	r16, r28
    160e:	09 52       	subi	r16, 0x29	; 41
    1610:	1f 4f       	sbci	r17, 0xFF	; 255
    1612:	fe 01       	movw	r30, r28
    1614:	e7 52       	subi	r30, 0x27	; 39
    1616:	ff 4f       	sbci	r31, 0xFF	; 255
    1618:	60 81       	ld	r22, Z
    161a:	71 81       	ldd	r23, Z+1	; 0x01
    161c:	82 81       	ldd	r24, Z+2	; 0x02
    161e:	93 81       	ldd	r25, Z+3	; 0x03
    1620:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1624:	dc 01       	movw	r26, r24
    1626:	cb 01       	movw	r24, r22
    1628:	f8 01       	movw	r30, r16
    162a:	91 83       	std	Z+1, r25	; 0x01
    162c:	80 83       	st	Z, r24
    162e:	de 01       	movw	r26, r28
    1630:	ad 52       	subi	r26, 0x2D	; 45
    1632:	bf 4f       	sbci	r27, 0xFF	; 255
    1634:	fe 01       	movw	r30, r28
    1636:	e9 52       	subi	r30, 0x29	; 41
    1638:	ff 4f       	sbci	r31, 0xFF	; 255
    163a:	80 81       	ld	r24, Z
    163c:	91 81       	ldd	r25, Z+1	; 0x01
    163e:	8d 93       	st	X+, r24
    1640:	9c 93       	st	X, r25
    1642:	fe 01       	movw	r30, r28
    1644:	ed 52       	subi	r30, 0x2D	; 45
    1646:	ff 4f       	sbci	r31, 0xFF	; 255
    1648:	80 81       	ld	r24, Z
    164a:	91 81       	ldd	r25, Z+1	; 0x01
    164c:	01 97       	sbiw	r24, 0x01	; 1
    164e:	f1 f7       	brne	.-4      	; 0x164c <main+0x27c>
    1650:	fe 01       	movw	r30, r28
    1652:	ed 52       	subi	r30, 0x2D	; 45
    1654:	ff 4f       	sbci	r31, 0xFF	; 255
    1656:	91 83       	std	Z+1, r25	; 0x01
    1658:	80 83       	st	Z, r24
  _delay_ms(30);
  DIO_u8GetPinValue(1,1,&pu8_GetPinValue1);
    165a:	9e 01       	movw	r18, r28
    165c:	21 51       	subi	r18, 0x11	; 17
    165e:	3f 4f       	sbci	r19, 0xFF	; 255
    1660:	81 e0       	ldi	r24, 0x01	; 1
    1662:	90 e0       	ldi	r25, 0x00	; 0
    1664:	61 e0       	ldi	r22, 0x01	; 1
    1666:	70 e0       	ldi	r23, 0x00	; 0
    1668:	a9 01       	movw	r20, r18
    166a:	0e 94 a4 07 	call	0xf48	; 0xf48 <DIO_u8GetPinValue>
    166e:	fe 01       	movw	r30, r28
    1670:	e1 53       	subi	r30, 0x31	; 49
    1672:	ff 4f       	sbci	r31, 0xFF	; 255
    1674:	80 e0       	ldi	r24, 0x00	; 0
    1676:	90 e0       	ldi	r25, 0x00	; 0
    1678:	a0 ef       	ldi	r26, 0xF0	; 240
    167a:	b1 e4       	ldi	r27, 0x41	; 65
    167c:	80 83       	st	Z, r24
    167e:	91 83       	std	Z+1, r25	; 0x01
    1680:	a2 83       	std	Z+2, r26	; 0x02
    1682:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1684:	8e 01       	movw	r16, r28
    1686:	05 53       	subi	r16, 0x35	; 53
    1688:	1f 4f       	sbci	r17, 0xFF	; 255
    168a:	fe 01       	movw	r30, r28
    168c:	e1 53       	subi	r30, 0x31	; 49
    168e:	ff 4f       	sbci	r31, 0xFF	; 255
    1690:	60 81       	ld	r22, Z
    1692:	71 81       	ldd	r23, Z+1	; 0x01
    1694:	82 81       	ldd	r24, Z+2	; 0x02
    1696:	93 81       	ldd	r25, Z+3	; 0x03
    1698:	20 e0       	ldi	r18, 0x00	; 0
    169a:	30 e0       	ldi	r19, 0x00	; 0
    169c:	4a ef       	ldi	r20, 0xFA	; 250
    169e:	54 e4       	ldi	r21, 0x44	; 68
    16a0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16a4:	dc 01       	movw	r26, r24
    16a6:	cb 01       	movw	r24, r22
    16a8:	f8 01       	movw	r30, r16
    16aa:	80 83       	st	Z, r24
    16ac:	91 83       	std	Z+1, r25	; 0x01
    16ae:	a2 83       	std	Z+2, r26	; 0x02
    16b0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    16b2:	fe 01       	movw	r30, r28
    16b4:	e5 53       	subi	r30, 0x35	; 53
    16b6:	ff 4f       	sbci	r31, 0xFF	; 255
    16b8:	60 81       	ld	r22, Z
    16ba:	71 81       	ldd	r23, Z+1	; 0x01
    16bc:	82 81       	ldd	r24, Z+2	; 0x02
    16be:	93 81       	ldd	r25, Z+3	; 0x03
    16c0:	20 e0       	ldi	r18, 0x00	; 0
    16c2:	30 e0       	ldi	r19, 0x00	; 0
    16c4:	40 e8       	ldi	r20, 0x80	; 128
    16c6:	5f e3       	ldi	r21, 0x3F	; 63
    16c8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    16cc:	88 23       	and	r24, r24
    16ce:	44 f4       	brge	.+16     	; 0x16e0 <main+0x310>
		__ticks = 1;
    16d0:	fe 01       	movw	r30, r28
    16d2:	e7 53       	subi	r30, 0x37	; 55
    16d4:	ff 4f       	sbci	r31, 0xFF	; 255
    16d6:	81 e0       	ldi	r24, 0x01	; 1
    16d8:	90 e0       	ldi	r25, 0x00	; 0
    16da:	91 83       	std	Z+1, r25	; 0x01
    16dc:	80 83       	st	Z, r24
    16de:	64 c0       	rjmp	.+200    	; 0x17a8 <main+0x3d8>
	else if (__tmp > 65535)
    16e0:	fe 01       	movw	r30, r28
    16e2:	e5 53       	subi	r30, 0x35	; 53
    16e4:	ff 4f       	sbci	r31, 0xFF	; 255
    16e6:	60 81       	ld	r22, Z
    16e8:	71 81       	ldd	r23, Z+1	; 0x01
    16ea:	82 81       	ldd	r24, Z+2	; 0x02
    16ec:	93 81       	ldd	r25, Z+3	; 0x03
    16ee:	20 e0       	ldi	r18, 0x00	; 0
    16f0:	3f ef       	ldi	r19, 0xFF	; 255
    16f2:	4f e7       	ldi	r20, 0x7F	; 127
    16f4:	57 e4       	ldi	r21, 0x47	; 71
    16f6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    16fa:	18 16       	cp	r1, r24
    16fc:	0c f0       	brlt	.+2      	; 0x1700 <main+0x330>
    16fe:	43 c0       	rjmp	.+134    	; 0x1786 <main+0x3b6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1700:	fe 01       	movw	r30, r28
    1702:	e1 53       	subi	r30, 0x31	; 49
    1704:	ff 4f       	sbci	r31, 0xFF	; 255
    1706:	60 81       	ld	r22, Z
    1708:	71 81       	ldd	r23, Z+1	; 0x01
    170a:	82 81       	ldd	r24, Z+2	; 0x02
    170c:	93 81       	ldd	r25, Z+3	; 0x03
    170e:	20 e0       	ldi	r18, 0x00	; 0
    1710:	30 e0       	ldi	r19, 0x00	; 0
    1712:	40 e2       	ldi	r20, 0x20	; 32
    1714:	51 e4       	ldi	r21, 0x41	; 65
    1716:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    171a:	dc 01       	movw	r26, r24
    171c:	cb 01       	movw	r24, r22
    171e:	8e 01       	movw	r16, r28
    1720:	07 53       	subi	r16, 0x37	; 55
    1722:	1f 4f       	sbci	r17, 0xFF	; 255
    1724:	bc 01       	movw	r22, r24
    1726:	cd 01       	movw	r24, r26
    1728:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    172c:	dc 01       	movw	r26, r24
    172e:	cb 01       	movw	r24, r22
    1730:	f8 01       	movw	r30, r16
    1732:	91 83       	std	Z+1, r25	; 0x01
    1734:	80 83       	st	Z, r24
    1736:	1f c0       	rjmp	.+62     	; 0x1776 <main+0x3a6>
    1738:	fe 01       	movw	r30, r28
    173a:	e9 53       	subi	r30, 0x39	; 57
    173c:	ff 4f       	sbci	r31, 0xFF	; 255
    173e:	88 ec       	ldi	r24, 0xC8	; 200
    1740:	90 e0       	ldi	r25, 0x00	; 0
    1742:	91 83       	std	Z+1, r25	; 0x01
    1744:	80 83       	st	Z, r24
    1746:	fe 01       	movw	r30, r28
    1748:	e9 53       	subi	r30, 0x39	; 57
    174a:	ff 4f       	sbci	r31, 0xFF	; 255
    174c:	80 81       	ld	r24, Z
    174e:	91 81       	ldd	r25, Z+1	; 0x01
    1750:	01 97       	sbiw	r24, 0x01	; 1
    1752:	f1 f7       	brne	.-4      	; 0x1750 <main+0x380>
    1754:	fe 01       	movw	r30, r28
    1756:	e9 53       	subi	r30, 0x39	; 57
    1758:	ff 4f       	sbci	r31, 0xFF	; 255
    175a:	91 83       	std	Z+1, r25	; 0x01
    175c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    175e:	de 01       	movw	r26, r28
    1760:	a7 53       	subi	r26, 0x37	; 55
    1762:	bf 4f       	sbci	r27, 0xFF	; 255
    1764:	fe 01       	movw	r30, r28
    1766:	e7 53       	subi	r30, 0x37	; 55
    1768:	ff 4f       	sbci	r31, 0xFF	; 255
    176a:	80 81       	ld	r24, Z
    176c:	91 81       	ldd	r25, Z+1	; 0x01
    176e:	01 97       	sbiw	r24, 0x01	; 1
    1770:	11 96       	adiw	r26, 0x01	; 1
    1772:	9c 93       	st	X, r25
    1774:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1776:	fe 01       	movw	r30, r28
    1778:	e7 53       	subi	r30, 0x37	; 55
    177a:	ff 4f       	sbci	r31, 0xFF	; 255
    177c:	80 81       	ld	r24, Z
    177e:	91 81       	ldd	r25, Z+1	; 0x01
    1780:	00 97       	sbiw	r24, 0x00	; 0
    1782:	d1 f6       	brne	.-76     	; 0x1738 <main+0x368>
    1784:	28 c0       	rjmp	.+80     	; 0x17d6 <main+0x406>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1786:	8e 01       	movw	r16, r28
    1788:	07 53       	subi	r16, 0x37	; 55
    178a:	1f 4f       	sbci	r17, 0xFF	; 255
    178c:	fe 01       	movw	r30, r28
    178e:	e5 53       	subi	r30, 0x35	; 53
    1790:	ff 4f       	sbci	r31, 0xFF	; 255
    1792:	60 81       	ld	r22, Z
    1794:	71 81       	ldd	r23, Z+1	; 0x01
    1796:	82 81       	ldd	r24, Z+2	; 0x02
    1798:	93 81       	ldd	r25, Z+3	; 0x03
    179a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    179e:	dc 01       	movw	r26, r24
    17a0:	cb 01       	movw	r24, r22
    17a2:	f8 01       	movw	r30, r16
    17a4:	91 83       	std	Z+1, r25	; 0x01
    17a6:	80 83       	st	Z, r24
    17a8:	de 01       	movw	r26, r28
    17aa:	ab 53       	subi	r26, 0x3B	; 59
    17ac:	bf 4f       	sbci	r27, 0xFF	; 255
    17ae:	fe 01       	movw	r30, r28
    17b0:	e7 53       	subi	r30, 0x37	; 55
    17b2:	ff 4f       	sbci	r31, 0xFF	; 255
    17b4:	80 81       	ld	r24, Z
    17b6:	91 81       	ldd	r25, Z+1	; 0x01
    17b8:	11 96       	adiw	r26, 0x01	; 1
    17ba:	9c 93       	st	X, r25
    17bc:	8e 93       	st	-X, r24
    17be:	fe 01       	movw	r30, r28
    17c0:	eb 53       	subi	r30, 0x3B	; 59
    17c2:	ff 4f       	sbci	r31, 0xFF	; 255
    17c4:	80 81       	ld	r24, Z
    17c6:	91 81       	ldd	r25, Z+1	; 0x01
    17c8:	01 97       	sbiw	r24, 0x01	; 1
    17ca:	f1 f7       	brne	.-4      	; 0x17c8 <main+0x3f8>
    17cc:	fe 01       	movw	r30, r28
    17ce:	eb 53       	subi	r30, 0x3B	; 59
    17d0:	ff 4f       	sbci	r31, 0xFF	; 255
    17d2:	91 83       	std	Z+1, r25	; 0x01
    17d4:	80 83       	st	Z, r24
  _delay_ms(30);
  if((pu8_GetPinValue==0) && (pu8_GetPinValue1 !=0))
    17d6:	fe 01       	movw	r30, r28
    17d8:	e3 51       	subi	r30, 0x13	; 19
    17da:	ff 4f       	sbci	r31, 0xFF	; 255
    17dc:	80 81       	ld	r24, Z
    17de:	91 81       	ldd	r25, Z+1	; 0x01
    17e0:	00 97       	sbiw	r24, 0x00	; 0
    17e2:	09 f0       	breq	.+2      	; 0x17e6 <main+0x416>
    17e4:	b0 c5       	rjmp	.+2912   	; 0x2346 <main+0xf76>
    17e6:	fe 01       	movw	r30, r28
    17e8:	e1 51       	subi	r30, 0x11	; 17
    17ea:	ff 4f       	sbci	r31, 0xFF	; 255
    17ec:	80 81       	ld	r24, Z
    17ee:	91 81       	ldd	r25, Z+1	; 0x01
    17f0:	00 97       	sbiw	r24, 0x00	; 0
    17f2:	09 f4       	brne	.+2      	; 0x17f6 <main+0x426>
    17f4:	a8 c5       	rjmp	.+2896   	; 0x2346 <main+0xf76>
    17f6:	9f c5       	rjmp	.+2878   	; 0x2336 <main+0xf66>
  {

	  for(;pu8_GetPinValue==0;i++)
	  {
	       if(i==10)
    17f8:	fe 01       	movw	r30, r28
    17fa:	ee 51       	subi	r30, 0x1E	; 30
    17fc:	ff 4f       	sbci	r31, 0xFF	; 255
    17fe:	80 81       	ld	r24, Z
    1800:	8a 30       	cpi	r24, 0x0A	; 10
    1802:	21 f4       	brne	.+8      	; 0x180c <main+0x43c>
	       {
	    	   i=0;
    1804:	fe 01       	movw	r30, r28
    1806:	ee 51       	subi	r30, 0x1E	; 30
    1808:	ff 4f       	sbci	r31, 0xFF	; 255
    180a:	10 82       	st	Z, r1
	       }
		 DIO_u8AnalogPort(2,sevenseg[i]);
    180c:	fe 01       	movw	r30, r28
    180e:	ee 51       	subi	r30, 0x1E	; 30
    1810:	ff 4f       	sbci	r31, 0xFF	; 255
    1812:	80 81       	ld	r24, Z
    1814:	28 2f       	mov	r18, r24
    1816:	33 27       	eor	r19, r19
    1818:	27 fd       	sbrc	r18, 7
    181a:	30 95       	com	r19
    181c:	ce 01       	movw	r24, r28
    181e:	8d 51       	subi	r24, 0x1D	; 29
    1820:	9f 4f       	sbci	r25, 0xFF	; 255
    1822:	fc 01       	movw	r30, r24
    1824:	e2 0f       	add	r30, r18
    1826:	f3 1f       	adc	r31, r19
    1828:	80 81       	ld	r24, Z
    182a:	28 2f       	mov	r18, r24
    182c:	30 e0       	ldi	r19, 0x00	; 0
    182e:	82 e0       	ldi	r24, 0x02	; 2
    1830:	90 e0       	ldi	r25, 0x00	; 0
    1832:	b9 01       	movw	r22, r18
    1834:	0e 94 9d 09 	call	0x133a	; 0x133a <DIO_u8AnalogPort>
    1838:	fe 01       	movw	r30, r28
    183a:	ef 53       	subi	r30, 0x3F	; 63
    183c:	ff 4f       	sbci	r31, 0xFF	; 255
    183e:	80 e0       	ldi	r24, 0x00	; 0
    1840:	90 e0       	ldi	r25, 0x00	; 0
    1842:	a6 e9       	ldi	r26, 0x96	; 150
    1844:	b3 e4       	ldi	r27, 0x43	; 67
    1846:	80 83       	st	Z, r24
    1848:	91 83       	std	Z+1, r25	; 0x01
    184a:	a2 83       	std	Z+2, r26	; 0x02
    184c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    184e:	8e 01       	movw	r16, r28
    1850:	03 54       	subi	r16, 0x43	; 67
    1852:	1f 4f       	sbci	r17, 0xFF	; 255
    1854:	fe 01       	movw	r30, r28
    1856:	ef 53       	subi	r30, 0x3F	; 63
    1858:	ff 4f       	sbci	r31, 0xFF	; 255
    185a:	60 81       	ld	r22, Z
    185c:	71 81       	ldd	r23, Z+1	; 0x01
    185e:	82 81       	ldd	r24, Z+2	; 0x02
    1860:	93 81       	ldd	r25, Z+3	; 0x03
    1862:	20 e0       	ldi	r18, 0x00	; 0
    1864:	30 e0       	ldi	r19, 0x00	; 0
    1866:	4a ef       	ldi	r20, 0xFA	; 250
    1868:	54 e4       	ldi	r21, 0x44	; 68
    186a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    186e:	dc 01       	movw	r26, r24
    1870:	cb 01       	movw	r24, r22
    1872:	f8 01       	movw	r30, r16
    1874:	80 83       	st	Z, r24
    1876:	91 83       	std	Z+1, r25	; 0x01
    1878:	a2 83       	std	Z+2, r26	; 0x02
    187a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    187c:	fe 01       	movw	r30, r28
    187e:	e3 54       	subi	r30, 0x43	; 67
    1880:	ff 4f       	sbci	r31, 0xFF	; 255
    1882:	60 81       	ld	r22, Z
    1884:	71 81       	ldd	r23, Z+1	; 0x01
    1886:	82 81       	ldd	r24, Z+2	; 0x02
    1888:	93 81       	ldd	r25, Z+3	; 0x03
    188a:	20 e0       	ldi	r18, 0x00	; 0
    188c:	30 e0       	ldi	r19, 0x00	; 0
    188e:	40 e8       	ldi	r20, 0x80	; 128
    1890:	5f e3       	ldi	r21, 0x3F	; 63
    1892:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1896:	88 23       	and	r24, r24
    1898:	44 f4       	brge	.+16     	; 0x18aa <main+0x4da>
		__ticks = 1;
    189a:	fe 01       	movw	r30, r28
    189c:	e5 54       	subi	r30, 0x45	; 69
    189e:	ff 4f       	sbci	r31, 0xFF	; 255
    18a0:	81 e0       	ldi	r24, 0x01	; 1
    18a2:	90 e0       	ldi	r25, 0x00	; 0
    18a4:	91 83       	std	Z+1, r25	; 0x01
    18a6:	80 83       	st	Z, r24
    18a8:	64 c0       	rjmp	.+200    	; 0x1972 <main+0x5a2>
	else if (__tmp > 65535)
    18aa:	fe 01       	movw	r30, r28
    18ac:	e3 54       	subi	r30, 0x43	; 67
    18ae:	ff 4f       	sbci	r31, 0xFF	; 255
    18b0:	60 81       	ld	r22, Z
    18b2:	71 81       	ldd	r23, Z+1	; 0x01
    18b4:	82 81       	ldd	r24, Z+2	; 0x02
    18b6:	93 81       	ldd	r25, Z+3	; 0x03
    18b8:	20 e0       	ldi	r18, 0x00	; 0
    18ba:	3f ef       	ldi	r19, 0xFF	; 255
    18bc:	4f e7       	ldi	r20, 0x7F	; 127
    18be:	57 e4       	ldi	r21, 0x47	; 71
    18c0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    18c4:	18 16       	cp	r1, r24
    18c6:	0c f0       	brlt	.+2      	; 0x18ca <main+0x4fa>
    18c8:	43 c0       	rjmp	.+134    	; 0x1950 <main+0x580>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    18ca:	fe 01       	movw	r30, r28
    18cc:	ef 53       	subi	r30, 0x3F	; 63
    18ce:	ff 4f       	sbci	r31, 0xFF	; 255
    18d0:	60 81       	ld	r22, Z
    18d2:	71 81       	ldd	r23, Z+1	; 0x01
    18d4:	82 81       	ldd	r24, Z+2	; 0x02
    18d6:	93 81       	ldd	r25, Z+3	; 0x03
    18d8:	20 e0       	ldi	r18, 0x00	; 0
    18da:	30 e0       	ldi	r19, 0x00	; 0
    18dc:	40 e2       	ldi	r20, 0x20	; 32
    18de:	51 e4       	ldi	r21, 0x41	; 65
    18e0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18e4:	dc 01       	movw	r26, r24
    18e6:	cb 01       	movw	r24, r22
    18e8:	8e 01       	movw	r16, r28
    18ea:	05 54       	subi	r16, 0x45	; 69
    18ec:	1f 4f       	sbci	r17, 0xFF	; 255
    18ee:	bc 01       	movw	r22, r24
    18f0:	cd 01       	movw	r24, r26
    18f2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18f6:	dc 01       	movw	r26, r24
    18f8:	cb 01       	movw	r24, r22
    18fa:	f8 01       	movw	r30, r16
    18fc:	91 83       	std	Z+1, r25	; 0x01
    18fe:	80 83       	st	Z, r24
    1900:	1f c0       	rjmp	.+62     	; 0x1940 <main+0x570>
    1902:	fe 01       	movw	r30, r28
    1904:	e7 54       	subi	r30, 0x47	; 71
    1906:	ff 4f       	sbci	r31, 0xFF	; 255
    1908:	88 ec       	ldi	r24, 0xC8	; 200
    190a:	90 e0       	ldi	r25, 0x00	; 0
    190c:	91 83       	std	Z+1, r25	; 0x01
    190e:	80 83       	st	Z, r24
    1910:	fe 01       	movw	r30, r28
    1912:	e7 54       	subi	r30, 0x47	; 71
    1914:	ff 4f       	sbci	r31, 0xFF	; 255
    1916:	80 81       	ld	r24, Z
    1918:	91 81       	ldd	r25, Z+1	; 0x01
    191a:	01 97       	sbiw	r24, 0x01	; 1
    191c:	f1 f7       	brne	.-4      	; 0x191a <main+0x54a>
    191e:	fe 01       	movw	r30, r28
    1920:	e7 54       	subi	r30, 0x47	; 71
    1922:	ff 4f       	sbci	r31, 0xFF	; 255
    1924:	91 83       	std	Z+1, r25	; 0x01
    1926:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1928:	de 01       	movw	r26, r28
    192a:	a5 54       	subi	r26, 0x45	; 69
    192c:	bf 4f       	sbci	r27, 0xFF	; 255
    192e:	fe 01       	movw	r30, r28
    1930:	e5 54       	subi	r30, 0x45	; 69
    1932:	ff 4f       	sbci	r31, 0xFF	; 255
    1934:	80 81       	ld	r24, Z
    1936:	91 81       	ldd	r25, Z+1	; 0x01
    1938:	01 97       	sbiw	r24, 0x01	; 1
    193a:	11 96       	adiw	r26, 0x01	; 1
    193c:	9c 93       	st	X, r25
    193e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1940:	fe 01       	movw	r30, r28
    1942:	e5 54       	subi	r30, 0x45	; 69
    1944:	ff 4f       	sbci	r31, 0xFF	; 255
    1946:	80 81       	ld	r24, Z
    1948:	91 81       	ldd	r25, Z+1	; 0x01
    194a:	00 97       	sbiw	r24, 0x00	; 0
    194c:	d1 f6       	brne	.-76     	; 0x1902 <main+0x532>
    194e:	27 c0       	rjmp	.+78     	; 0x199e <main+0x5ce>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1950:	8e 01       	movw	r16, r28
    1952:	05 54       	subi	r16, 0x45	; 69
    1954:	1f 4f       	sbci	r17, 0xFF	; 255
    1956:	fe 01       	movw	r30, r28
    1958:	e3 54       	subi	r30, 0x43	; 67
    195a:	ff 4f       	sbci	r31, 0xFF	; 255
    195c:	60 81       	ld	r22, Z
    195e:	71 81       	ldd	r23, Z+1	; 0x01
    1960:	82 81       	ldd	r24, Z+2	; 0x02
    1962:	93 81       	ldd	r25, Z+3	; 0x03
    1964:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1968:	dc 01       	movw	r26, r24
    196a:	cb 01       	movw	r24, r22
    196c:	f8 01       	movw	r30, r16
    196e:	91 83       	std	Z+1, r25	; 0x01
    1970:	80 83       	st	Z, r24
    1972:	de 01       	movw	r26, r28
    1974:	a9 54       	subi	r26, 0x49	; 73
    1976:	bf 4f       	sbci	r27, 0xFF	; 255
    1978:	fe 01       	movw	r30, r28
    197a:	e5 54       	subi	r30, 0x45	; 69
    197c:	ff 4f       	sbci	r31, 0xFF	; 255
    197e:	80 81       	ld	r24, Z
    1980:	91 81       	ldd	r25, Z+1	; 0x01
    1982:	8d 93       	st	X+, r24
    1984:	9c 93       	st	X, r25
    1986:	fe 01       	movw	r30, r28
    1988:	e9 54       	subi	r30, 0x49	; 73
    198a:	ff 4f       	sbci	r31, 0xFF	; 255
    198c:	80 81       	ld	r24, Z
    198e:	91 81       	ldd	r25, Z+1	; 0x01
    1990:	01 97       	sbiw	r24, 0x01	; 1
    1992:	f1 f7       	brne	.-4      	; 0x1990 <main+0x5c0>
    1994:	fe 01       	movw	r30, r28
    1996:	e9 54       	subi	r30, 0x49	; 73
    1998:	ff 4f       	sbci	r31, 0xFF	; 255
    199a:	91 83       	std	Z+1, r25	; 0x01
    199c:	80 83       	st	Z, r24
       _delay_ms(300);
       DIO_u8GetPinValue(1,0,&pu8_GetPinValue);
    199e:	9e 01       	movw	r18, r28
    19a0:	23 51       	subi	r18, 0x13	; 19
    19a2:	3f 4f       	sbci	r19, 0xFF	; 255
    19a4:	81 e0       	ldi	r24, 0x01	; 1
    19a6:	90 e0       	ldi	r25, 0x00	; 0
    19a8:	60 e0       	ldi	r22, 0x00	; 0
    19aa:	70 e0       	ldi	r23, 0x00	; 0
    19ac:	a9 01       	movw	r20, r18
    19ae:	0e 94 a4 07 	call	0xf48	; 0xf48 <DIO_u8GetPinValue>
    19b2:	fe 01       	movw	r30, r28
    19b4:	ed 54       	subi	r30, 0x4D	; 77
    19b6:	ff 4f       	sbci	r31, 0xFF	; 255
    19b8:	80 e0       	ldi	r24, 0x00	; 0
    19ba:	90 e0       	ldi	r25, 0x00	; 0
    19bc:	a0 ef       	ldi	r26, 0xF0	; 240
    19be:	b1 e4       	ldi	r27, 0x41	; 65
    19c0:	80 83       	st	Z, r24
    19c2:	91 83       	std	Z+1, r25	; 0x01
    19c4:	a2 83       	std	Z+2, r26	; 0x02
    19c6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    19c8:	8e 01       	movw	r16, r28
    19ca:	01 55       	subi	r16, 0x51	; 81
    19cc:	1f 4f       	sbci	r17, 0xFF	; 255
    19ce:	fe 01       	movw	r30, r28
    19d0:	ed 54       	subi	r30, 0x4D	; 77
    19d2:	ff 4f       	sbci	r31, 0xFF	; 255
    19d4:	60 81       	ld	r22, Z
    19d6:	71 81       	ldd	r23, Z+1	; 0x01
    19d8:	82 81       	ldd	r24, Z+2	; 0x02
    19da:	93 81       	ldd	r25, Z+3	; 0x03
    19dc:	20 e0       	ldi	r18, 0x00	; 0
    19de:	30 e0       	ldi	r19, 0x00	; 0
    19e0:	4a ef       	ldi	r20, 0xFA	; 250
    19e2:	54 e4       	ldi	r21, 0x44	; 68
    19e4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19e8:	dc 01       	movw	r26, r24
    19ea:	cb 01       	movw	r24, r22
    19ec:	f8 01       	movw	r30, r16
    19ee:	80 83       	st	Z, r24
    19f0:	91 83       	std	Z+1, r25	; 0x01
    19f2:	a2 83       	std	Z+2, r26	; 0x02
    19f4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    19f6:	fe 01       	movw	r30, r28
    19f8:	e1 55       	subi	r30, 0x51	; 81
    19fa:	ff 4f       	sbci	r31, 0xFF	; 255
    19fc:	60 81       	ld	r22, Z
    19fe:	71 81       	ldd	r23, Z+1	; 0x01
    1a00:	82 81       	ldd	r24, Z+2	; 0x02
    1a02:	93 81       	ldd	r25, Z+3	; 0x03
    1a04:	20 e0       	ldi	r18, 0x00	; 0
    1a06:	30 e0       	ldi	r19, 0x00	; 0
    1a08:	40 e8       	ldi	r20, 0x80	; 128
    1a0a:	5f e3       	ldi	r21, 0x3F	; 63
    1a0c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1a10:	88 23       	and	r24, r24
    1a12:	44 f4       	brge	.+16     	; 0x1a24 <main+0x654>
		__ticks = 1;
    1a14:	fe 01       	movw	r30, r28
    1a16:	e3 55       	subi	r30, 0x53	; 83
    1a18:	ff 4f       	sbci	r31, 0xFF	; 255
    1a1a:	81 e0       	ldi	r24, 0x01	; 1
    1a1c:	90 e0       	ldi	r25, 0x00	; 0
    1a1e:	91 83       	std	Z+1, r25	; 0x01
    1a20:	80 83       	st	Z, r24
    1a22:	64 c0       	rjmp	.+200    	; 0x1aec <main+0x71c>
	else if (__tmp > 65535)
    1a24:	fe 01       	movw	r30, r28
    1a26:	e1 55       	subi	r30, 0x51	; 81
    1a28:	ff 4f       	sbci	r31, 0xFF	; 255
    1a2a:	60 81       	ld	r22, Z
    1a2c:	71 81       	ldd	r23, Z+1	; 0x01
    1a2e:	82 81       	ldd	r24, Z+2	; 0x02
    1a30:	93 81       	ldd	r25, Z+3	; 0x03
    1a32:	20 e0       	ldi	r18, 0x00	; 0
    1a34:	3f ef       	ldi	r19, 0xFF	; 255
    1a36:	4f e7       	ldi	r20, 0x7F	; 127
    1a38:	57 e4       	ldi	r21, 0x47	; 71
    1a3a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1a3e:	18 16       	cp	r1, r24
    1a40:	0c f0       	brlt	.+2      	; 0x1a44 <main+0x674>
    1a42:	43 c0       	rjmp	.+134    	; 0x1aca <main+0x6fa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a44:	fe 01       	movw	r30, r28
    1a46:	ed 54       	subi	r30, 0x4D	; 77
    1a48:	ff 4f       	sbci	r31, 0xFF	; 255
    1a4a:	60 81       	ld	r22, Z
    1a4c:	71 81       	ldd	r23, Z+1	; 0x01
    1a4e:	82 81       	ldd	r24, Z+2	; 0x02
    1a50:	93 81       	ldd	r25, Z+3	; 0x03
    1a52:	20 e0       	ldi	r18, 0x00	; 0
    1a54:	30 e0       	ldi	r19, 0x00	; 0
    1a56:	40 e2       	ldi	r20, 0x20	; 32
    1a58:	51 e4       	ldi	r21, 0x41	; 65
    1a5a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a5e:	dc 01       	movw	r26, r24
    1a60:	cb 01       	movw	r24, r22
    1a62:	8e 01       	movw	r16, r28
    1a64:	03 55       	subi	r16, 0x53	; 83
    1a66:	1f 4f       	sbci	r17, 0xFF	; 255
    1a68:	bc 01       	movw	r22, r24
    1a6a:	cd 01       	movw	r24, r26
    1a6c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a70:	dc 01       	movw	r26, r24
    1a72:	cb 01       	movw	r24, r22
    1a74:	f8 01       	movw	r30, r16
    1a76:	91 83       	std	Z+1, r25	; 0x01
    1a78:	80 83       	st	Z, r24
    1a7a:	1f c0       	rjmp	.+62     	; 0x1aba <main+0x6ea>
    1a7c:	fe 01       	movw	r30, r28
    1a7e:	e5 55       	subi	r30, 0x55	; 85
    1a80:	ff 4f       	sbci	r31, 0xFF	; 255
    1a82:	88 ec       	ldi	r24, 0xC8	; 200
    1a84:	90 e0       	ldi	r25, 0x00	; 0
    1a86:	91 83       	std	Z+1, r25	; 0x01
    1a88:	80 83       	st	Z, r24
    1a8a:	fe 01       	movw	r30, r28
    1a8c:	e5 55       	subi	r30, 0x55	; 85
    1a8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1a90:	80 81       	ld	r24, Z
    1a92:	91 81       	ldd	r25, Z+1	; 0x01
    1a94:	01 97       	sbiw	r24, 0x01	; 1
    1a96:	f1 f7       	brne	.-4      	; 0x1a94 <main+0x6c4>
    1a98:	fe 01       	movw	r30, r28
    1a9a:	e5 55       	subi	r30, 0x55	; 85
    1a9c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a9e:	91 83       	std	Z+1, r25	; 0x01
    1aa0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1aa2:	de 01       	movw	r26, r28
    1aa4:	a3 55       	subi	r26, 0x53	; 83
    1aa6:	bf 4f       	sbci	r27, 0xFF	; 255
    1aa8:	fe 01       	movw	r30, r28
    1aaa:	e3 55       	subi	r30, 0x53	; 83
    1aac:	ff 4f       	sbci	r31, 0xFF	; 255
    1aae:	80 81       	ld	r24, Z
    1ab0:	91 81       	ldd	r25, Z+1	; 0x01
    1ab2:	01 97       	sbiw	r24, 0x01	; 1
    1ab4:	11 96       	adiw	r26, 0x01	; 1
    1ab6:	9c 93       	st	X, r25
    1ab8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1aba:	fe 01       	movw	r30, r28
    1abc:	e3 55       	subi	r30, 0x53	; 83
    1abe:	ff 4f       	sbci	r31, 0xFF	; 255
    1ac0:	80 81       	ld	r24, Z
    1ac2:	91 81       	ldd	r25, Z+1	; 0x01
    1ac4:	00 97       	sbiw	r24, 0x00	; 0
    1ac6:	d1 f6       	brne	.-76     	; 0x1a7c <main+0x6ac>
    1ac8:	27 c0       	rjmp	.+78     	; 0x1b18 <main+0x748>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1aca:	8e 01       	movw	r16, r28
    1acc:	03 55       	subi	r16, 0x53	; 83
    1ace:	1f 4f       	sbci	r17, 0xFF	; 255
    1ad0:	fe 01       	movw	r30, r28
    1ad2:	e1 55       	subi	r30, 0x51	; 81
    1ad4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ad6:	60 81       	ld	r22, Z
    1ad8:	71 81       	ldd	r23, Z+1	; 0x01
    1ada:	82 81       	ldd	r24, Z+2	; 0x02
    1adc:	93 81       	ldd	r25, Z+3	; 0x03
    1ade:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ae2:	dc 01       	movw	r26, r24
    1ae4:	cb 01       	movw	r24, r22
    1ae6:	f8 01       	movw	r30, r16
    1ae8:	91 83       	std	Z+1, r25	; 0x01
    1aea:	80 83       	st	Z, r24
    1aec:	de 01       	movw	r26, r28
    1aee:	a7 55       	subi	r26, 0x57	; 87
    1af0:	bf 4f       	sbci	r27, 0xFF	; 255
    1af2:	fe 01       	movw	r30, r28
    1af4:	e3 55       	subi	r30, 0x53	; 83
    1af6:	ff 4f       	sbci	r31, 0xFF	; 255
    1af8:	80 81       	ld	r24, Z
    1afa:	91 81       	ldd	r25, Z+1	; 0x01
    1afc:	8d 93       	st	X+, r24
    1afe:	9c 93       	st	X, r25
    1b00:	fe 01       	movw	r30, r28
    1b02:	e7 55       	subi	r30, 0x57	; 87
    1b04:	ff 4f       	sbci	r31, 0xFF	; 255
    1b06:	80 81       	ld	r24, Z
    1b08:	91 81       	ldd	r25, Z+1	; 0x01
    1b0a:	01 97       	sbiw	r24, 0x01	; 1
    1b0c:	f1 f7       	brne	.-4      	; 0x1b0a <main+0x73a>
    1b0e:	fe 01       	movw	r30, r28
    1b10:	e7 55       	subi	r30, 0x57	; 87
    1b12:	ff 4f       	sbci	r31, 0xFF	; 255
    1b14:	91 83       	std	Z+1, r25	; 0x01
    1b16:	80 83       	st	Z, r24
       _delay_ms(30);
       DIO_u8GetPinValue(1,1,&pu8_GetPinValue1);
    1b18:	9e 01       	movw	r18, r28
    1b1a:	21 51       	subi	r18, 0x11	; 17
    1b1c:	3f 4f       	sbci	r19, 0xFF	; 255
    1b1e:	81 e0       	ldi	r24, 0x01	; 1
    1b20:	90 e0       	ldi	r25, 0x00	; 0
    1b22:	61 e0       	ldi	r22, 0x01	; 1
    1b24:	70 e0       	ldi	r23, 0x00	; 0
    1b26:	a9 01       	movw	r20, r18
    1b28:	0e 94 a4 07 	call	0xf48	; 0xf48 <DIO_u8GetPinValue>
    1b2c:	fe 01       	movw	r30, r28
    1b2e:	eb 55       	subi	r30, 0x5B	; 91
    1b30:	ff 4f       	sbci	r31, 0xFF	; 255
    1b32:	80 e0       	ldi	r24, 0x00	; 0
    1b34:	90 e0       	ldi	r25, 0x00	; 0
    1b36:	a0 ef       	ldi	r26, 0xF0	; 240
    1b38:	b1 e4       	ldi	r27, 0x41	; 65
    1b3a:	80 83       	st	Z, r24
    1b3c:	91 83       	std	Z+1, r25	; 0x01
    1b3e:	a2 83       	std	Z+2, r26	; 0x02
    1b40:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b42:	8e 01       	movw	r16, r28
    1b44:	0f 55       	subi	r16, 0x5F	; 95
    1b46:	1f 4f       	sbci	r17, 0xFF	; 255
    1b48:	fe 01       	movw	r30, r28
    1b4a:	eb 55       	subi	r30, 0x5B	; 91
    1b4c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b4e:	60 81       	ld	r22, Z
    1b50:	71 81       	ldd	r23, Z+1	; 0x01
    1b52:	82 81       	ldd	r24, Z+2	; 0x02
    1b54:	93 81       	ldd	r25, Z+3	; 0x03
    1b56:	20 e0       	ldi	r18, 0x00	; 0
    1b58:	30 e0       	ldi	r19, 0x00	; 0
    1b5a:	4a ef       	ldi	r20, 0xFA	; 250
    1b5c:	54 e4       	ldi	r21, 0x44	; 68
    1b5e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b62:	dc 01       	movw	r26, r24
    1b64:	cb 01       	movw	r24, r22
    1b66:	f8 01       	movw	r30, r16
    1b68:	80 83       	st	Z, r24
    1b6a:	91 83       	std	Z+1, r25	; 0x01
    1b6c:	a2 83       	std	Z+2, r26	; 0x02
    1b6e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1b70:	fe 01       	movw	r30, r28
    1b72:	ef 55       	subi	r30, 0x5F	; 95
    1b74:	ff 4f       	sbci	r31, 0xFF	; 255
    1b76:	60 81       	ld	r22, Z
    1b78:	71 81       	ldd	r23, Z+1	; 0x01
    1b7a:	82 81       	ldd	r24, Z+2	; 0x02
    1b7c:	93 81       	ldd	r25, Z+3	; 0x03
    1b7e:	20 e0       	ldi	r18, 0x00	; 0
    1b80:	30 e0       	ldi	r19, 0x00	; 0
    1b82:	40 e8       	ldi	r20, 0x80	; 128
    1b84:	5f e3       	ldi	r21, 0x3F	; 63
    1b86:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1b8a:	88 23       	and	r24, r24
    1b8c:	44 f4       	brge	.+16     	; 0x1b9e <main+0x7ce>
		__ticks = 1;
    1b8e:	fe 01       	movw	r30, r28
    1b90:	e1 56       	subi	r30, 0x61	; 97
    1b92:	ff 4f       	sbci	r31, 0xFF	; 255
    1b94:	81 e0       	ldi	r24, 0x01	; 1
    1b96:	90 e0       	ldi	r25, 0x00	; 0
    1b98:	91 83       	std	Z+1, r25	; 0x01
    1b9a:	80 83       	st	Z, r24
    1b9c:	64 c0       	rjmp	.+200    	; 0x1c66 <main+0x896>
	else if (__tmp > 65535)
    1b9e:	fe 01       	movw	r30, r28
    1ba0:	ef 55       	subi	r30, 0x5F	; 95
    1ba2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ba4:	60 81       	ld	r22, Z
    1ba6:	71 81       	ldd	r23, Z+1	; 0x01
    1ba8:	82 81       	ldd	r24, Z+2	; 0x02
    1baa:	93 81       	ldd	r25, Z+3	; 0x03
    1bac:	20 e0       	ldi	r18, 0x00	; 0
    1bae:	3f ef       	ldi	r19, 0xFF	; 255
    1bb0:	4f e7       	ldi	r20, 0x7F	; 127
    1bb2:	57 e4       	ldi	r21, 0x47	; 71
    1bb4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1bb8:	18 16       	cp	r1, r24
    1bba:	0c f0       	brlt	.+2      	; 0x1bbe <main+0x7ee>
    1bbc:	43 c0       	rjmp	.+134    	; 0x1c44 <main+0x874>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1bbe:	fe 01       	movw	r30, r28
    1bc0:	eb 55       	subi	r30, 0x5B	; 91
    1bc2:	ff 4f       	sbci	r31, 0xFF	; 255
    1bc4:	60 81       	ld	r22, Z
    1bc6:	71 81       	ldd	r23, Z+1	; 0x01
    1bc8:	82 81       	ldd	r24, Z+2	; 0x02
    1bca:	93 81       	ldd	r25, Z+3	; 0x03
    1bcc:	20 e0       	ldi	r18, 0x00	; 0
    1bce:	30 e0       	ldi	r19, 0x00	; 0
    1bd0:	40 e2       	ldi	r20, 0x20	; 32
    1bd2:	51 e4       	ldi	r21, 0x41	; 65
    1bd4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1bd8:	dc 01       	movw	r26, r24
    1bda:	cb 01       	movw	r24, r22
    1bdc:	8e 01       	movw	r16, r28
    1bde:	01 56       	subi	r16, 0x61	; 97
    1be0:	1f 4f       	sbci	r17, 0xFF	; 255
    1be2:	bc 01       	movw	r22, r24
    1be4:	cd 01       	movw	r24, r26
    1be6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1bea:	dc 01       	movw	r26, r24
    1bec:	cb 01       	movw	r24, r22
    1bee:	f8 01       	movw	r30, r16
    1bf0:	91 83       	std	Z+1, r25	; 0x01
    1bf2:	80 83       	st	Z, r24
    1bf4:	1f c0       	rjmp	.+62     	; 0x1c34 <main+0x864>
    1bf6:	fe 01       	movw	r30, r28
    1bf8:	e3 56       	subi	r30, 0x63	; 99
    1bfa:	ff 4f       	sbci	r31, 0xFF	; 255
    1bfc:	88 ec       	ldi	r24, 0xC8	; 200
    1bfe:	90 e0       	ldi	r25, 0x00	; 0
    1c00:	91 83       	std	Z+1, r25	; 0x01
    1c02:	80 83       	st	Z, r24
    1c04:	fe 01       	movw	r30, r28
    1c06:	e3 56       	subi	r30, 0x63	; 99
    1c08:	ff 4f       	sbci	r31, 0xFF	; 255
    1c0a:	80 81       	ld	r24, Z
    1c0c:	91 81       	ldd	r25, Z+1	; 0x01
    1c0e:	01 97       	sbiw	r24, 0x01	; 1
    1c10:	f1 f7       	brne	.-4      	; 0x1c0e <main+0x83e>
    1c12:	fe 01       	movw	r30, r28
    1c14:	e3 56       	subi	r30, 0x63	; 99
    1c16:	ff 4f       	sbci	r31, 0xFF	; 255
    1c18:	91 83       	std	Z+1, r25	; 0x01
    1c1a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c1c:	de 01       	movw	r26, r28
    1c1e:	a1 56       	subi	r26, 0x61	; 97
    1c20:	bf 4f       	sbci	r27, 0xFF	; 255
    1c22:	fe 01       	movw	r30, r28
    1c24:	e1 56       	subi	r30, 0x61	; 97
    1c26:	ff 4f       	sbci	r31, 0xFF	; 255
    1c28:	80 81       	ld	r24, Z
    1c2a:	91 81       	ldd	r25, Z+1	; 0x01
    1c2c:	01 97       	sbiw	r24, 0x01	; 1
    1c2e:	11 96       	adiw	r26, 0x01	; 1
    1c30:	9c 93       	st	X, r25
    1c32:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c34:	fe 01       	movw	r30, r28
    1c36:	e1 56       	subi	r30, 0x61	; 97
    1c38:	ff 4f       	sbci	r31, 0xFF	; 255
    1c3a:	80 81       	ld	r24, Z
    1c3c:	91 81       	ldd	r25, Z+1	; 0x01
    1c3e:	00 97       	sbiw	r24, 0x00	; 0
    1c40:	d1 f6       	brne	.-76     	; 0x1bf6 <main+0x826>
    1c42:	61 c3       	rjmp	.+1730   	; 0x2306 <main+0xf36>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c44:	8e 01       	movw	r16, r28
    1c46:	01 56       	subi	r16, 0x61	; 97
    1c48:	1f 4f       	sbci	r17, 0xFF	; 255
    1c4a:	fe 01       	movw	r30, r28
    1c4c:	ef 55       	subi	r30, 0x5F	; 95
    1c4e:	ff 4f       	sbci	r31, 0xFF	; 255
    1c50:	60 81       	ld	r22, Z
    1c52:	71 81       	ldd	r23, Z+1	; 0x01
    1c54:	82 81       	ldd	r24, Z+2	; 0x02
    1c56:	93 81       	ldd	r25, Z+3	; 0x03
    1c58:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c5c:	dc 01       	movw	r26, r24
    1c5e:	cb 01       	movw	r24, r22
    1c60:	f8 01       	movw	r30, r16
    1c62:	91 83       	std	Z+1, r25	; 0x01
    1c64:	80 83       	st	Z, r24
    1c66:	de 01       	movw	r26, r28
    1c68:	a5 56       	subi	r26, 0x65	; 101
    1c6a:	bf 4f       	sbci	r27, 0xFF	; 255
    1c6c:	fe 01       	movw	r30, r28
    1c6e:	e1 56       	subi	r30, 0x61	; 97
    1c70:	ff 4f       	sbci	r31, 0xFF	; 255
    1c72:	80 81       	ld	r24, Z
    1c74:	91 81       	ldd	r25, Z+1	; 0x01
    1c76:	11 96       	adiw	r26, 0x01	; 1
    1c78:	9c 93       	st	X, r25
    1c7a:	8e 93       	st	-X, r24
    1c7c:	fe 01       	movw	r30, r28
    1c7e:	e5 56       	subi	r30, 0x65	; 101
    1c80:	ff 4f       	sbci	r31, 0xFF	; 255
    1c82:	80 81       	ld	r24, Z
    1c84:	91 81       	ldd	r25, Z+1	; 0x01
    1c86:	01 97       	sbiw	r24, 0x01	; 1
    1c88:	f1 f7       	brne	.-4      	; 0x1c86 <main+0x8b6>
    1c8a:	fe 01       	movw	r30, r28
    1c8c:	e5 56       	subi	r30, 0x65	; 101
    1c8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1c90:	91 83       	std	Z+1, r25	; 0x01
    1c92:	80 83       	st	Z, r24
    1c94:	38 c3       	rjmp	.+1648   	; 0x2306 <main+0xf36>
       _delay_ms(30);
      while((pu8_GetPinValue==0)&&(pu8_GetPinValue1==0))
     {
    	  --i;
    1c96:	de 01       	movw	r26, r28
    1c98:	ae 51       	subi	r26, 0x1E	; 30
    1c9a:	bf 4f       	sbci	r27, 0xFF	; 255
    1c9c:	fe 01       	movw	r30, r28
    1c9e:	ee 51       	subi	r30, 0x1E	; 30
    1ca0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ca2:	80 81       	ld	r24, Z
    1ca4:	81 50       	subi	r24, 0x01	; 1
    1ca6:	8c 93       	st	X, r24
    	  DIO_u8AnalogPort(2,sevenseg[i]);
    1ca8:	fe 01       	movw	r30, r28
    1caa:	ee 51       	subi	r30, 0x1E	; 30
    1cac:	ff 4f       	sbci	r31, 0xFF	; 255
    1cae:	80 81       	ld	r24, Z
    1cb0:	28 2f       	mov	r18, r24
    1cb2:	33 27       	eor	r19, r19
    1cb4:	27 fd       	sbrc	r18, 7
    1cb6:	30 95       	com	r19
    1cb8:	ce 01       	movw	r24, r28
    1cba:	8d 51       	subi	r24, 0x1D	; 29
    1cbc:	9f 4f       	sbci	r25, 0xFF	; 255
    1cbe:	fc 01       	movw	r30, r24
    1cc0:	e2 0f       	add	r30, r18
    1cc2:	f3 1f       	adc	r31, r19
    1cc4:	80 81       	ld	r24, Z
    1cc6:	28 2f       	mov	r18, r24
    1cc8:	30 e0       	ldi	r19, 0x00	; 0
    1cca:	82 e0       	ldi	r24, 0x02	; 2
    1ccc:	90 e0       	ldi	r25, 0x00	; 0
    1cce:	b9 01       	movw	r22, r18
    1cd0:	0e 94 9d 09 	call	0x133a	; 0x133a <DIO_u8AnalogPort>
    1cd4:	fe 01       	movw	r30, r28
    1cd6:	e9 56       	subi	r30, 0x69	; 105
    1cd8:	ff 4f       	sbci	r31, 0xFF	; 255
    1cda:	80 e0       	ldi	r24, 0x00	; 0
    1cdc:	90 e0       	ldi	r25, 0x00	; 0
    1cde:	af ea       	ldi	r26, 0xAF	; 175
    1ce0:	b3 e4       	ldi	r27, 0x43	; 67
    1ce2:	80 83       	st	Z, r24
    1ce4:	91 83       	std	Z+1, r25	; 0x01
    1ce6:	a2 83       	std	Z+2, r26	; 0x02
    1ce8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1cea:	8e 01       	movw	r16, r28
    1cec:	0d 56       	subi	r16, 0x6D	; 109
    1cee:	1f 4f       	sbci	r17, 0xFF	; 255
    1cf0:	fe 01       	movw	r30, r28
    1cf2:	e9 56       	subi	r30, 0x69	; 105
    1cf4:	ff 4f       	sbci	r31, 0xFF	; 255
    1cf6:	60 81       	ld	r22, Z
    1cf8:	71 81       	ldd	r23, Z+1	; 0x01
    1cfa:	82 81       	ldd	r24, Z+2	; 0x02
    1cfc:	93 81       	ldd	r25, Z+3	; 0x03
    1cfe:	20 e0       	ldi	r18, 0x00	; 0
    1d00:	30 e0       	ldi	r19, 0x00	; 0
    1d02:	4a ef       	ldi	r20, 0xFA	; 250
    1d04:	54 e4       	ldi	r21, 0x44	; 68
    1d06:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d0a:	dc 01       	movw	r26, r24
    1d0c:	cb 01       	movw	r24, r22
    1d0e:	f8 01       	movw	r30, r16
    1d10:	80 83       	st	Z, r24
    1d12:	91 83       	std	Z+1, r25	; 0x01
    1d14:	a2 83       	std	Z+2, r26	; 0x02
    1d16:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1d18:	fe 01       	movw	r30, r28
    1d1a:	ed 56       	subi	r30, 0x6D	; 109
    1d1c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d1e:	60 81       	ld	r22, Z
    1d20:	71 81       	ldd	r23, Z+1	; 0x01
    1d22:	82 81       	ldd	r24, Z+2	; 0x02
    1d24:	93 81       	ldd	r25, Z+3	; 0x03
    1d26:	20 e0       	ldi	r18, 0x00	; 0
    1d28:	30 e0       	ldi	r19, 0x00	; 0
    1d2a:	40 e8       	ldi	r20, 0x80	; 128
    1d2c:	5f e3       	ldi	r21, 0x3F	; 63
    1d2e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1d32:	88 23       	and	r24, r24
    1d34:	44 f4       	brge	.+16     	; 0x1d46 <main+0x976>
		__ticks = 1;
    1d36:	fe 01       	movw	r30, r28
    1d38:	ef 56       	subi	r30, 0x6F	; 111
    1d3a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d3c:	81 e0       	ldi	r24, 0x01	; 1
    1d3e:	90 e0       	ldi	r25, 0x00	; 0
    1d40:	91 83       	std	Z+1, r25	; 0x01
    1d42:	80 83       	st	Z, r24
    1d44:	64 c0       	rjmp	.+200    	; 0x1e0e <main+0xa3e>
	else if (__tmp > 65535)
    1d46:	fe 01       	movw	r30, r28
    1d48:	ed 56       	subi	r30, 0x6D	; 109
    1d4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d4c:	60 81       	ld	r22, Z
    1d4e:	71 81       	ldd	r23, Z+1	; 0x01
    1d50:	82 81       	ldd	r24, Z+2	; 0x02
    1d52:	93 81       	ldd	r25, Z+3	; 0x03
    1d54:	20 e0       	ldi	r18, 0x00	; 0
    1d56:	3f ef       	ldi	r19, 0xFF	; 255
    1d58:	4f e7       	ldi	r20, 0x7F	; 127
    1d5a:	57 e4       	ldi	r21, 0x47	; 71
    1d5c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1d60:	18 16       	cp	r1, r24
    1d62:	0c f0       	brlt	.+2      	; 0x1d66 <main+0x996>
    1d64:	43 c0       	rjmp	.+134    	; 0x1dec <main+0xa1c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d66:	fe 01       	movw	r30, r28
    1d68:	e9 56       	subi	r30, 0x69	; 105
    1d6a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d6c:	60 81       	ld	r22, Z
    1d6e:	71 81       	ldd	r23, Z+1	; 0x01
    1d70:	82 81       	ldd	r24, Z+2	; 0x02
    1d72:	93 81       	ldd	r25, Z+3	; 0x03
    1d74:	20 e0       	ldi	r18, 0x00	; 0
    1d76:	30 e0       	ldi	r19, 0x00	; 0
    1d78:	40 e2       	ldi	r20, 0x20	; 32
    1d7a:	51 e4       	ldi	r21, 0x41	; 65
    1d7c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d80:	dc 01       	movw	r26, r24
    1d82:	cb 01       	movw	r24, r22
    1d84:	8e 01       	movw	r16, r28
    1d86:	0f 56       	subi	r16, 0x6F	; 111
    1d88:	1f 4f       	sbci	r17, 0xFF	; 255
    1d8a:	bc 01       	movw	r22, r24
    1d8c:	cd 01       	movw	r24, r26
    1d8e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d92:	dc 01       	movw	r26, r24
    1d94:	cb 01       	movw	r24, r22
    1d96:	f8 01       	movw	r30, r16
    1d98:	91 83       	std	Z+1, r25	; 0x01
    1d9a:	80 83       	st	Z, r24
    1d9c:	1f c0       	rjmp	.+62     	; 0x1ddc <main+0xa0c>
    1d9e:	fe 01       	movw	r30, r28
    1da0:	e1 57       	subi	r30, 0x71	; 113
    1da2:	ff 4f       	sbci	r31, 0xFF	; 255
    1da4:	88 ec       	ldi	r24, 0xC8	; 200
    1da6:	90 e0       	ldi	r25, 0x00	; 0
    1da8:	91 83       	std	Z+1, r25	; 0x01
    1daa:	80 83       	st	Z, r24
    1dac:	fe 01       	movw	r30, r28
    1dae:	e1 57       	subi	r30, 0x71	; 113
    1db0:	ff 4f       	sbci	r31, 0xFF	; 255
    1db2:	80 81       	ld	r24, Z
    1db4:	91 81       	ldd	r25, Z+1	; 0x01
    1db6:	01 97       	sbiw	r24, 0x01	; 1
    1db8:	f1 f7       	brne	.-4      	; 0x1db6 <main+0x9e6>
    1dba:	fe 01       	movw	r30, r28
    1dbc:	e1 57       	subi	r30, 0x71	; 113
    1dbe:	ff 4f       	sbci	r31, 0xFF	; 255
    1dc0:	91 83       	std	Z+1, r25	; 0x01
    1dc2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1dc4:	de 01       	movw	r26, r28
    1dc6:	af 56       	subi	r26, 0x6F	; 111
    1dc8:	bf 4f       	sbci	r27, 0xFF	; 255
    1dca:	fe 01       	movw	r30, r28
    1dcc:	ef 56       	subi	r30, 0x6F	; 111
    1dce:	ff 4f       	sbci	r31, 0xFF	; 255
    1dd0:	80 81       	ld	r24, Z
    1dd2:	91 81       	ldd	r25, Z+1	; 0x01
    1dd4:	01 97       	sbiw	r24, 0x01	; 1
    1dd6:	11 96       	adiw	r26, 0x01	; 1
    1dd8:	9c 93       	st	X, r25
    1dda:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ddc:	fe 01       	movw	r30, r28
    1dde:	ef 56       	subi	r30, 0x6F	; 111
    1de0:	ff 4f       	sbci	r31, 0xFF	; 255
    1de2:	80 81       	ld	r24, Z
    1de4:	91 81       	ldd	r25, Z+1	; 0x01
    1de6:	00 97       	sbiw	r24, 0x00	; 0
    1de8:	d1 f6       	brne	.-76     	; 0x1d9e <main+0x9ce>
    1dea:	28 c0       	rjmp	.+80     	; 0x1e3c <main+0xa6c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1dec:	8e 01       	movw	r16, r28
    1dee:	0f 56       	subi	r16, 0x6F	; 111
    1df0:	1f 4f       	sbci	r17, 0xFF	; 255
    1df2:	fe 01       	movw	r30, r28
    1df4:	ed 56       	subi	r30, 0x6D	; 109
    1df6:	ff 4f       	sbci	r31, 0xFF	; 255
    1df8:	60 81       	ld	r22, Z
    1dfa:	71 81       	ldd	r23, Z+1	; 0x01
    1dfc:	82 81       	ldd	r24, Z+2	; 0x02
    1dfe:	93 81       	ldd	r25, Z+3	; 0x03
    1e00:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e04:	dc 01       	movw	r26, r24
    1e06:	cb 01       	movw	r24, r22
    1e08:	f8 01       	movw	r30, r16
    1e0a:	91 83       	std	Z+1, r25	; 0x01
    1e0c:	80 83       	st	Z, r24
    1e0e:	de 01       	movw	r26, r28
    1e10:	a3 57       	subi	r26, 0x73	; 115
    1e12:	bf 4f       	sbci	r27, 0xFF	; 255
    1e14:	fe 01       	movw	r30, r28
    1e16:	ef 56       	subi	r30, 0x6F	; 111
    1e18:	ff 4f       	sbci	r31, 0xFF	; 255
    1e1a:	80 81       	ld	r24, Z
    1e1c:	91 81       	ldd	r25, Z+1	; 0x01
    1e1e:	11 96       	adiw	r26, 0x01	; 1
    1e20:	9c 93       	st	X, r25
    1e22:	8e 93       	st	-X, r24
    1e24:	fe 01       	movw	r30, r28
    1e26:	e3 57       	subi	r30, 0x73	; 115
    1e28:	ff 4f       	sbci	r31, 0xFF	; 255
    1e2a:	80 81       	ld	r24, Z
    1e2c:	91 81       	ldd	r25, Z+1	; 0x01
    1e2e:	01 97       	sbiw	r24, 0x01	; 1
    1e30:	f1 f7       	brne	.-4      	; 0x1e2e <main+0xa5e>
    1e32:	fe 01       	movw	r30, r28
    1e34:	e3 57       	subi	r30, 0x73	; 115
    1e36:	ff 4f       	sbci	r31, 0xFF	; 255
    1e38:	91 83       	std	Z+1, r25	; 0x01
    1e3a:	80 83       	st	Z, r24
    	  _delay_ms(350);
    	  if(i==0)
    1e3c:	fe 01       	movw	r30, r28
    1e3e:	ee 51       	subi	r30, 0x1E	; 30
    1e40:	ff 4f       	sbci	r31, 0xFF	; 255
    1e42:	80 81       	ld	r24, Z
    1e44:	88 23       	and	r24, r24
    1e46:	09 f0       	breq	.+2      	; 0x1e4a <main+0xa7a>
    1e48:	e3 c0       	rjmp	.+454    	; 0x2010 <main+0xc40>
    	  {
    		  --x;
    1e4a:	de 01       	movw	r26, r28
    1e4c:	af 51       	subi	r26, 0x1F	; 31
    1e4e:	bf 4f       	sbci	r27, 0xFF	; 255
    1e50:	fe 01       	movw	r30, r28
    1e52:	ef 51       	subi	r30, 0x1F	; 31
    1e54:	ff 4f       	sbci	r31, 0xFF	; 255
    1e56:	80 81       	ld	r24, Z
    1e58:	81 50       	subi	r24, 0x01	; 1
    1e5a:	8c 93       	st	X, r24
    		  DIO_u8AnalogPort(3,sevenseg[x]);
    1e5c:	fe 01       	movw	r30, r28
    1e5e:	ef 51       	subi	r30, 0x1F	; 31
    1e60:	ff 4f       	sbci	r31, 0xFF	; 255
    1e62:	80 81       	ld	r24, Z
    1e64:	28 2f       	mov	r18, r24
    1e66:	33 27       	eor	r19, r19
    1e68:	27 fd       	sbrc	r18, 7
    1e6a:	30 95       	com	r19
    1e6c:	ce 01       	movw	r24, r28
    1e6e:	8d 51       	subi	r24, 0x1D	; 29
    1e70:	9f 4f       	sbci	r25, 0xFF	; 255
    1e72:	fc 01       	movw	r30, r24
    1e74:	e2 0f       	add	r30, r18
    1e76:	f3 1f       	adc	r31, r19
    1e78:	80 81       	ld	r24, Z
    1e7a:	28 2f       	mov	r18, r24
    1e7c:	30 e0       	ldi	r19, 0x00	; 0
    1e7e:	83 e0       	ldi	r24, 0x03	; 3
    1e80:	90 e0       	ldi	r25, 0x00	; 0
    1e82:	b9 01       	movw	r22, r18
    1e84:	0e 94 9d 09 	call	0x133a	; 0x133a <DIO_u8AnalogPort>
    1e88:	fe 01       	movw	r30, r28
    1e8a:	e7 57       	subi	r30, 0x77	; 119
    1e8c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e8e:	80 e0       	ldi	r24, 0x00	; 0
    1e90:	90 e0       	ldi	r25, 0x00	; 0
    1e92:	af ea       	ldi	r26, 0xAF	; 175
    1e94:	b3 e4       	ldi	r27, 0x43	; 67
    1e96:	80 83       	st	Z, r24
    1e98:	91 83       	std	Z+1, r25	; 0x01
    1e9a:	a2 83       	std	Z+2, r26	; 0x02
    1e9c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e9e:	8e 01       	movw	r16, r28
    1ea0:	0b 57       	subi	r16, 0x7B	; 123
    1ea2:	1f 4f       	sbci	r17, 0xFF	; 255
    1ea4:	fe 01       	movw	r30, r28
    1ea6:	e7 57       	subi	r30, 0x77	; 119
    1ea8:	ff 4f       	sbci	r31, 0xFF	; 255
    1eaa:	60 81       	ld	r22, Z
    1eac:	71 81       	ldd	r23, Z+1	; 0x01
    1eae:	82 81       	ldd	r24, Z+2	; 0x02
    1eb0:	93 81       	ldd	r25, Z+3	; 0x03
    1eb2:	20 e0       	ldi	r18, 0x00	; 0
    1eb4:	30 e0       	ldi	r19, 0x00	; 0
    1eb6:	4a ef       	ldi	r20, 0xFA	; 250
    1eb8:	54 e4       	ldi	r21, 0x44	; 68
    1eba:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ebe:	dc 01       	movw	r26, r24
    1ec0:	cb 01       	movw	r24, r22
    1ec2:	f8 01       	movw	r30, r16
    1ec4:	80 83       	st	Z, r24
    1ec6:	91 83       	std	Z+1, r25	; 0x01
    1ec8:	a2 83       	std	Z+2, r26	; 0x02
    1eca:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ecc:	fe 01       	movw	r30, r28
    1ece:	eb 57       	subi	r30, 0x7B	; 123
    1ed0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ed2:	60 81       	ld	r22, Z
    1ed4:	71 81       	ldd	r23, Z+1	; 0x01
    1ed6:	82 81       	ldd	r24, Z+2	; 0x02
    1ed8:	93 81       	ldd	r25, Z+3	; 0x03
    1eda:	20 e0       	ldi	r18, 0x00	; 0
    1edc:	30 e0       	ldi	r19, 0x00	; 0
    1ede:	40 e8       	ldi	r20, 0x80	; 128
    1ee0:	5f e3       	ldi	r21, 0x3F	; 63
    1ee2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1ee6:	88 23       	and	r24, r24
    1ee8:	44 f4       	brge	.+16     	; 0x1efa <main+0xb2a>
		__ticks = 1;
    1eea:	fe 01       	movw	r30, r28
    1eec:	ed 57       	subi	r30, 0x7D	; 125
    1eee:	ff 4f       	sbci	r31, 0xFF	; 255
    1ef0:	81 e0       	ldi	r24, 0x01	; 1
    1ef2:	90 e0       	ldi	r25, 0x00	; 0
    1ef4:	91 83       	std	Z+1, r25	; 0x01
    1ef6:	80 83       	st	Z, r24
    1ef8:	64 c0       	rjmp	.+200    	; 0x1fc2 <main+0xbf2>
	else if (__tmp > 65535)
    1efa:	fe 01       	movw	r30, r28
    1efc:	eb 57       	subi	r30, 0x7B	; 123
    1efe:	ff 4f       	sbci	r31, 0xFF	; 255
    1f00:	60 81       	ld	r22, Z
    1f02:	71 81       	ldd	r23, Z+1	; 0x01
    1f04:	82 81       	ldd	r24, Z+2	; 0x02
    1f06:	93 81       	ldd	r25, Z+3	; 0x03
    1f08:	20 e0       	ldi	r18, 0x00	; 0
    1f0a:	3f ef       	ldi	r19, 0xFF	; 255
    1f0c:	4f e7       	ldi	r20, 0x7F	; 127
    1f0e:	57 e4       	ldi	r21, 0x47	; 71
    1f10:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1f14:	18 16       	cp	r1, r24
    1f16:	0c f0       	brlt	.+2      	; 0x1f1a <main+0xb4a>
    1f18:	43 c0       	rjmp	.+134    	; 0x1fa0 <main+0xbd0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f1a:	fe 01       	movw	r30, r28
    1f1c:	e7 57       	subi	r30, 0x77	; 119
    1f1e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f20:	60 81       	ld	r22, Z
    1f22:	71 81       	ldd	r23, Z+1	; 0x01
    1f24:	82 81       	ldd	r24, Z+2	; 0x02
    1f26:	93 81       	ldd	r25, Z+3	; 0x03
    1f28:	20 e0       	ldi	r18, 0x00	; 0
    1f2a:	30 e0       	ldi	r19, 0x00	; 0
    1f2c:	40 e2       	ldi	r20, 0x20	; 32
    1f2e:	51 e4       	ldi	r21, 0x41	; 65
    1f30:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f34:	dc 01       	movw	r26, r24
    1f36:	cb 01       	movw	r24, r22
    1f38:	8e 01       	movw	r16, r28
    1f3a:	0d 57       	subi	r16, 0x7D	; 125
    1f3c:	1f 4f       	sbci	r17, 0xFF	; 255
    1f3e:	bc 01       	movw	r22, r24
    1f40:	cd 01       	movw	r24, r26
    1f42:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f46:	dc 01       	movw	r26, r24
    1f48:	cb 01       	movw	r24, r22
    1f4a:	f8 01       	movw	r30, r16
    1f4c:	91 83       	std	Z+1, r25	; 0x01
    1f4e:	80 83       	st	Z, r24
    1f50:	1f c0       	rjmp	.+62     	; 0x1f90 <main+0xbc0>
    1f52:	fe 01       	movw	r30, r28
    1f54:	ef 57       	subi	r30, 0x7F	; 127
    1f56:	ff 4f       	sbci	r31, 0xFF	; 255
    1f58:	88 ec       	ldi	r24, 0xC8	; 200
    1f5a:	90 e0       	ldi	r25, 0x00	; 0
    1f5c:	91 83       	std	Z+1, r25	; 0x01
    1f5e:	80 83       	st	Z, r24
    1f60:	fe 01       	movw	r30, r28
    1f62:	ef 57       	subi	r30, 0x7F	; 127
    1f64:	ff 4f       	sbci	r31, 0xFF	; 255
    1f66:	80 81       	ld	r24, Z
    1f68:	91 81       	ldd	r25, Z+1	; 0x01
    1f6a:	01 97       	sbiw	r24, 0x01	; 1
    1f6c:	f1 f7       	brne	.-4      	; 0x1f6a <main+0xb9a>
    1f6e:	fe 01       	movw	r30, r28
    1f70:	ef 57       	subi	r30, 0x7F	; 127
    1f72:	ff 4f       	sbci	r31, 0xFF	; 255
    1f74:	91 83       	std	Z+1, r25	; 0x01
    1f76:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f78:	de 01       	movw	r26, r28
    1f7a:	ad 57       	subi	r26, 0x7D	; 125
    1f7c:	bf 4f       	sbci	r27, 0xFF	; 255
    1f7e:	fe 01       	movw	r30, r28
    1f80:	ed 57       	subi	r30, 0x7D	; 125
    1f82:	ff 4f       	sbci	r31, 0xFF	; 255
    1f84:	80 81       	ld	r24, Z
    1f86:	91 81       	ldd	r25, Z+1	; 0x01
    1f88:	01 97       	sbiw	r24, 0x01	; 1
    1f8a:	11 96       	adiw	r26, 0x01	; 1
    1f8c:	9c 93       	st	X, r25
    1f8e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f90:	fe 01       	movw	r30, r28
    1f92:	ed 57       	subi	r30, 0x7D	; 125
    1f94:	ff 4f       	sbci	r31, 0xFF	; 255
    1f96:	80 81       	ld	r24, Z
    1f98:	91 81       	ldd	r25, Z+1	; 0x01
    1f9a:	00 97       	sbiw	r24, 0x00	; 0
    1f9c:	d1 f6       	brne	.-76     	; 0x1f52 <main+0xb82>
    1f9e:	28 c0       	rjmp	.+80     	; 0x1ff0 <main+0xc20>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1fa0:	8e 01       	movw	r16, r28
    1fa2:	0d 57       	subi	r16, 0x7D	; 125
    1fa4:	1f 4f       	sbci	r17, 0xFF	; 255
    1fa6:	fe 01       	movw	r30, r28
    1fa8:	eb 57       	subi	r30, 0x7B	; 123
    1faa:	ff 4f       	sbci	r31, 0xFF	; 255
    1fac:	60 81       	ld	r22, Z
    1fae:	71 81       	ldd	r23, Z+1	; 0x01
    1fb0:	82 81       	ldd	r24, Z+2	; 0x02
    1fb2:	93 81       	ldd	r25, Z+3	; 0x03
    1fb4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1fb8:	dc 01       	movw	r26, r24
    1fba:	cb 01       	movw	r24, r22
    1fbc:	f8 01       	movw	r30, r16
    1fbe:	91 83       	std	Z+1, r25	; 0x01
    1fc0:	80 83       	st	Z, r24
    1fc2:	de 01       	movw	r26, r28
    1fc4:	a1 58       	subi	r26, 0x81	; 129
    1fc6:	bf 4f       	sbci	r27, 0xFF	; 255
    1fc8:	fe 01       	movw	r30, r28
    1fca:	ed 57       	subi	r30, 0x7D	; 125
    1fcc:	ff 4f       	sbci	r31, 0xFF	; 255
    1fce:	80 81       	ld	r24, Z
    1fd0:	91 81       	ldd	r25, Z+1	; 0x01
    1fd2:	11 96       	adiw	r26, 0x01	; 1
    1fd4:	9c 93       	st	X, r25
    1fd6:	8e 93       	st	-X, r24
    1fd8:	fe 01       	movw	r30, r28
    1fda:	e1 58       	subi	r30, 0x81	; 129
    1fdc:	ff 4f       	sbci	r31, 0xFF	; 255
    1fde:	80 81       	ld	r24, Z
    1fe0:	91 81       	ldd	r25, Z+1	; 0x01
    1fe2:	01 97       	sbiw	r24, 0x01	; 1
    1fe4:	f1 f7       	brne	.-4      	; 0x1fe2 <main+0xc12>
    1fe6:	fe 01       	movw	r30, r28
    1fe8:	e1 58       	subi	r30, 0x81	; 129
    1fea:	ff 4f       	sbci	r31, 0xFF	; 255
    1fec:	91 83       	std	Z+1, r25	; 0x01
    1fee:	80 83       	st	Z, r24
    		  _delay_ms(350);
    		  i=10;
    1ff0:	fe 01       	movw	r30, r28
    1ff2:	ee 51       	subi	r30, 0x1E	; 30
    1ff4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ff6:	8a e0       	ldi	r24, 0x0A	; 10
    1ff8:	80 83       	st	Z, r24
     		  if(x==0)
    1ffa:	fe 01       	movw	r30, r28
    1ffc:	ef 51       	subi	r30, 0x1F	; 31
    1ffe:	ff 4f       	sbci	r31, 0xFF	; 255
    2000:	80 81       	ld	r24, Z
    2002:	88 23       	and	r24, r24
    2004:	29 f4       	brne	.+10     	; 0x2010 <main+0xc40>
     		  {
     		  x=10;
    2006:	fe 01       	movw	r30, r28
    2008:	ef 51       	subi	r30, 0x1F	; 31
    200a:	ff 4f       	sbci	r31, 0xFF	; 255
    200c:	8a e0       	ldi	r24, 0x0A	; 10
    200e:	80 83       	st	Z, r24
     		  }
    	  }
          DIO_u8GetPinValue(1,0,&pu8_GetPinValue);
    2010:	9e 01       	movw	r18, r28
    2012:	23 51       	subi	r18, 0x13	; 19
    2014:	3f 4f       	sbci	r19, 0xFF	; 255
    2016:	81 e0       	ldi	r24, 0x01	; 1
    2018:	90 e0       	ldi	r25, 0x00	; 0
    201a:	60 e0       	ldi	r22, 0x00	; 0
    201c:	70 e0       	ldi	r23, 0x00	; 0
    201e:	a9 01       	movw	r20, r18
    2020:	0e 94 a4 07 	call	0xf48	; 0xf48 <DIO_u8GetPinValue>
    2024:	fe 01       	movw	r30, r28
    2026:	e5 58       	subi	r30, 0x85	; 133
    2028:	ff 4f       	sbci	r31, 0xFF	; 255
    202a:	80 e0       	ldi	r24, 0x00	; 0
    202c:	90 e0       	ldi	r25, 0x00	; 0
    202e:	a0 ef       	ldi	r26, 0xF0	; 240
    2030:	b1 e4       	ldi	r27, 0x41	; 65
    2032:	80 83       	st	Z, r24
    2034:	91 83       	std	Z+1, r25	; 0x01
    2036:	a2 83       	std	Z+2, r26	; 0x02
    2038:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    203a:	8e 01       	movw	r16, r28
    203c:	09 58       	subi	r16, 0x89	; 137
    203e:	1f 4f       	sbci	r17, 0xFF	; 255
    2040:	fe 01       	movw	r30, r28
    2042:	e5 58       	subi	r30, 0x85	; 133
    2044:	ff 4f       	sbci	r31, 0xFF	; 255
    2046:	60 81       	ld	r22, Z
    2048:	71 81       	ldd	r23, Z+1	; 0x01
    204a:	82 81       	ldd	r24, Z+2	; 0x02
    204c:	93 81       	ldd	r25, Z+3	; 0x03
    204e:	20 e0       	ldi	r18, 0x00	; 0
    2050:	30 e0       	ldi	r19, 0x00	; 0
    2052:	4a ef       	ldi	r20, 0xFA	; 250
    2054:	54 e4       	ldi	r21, 0x44	; 68
    2056:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    205a:	dc 01       	movw	r26, r24
    205c:	cb 01       	movw	r24, r22
    205e:	f8 01       	movw	r30, r16
    2060:	80 83       	st	Z, r24
    2062:	91 83       	std	Z+1, r25	; 0x01
    2064:	a2 83       	std	Z+2, r26	; 0x02
    2066:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2068:	fe 01       	movw	r30, r28
    206a:	e9 58       	subi	r30, 0x89	; 137
    206c:	ff 4f       	sbci	r31, 0xFF	; 255
    206e:	60 81       	ld	r22, Z
    2070:	71 81       	ldd	r23, Z+1	; 0x01
    2072:	82 81       	ldd	r24, Z+2	; 0x02
    2074:	93 81       	ldd	r25, Z+3	; 0x03
    2076:	20 e0       	ldi	r18, 0x00	; 0
    2078:	30 e0       	ldi	r19, 0x00	; 0
    207a:	40 e8       	ldi	r20, 0x80	; 128
    207c:	5f e3       	ldi	r21, 0x3F	; 63
    207e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2082:	88 23       	and	r24, r24
    2084:	44 f4       	brge	.+16     	; 0x2096 <main+0xcc6>
		__ticks = 1;
    2086:	fe 01       	movw	r30, r28
    2088:	eb 58       	subi	r30, 0x8B	; 139
    208a:	ff 4f       	sbci	r31, 0xFF	; 255
    208c:	81 e0       	ldi	r24, 0x01	; 1
    208e:	90 e0       	ldi	r25, 0x00	; 0
    2090:	91 83       	std	Z+1, r25	; 0x01
    2092:	80 83       	st	Z, r24
    2094:	64 c0       	rjmp	.+200    	; 0x215e <main+0xd8e>
	else if (__tmp > 65535)
    2096:	fe 01       	movw	r30, r28
    2098:	e9 58       	subi	r30, 0x89	; 137
    209a:	ff 4f       	sbci	r31, 0xFF	; 255
    209c:	60 81       	ld	r22, Z
    209e:	71 81       	ldd	r23, Z+1	; 0x01
    20a0:	82 81       	ldd	r24, Z+2	; 0x02
    20a2:	93 81       	ldd	r25, Z+3	; 0x03
    20a4:	20 e0       	ldi	r18, 0x00	; 0
    20a6:	3f ef       	ldi	r19, 0xFF	; 255
    20a8:	4f e7       	ldi	r20, 0x7F	; 127
    20aa:	57 e4       	ldi	r21, 0x47	; 71
    20ac:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    20b0:	18 16       	cp	r1, r24
    20b2:	0c f0       	brlt	.+2      	; 0x20b6 <main+0xce6>
    20b4:	43 c0       	rjmp	.+134    	; 0x213c <main+0xd6c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    20b6:	fe 01       	movw	r30, r28
    20b8:	e5 58       	subi	r30, 0x85	; 133
    20ba:	ff 4f       	sbci	r31, 0xFF	; 255
    20bc:	60 81       	ld	r22, Z
    20be:	71 81       	ldd	r23, Z+1	; 0x01
    20c0:	82 81       	ldd	r24, Z+2	; 0x02
    20c2:	93 81       	ldd	r25, Z+3	; 0x03
    20c4:	20 e0       	ldi	r18, 0x00	; 0
    20c6:	30 e0       	ldi	r19, 0x00	; 0
    20c8:	40 e2       	ldi	r20, 0x20	; 32
    20ca:	51 e4       	ldi	r21, 0x41	; 65
    20cc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20d0:	dc 01       	movw	r26, r24
    20d2:	cb 01       	movw	r24, r22
    20d4:	8e 01       	movw	r16, r28
    20d6:	0b 58       	subi	r16, 0x8B	; 139
    20d8:	1f 4f       	sbci	r17, 0xFF	; 255
    20da:	bc 01       	movw	r22, r24
    20dc:	cd 01       	movw	r24, r26
    20de:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    20e2:	dc 01       	movw	r26, r24
    20e4:	cb 01       	movw	r24, r22
    20e6:	f8 01       	movw	r30, r16
    20e8:	91 83       	std	Z+1, r25	; 0x01
    20ea:	80 83       	st	Z, r24
    20ec:	1f c0       	rjmp	.+62     	; 0x212c <main+0xd5c>
    20ee:	fe 01       	movw	r30, r28
    20f0:	ed 58       	subi	r30, 0x8D	; 141
    20f2:	ff 4f       	sbci	r31, 0xFF	; 255
    20f4:	88 ec       	ldi	r24, 0xC8	; 200
    20f6:	90 e0       	ldi	r25, 0x00	; 0
    20f8:	91 83       	std	Z+1, r25	; 0x01
    20fa:	80 83       	st	Z, r24
    20fc:	fe 01       	movw	r30, r28
    20fe:	ed 58       	subi	r30, 0x8D	; 141
    2100:	ff 4f       	sbci	r31, 0xFF	; 255
    2102:	80 81       	ld	r24, Z
    2104:	91 81       	ldd	r25, Z+1	; 0x01
    2106:	01 97       	sbiw	r24, 0x01	; 1
    2108:	f1 f7       	brne	.-4      	; 0x2106 <main+0xd36>
    210a:	fe 01       	movw	r30, r28
    210c:	ed 58       	subi	r30, 0x8D	; 141
    210e:	ff 4f       	sbci	r31, 0xFF	; 255
    2110:	91 83       	std	Z+1, r25	; 0x01
    2112:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2114:	de 01       	movw	r26, r28
    2116:	ab 58       	subi	r26, 0x8B	; 139
    2118:	bf 4f       	sbci	r27, 0xFF	; 255
    211a:	fe 01       	movw	r30, r28
    211c:	eb 58       	subi	r30, 0x8B	; 139
    211e:	ff 4f       	sbci	r31, 0xFF	; 255
    2120:	80 81       	ld	r24, Z
    2122:	91 81       	ldd	r25, Z+1	; 0x01
    2124:	01 97       	sbiw	r24, 0x01	; 1
    2126:	11 96       	adiw	r26, 0x01	; 1
    2128:	9c 93       	st	X, r25
    212a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    212c:	fe 01       	movw	r30, r28
    212e:	eb 58       	subi	r30, 0x8B	; 139
    2130:	ff 4f       	sbci	r31, 0xFF	; 255
    2132:	80 81       	ld	r24, Z
    2134:	91 81       	ldd	r25, Z+1	; 0x01
    2136:	00 97       	sbiw	r24, 0x00	; 0
    2138:	d1 f6       	brne	.-76     	; 0x20ee <main+0xd1e>
    213a:	27 c0       	rjmp	.+78     	; 0x218a <main+0xdba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    213c:	8e 01       	movw	r16, r28
    213e:	0b 58       	subi	r16, 0x8B	; 139
    2140:	1f 4f       	sbci	r17, 0xFF	; 255
    2142:	fe 01       	movw	r30, r28
    2144:	e9 58       	subi	r30, 0x89	; 137
    2146:	ff 4f       	sbci	r31, 0xFF	; 255
    2148:	60 81       	ld	r22, Z
    214a:	71 81       	ldd	r23, Z+1	; 0x01
    214c:	82 81       	ldd	r24, Z+2	; 0x02
    214e:	93 81       	ldd	r25, Z+3	; 0x03
    2150:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2154:	dc 01       	movw	r26, r24
    2156:	cb 01       	movw	r24, r22
    2158:	f8 01       	movw	r30, r16
    215a:	91 83       	std	Z+1, r25	; 0x01
    215c:	80 83       	st	Z, r24
    215e:	de 01       	movw	r26, r28
    2160:	af 58       	subi	r26, 0x8F	; 143
    2162:	bf 4f       	sbci	r27, 0xFF	; 255
    2164:	fe 01       	movw	r30, r28
    2166:	eb 58       	subi	r30, 0x8B	; 139
    2168:	ff 4f       	sbci	r31, 0xFF	; 255
    216a:	80 81       	ld	r24, Z
    216c:	91 81       	ldd	r25, Z+1	; 0x01
    216e:	8d 93       	st	X+, r24
    2170:	9c 93       	st	X, r25
    2172:	fe 01       	movw	r30, r28
    2174:	ef 58       	subi	r30, 0x8F	; 143
    2176:	ff 4f       	sbci	r31, 0xFF	; 255
    2178:	80 81       	ld	r24, Z
    217a:	91 81       	ldd	r25, Z+1	; 0x01
    217c:	01 97       	sbiw	r24, 0x01	; 1
    217e:	f1 f7       	brne	.-4      	; 0x217c <main+0xdac>
    2180:	fe 01       	movw	r30, r28
    2182:	ef 58       	subi	r30, 0x8F	; 143
    2184:	ff 4f       	sbci	r31, 0xFF	; 255
    2186:	91 83       	std	Z+1, r25	; 0x01
    2188:	80 83       	st	Z, r24
          _delay_ms(30);
          DIO_u8GetPinValue(1,1,&pu8_GetPinValue1);
    218a:	9e 01       	movw	r18, r28
    218c:	21 51       	subi	r18, 0x11	; 17
    218e:	3f 4f       	sbci	r19, 0xFF	; 255
    2190:	81 e0       	ldi	r24, 0x01	; 1
    2192:	90 e0       	ldi	r25, 0x00	; 0
    2194:	61 e0       	ldi	r22, 0x01	; 1
    2196:	70 e0       	ldi	r23, 0x00	; 0
    2198:	a9 01       	movw	r20, r18
    219a:	0e 94 a4 07 	call	0xf48	; 0xf48 <DIO_u8GetPinValue>
    219e:	fe 01       	movw	r30, r28
    21a0:	e3 59       	subi	r30, 0x93	; 147
    21a2:	ff 4f       	sbci	r31, 0xFF	; 255
    21a4:	80 e0       	ldi	r24, 0x00	; 0
    21a6:	90 e0       	ldi	r25, 0x00	; 0
    21a8:	a0 ef       	ldi	r26, 0xF0	; 240
    21aa:	b1 e4       	ldi	r27, 0x41	; 65
    21ac:	80 83       	st	Z, r24
    21ae:	91 83       	std	Z+1, r25	; 0x01
    21b0:	a2 83       	std	Z+2, r26	; 0x02
    21b2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21b4:	8e 01       	movw	r16, r28
    21b6:	07 59       	subi	r16, 0x97	; 151
    21b8:	1f 4f       	sbci	r17, 0xFF	; 255
    21ba:	fe 01       	movw	r30, r28
    21bc:	e3 59       	subi	r30, 0x93	; 147
    21be:	ff 4f       	sbci	r31, 0xFF	; 255
    21c0:	60 81       	ld	r22, Z
    21c2:	71 81       	ldd	r23, Z+1	; 0x01
    21c4:	82 81       	ldd	r24, Z+2	; 0x02
    21c6:	93 81       	ldd	r25, Z+3	; 0x03
    21c8:	20 e0       	ldi	r18, 0x00	; 0
    21ca:	30 e0       	ldi	r19, 0x00	; 0
    21cc:	4a ef       	ldi	r20, 0xFA	; 250
    21ce:	54 e4       	ldi	r21, 0x44	; 68
    21d0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21d4:	dc 01       	movw	r26, r24
    21d6:	cb 01       	movw	r24, r22
    21d8:	f8 01       	movw	r30, r16
    21da:	80 83       	st	Z, r24
    21dc:	91 83       	std	Z+1, r25	; 0x01
    21de:	a2 83       	std	Z+2, r26	; 0x02
    21e0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    21e2:	fe 01       	movw	r30, r28
    21e4:	e7 59       	subi	r30, 0x97	; 151
    21e6:	ff 4f       	sbci	r31, 0xFF	; 255
    21e8:	60 81       	ld	r22, Z
    21ea:	71 81       	ldd	r23, Z+1	; 0x01
    21ec:	82 81       	ldd	r24, Z+2	; 0x02
    21ee:	93 81       	ldd	r25, Z+3	; 0x03
    21f0:	20 e0       	ldi	r18, 0x00	; 0
    21f2:	30 e0       	ldi	r19, 0x00	; 0
    21f4:	40 e8       	ldi	r20, 0x80	; 128
    21f6:	5f e3       	ldi	r21, 0x3F	; 63
    21f8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    21fc:	88 23       	and	r24, r24
    21fe:	44 f4       	brge	.+16     	; 0x2210 <main+0xe40>
		__ticks = 1;
    2200:	fe 01       	movw	r30, r28
    2202:	e9 59       	subi	r30, 0x99	; 153
    2204:	ff 4f       	sbci	r31, 0xFF	; 255
    2206:	81 e0       	ldi	r24, 0x01	; 1
    2208:	90 e0       	ldi	r25, 0x00	; 0
    220a:	91 83       	std	Z+1, r25	; 0x01
    220c:	80 83       	st	Z, r24
    220e:	64 c0       	rjmp	.+200    	; 0x22d8 <main+0xf08>
	else if (__tmp > 65535)
    2210:	fe 01       	movw	r30, r28
    2212:	e7 59       	subi	r30, 0x97	; 151
    2214:	ff 4f       	sbci	r31, 0xFF	; 255
    2216:	60 81       	ld	r22, Z
    2218:	71 81       	ldd	r23, Z+1	; 0x01
    221a:	82 81       	ldd	r24, Z+2	; 0x02
    221c:	93 81       	ldd	r25, Z+3	; 0x03
    221e:	20 e0       	ldi	r18, 0x00	; 0
    2220:	3f ef       	ldi	r19, 0xFF	; 255
    2222:	4f e7       	ldi	r20, 0x7F	; 127
    2224:	57 e4       	ldi	r21, 0x47	; 71
    2226:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    222a:	18 16       	cp	r1, r24
    222c:	0c f0       	brlt	.+2      	; 0x2230 <main+0xe60>
    222e:	43 c0       	rjmp	.+134    	; 0x22b6 <main+0xee6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2230:	fe 01       	movw	r30, r28
    2232:	e3 59       	subi	r30, 0x93	; 147
    2234:	ff 4f       	sbci	r31, 0xFF	; 255
    2236:	60 81       	ld	r22, Z
    2238:	71 81       	ldd	r23, Z+1	; 0x01
    223a:	82 81       	ldd	r24, Z+2	; 0x02
    223c:	93 81       	ldd	r25, Z+3	; 0x03
    223e:	20 e0       	ldi	r18, 0x00	; 0
    2240:	30 e0       	ldi	r19, 0x00	; 0
    2242:	40 e2       	ldi	r20, 0x20	; 32
    2244:	51 e4       	ldi	r21, 0x41	; 65
    2246:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    224a:	dc 01       	movw	r26, r24
    224c:	cb 01       	movw	r24, r22
    224e:	8e 01       	movw	r16, r28
    2250:	09 59       	subi	r16, 0x99	; 153
    2252:	1f 4f       	sbci	r17, 0xFF	; 255
    2254:	bc 01       	movw	r22, r24
    2256:	cd 01       	movw	r24, r26
    2258:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    225c:	dc 01       	movw	r26, r24
    225e:	cb 01       	movw	r24, r22
    2260:	f8 01       	movw	r30, r16
    2262:	91 83       	std	Z+1, r25	; 0x01
    2264:	80 83       	st	Z, r24
    2266:	1f c0       	rjmp	.+62     	; 0x22a6 <main+0xed6>
    2268:	fe 01       	movw	r30, r28
    226a:	eb 59       	subi	r30, 0x9B	; 155
    226c:	ff 4f       	sbci	r31, 0xFF	; 255
    226e:	88 ec       	ldi	r24, 0xC8	; 200
    2270:	90 e0       	ldi	r25, 0x00	; 0
    2272:	91 83       	std	Z+1, r25	; 0x01
    2274:	80 83       	st	Z, r24
    2276:	fe 01       	movw	r30, r28
    2278:	eb 59       	subi	r30, 0x9B	; 155
    227a:	ff 4f       	sbci	r31, 0xFF	; 255
    227c:	80 81       	ld	r24, Z
    227e:	91 81       	ldd	r25, Z+1	; 0x01
    2280:	01 97       	sbiw	r24, 0x01	; 1
    2282:	f1 f7       	brne	.-4      	; 0x2280 <main+0xeb0>
    2284:	fe 01       	movw	r30, r28
    2286:	eb 59       	subi	r30, 0x9B	; 155
    2288:	ff 4f       	sbci	r31, 0xFF	; 255
    228a:	91 83       	std	Z+1, r25	; 0x01
    228c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    228e:	de 01       	movw	r26, r28
    2290:	a9 59       	subi	r26, 0x99	; 153
    2292:	bf 4f       	sbci	r27, 0xFF	; 255
    2294:	fe 01       	movw	r30, r28
    2296:	e9 59       	subi	r30, 0x99	; 153
    2298:	ff 4f       	sbci	r31, 0xFF	; 255
    229a:	80 81       	ld	r24, Z
    229c:	91 81       	ldd	r25, Z+1	; 0x01
    229e:	01 97       	sbiw	r24, 0x01	; 1
    22a0:	11 96       	adiw	r26, 0x01	; 1
    22a2:	9c 93       	st	X, r25
    22a4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    22a6:	fe 01       	movw	r30, r28
    22a8:	e9 59       	subi	r30, 0x99	; 153
    22aa:	ff 4f       	sbci	r31, 0xFF	; 255
    22ac:	80 81       	ld	r24, Z
    22ae:	91 81       	ldd	r25, Z+1	; 0x01
    22b0:	00 97       	sbiw	r24, 0x00	; 0
    22b2:	d1 f6       	brne	.-76     	; 0x2268 <main+0xe98>
    22b4:	28 c0       	rjmp	.+80     	; 0x2306 <main+0xf36>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    22b6:	8e 01       	movw	r16, r28
    22b8:	09 59       	subi	r16, 0x99	; 153
    22ba:	1f 4f       	sbci	r17, 0xFF	; 255
    22bc:	fe 01       	movw	r30, r28
    22be:	e7 59       	subi	r30, 0x97	; 151
    22c0:	ff 4f       	sbci	r31, 0xFF	; 255
    22c2:	60 81       	ld	r22, Z
    22c4:	71 81       	ldd	r23, Z+1	; 0x01
    22c6:	82 81       	ldd	r24, Z+2	; 0x02
    22c8:	93 81       	ldd	r25, Z+3	; 0x03
    22ca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    22ce:	dc 01       	movw	r26, r24
    22d0:	cb 01       	movw	r24, r22
    22d2:	f8 01       	movw	r30, r16
    22d4:	91 83       	std	Z+1, r25	; 0x01
    22d6:	80 83       	st	Z, r24
    22d8:	de 01       	movw	r26, r28
    22da:	ad 59       	subi	r26, 0x9D	; 157
    22dc:	bf 4f       	sbci	r27, 0xFF	; 255
    22de:	fe 01       	movw	r30, r28
    22e0:	e9 59       	subi	r30, 0x99	; 153
    22e2:	ff 4f       	sbci	r31, 0xFF	; 255
    22e4:	80 81       	ld	r24, Z
    22e6:	91 81       	ldd	r25, Z+1	; 0x01
    22e8:	11 96       	adiw	r26, 0x01	; 1
    22ea:	9c 93       	st	X, r25
    22ec:	8e 93       	st	-X, r24
    22ee:	fe 01       	movw	r30, r28
    22f0:	ed 59       	subi	r30, 0x9D	; 157
    22f2:	ff 4f       	sbci	r31, 0xFF	; 255
    22f4:	80 81       	ld	r24, Z
    22f6:	91 81       	ldd	r25, Z+1	; 0x01
    22f8:	01 97       	sbiw	r24, 0x01	; 1
    22fa:	f1 f7       	brne	.-4      	; 0x22f8 <main+0xf28>
    22fc:	fe 01       	movw	r30, r28
    22fe:	ed 59       	subi	r30, 0x9D	; 157
    2300:	ff 4f       	sbci	r31, 0xFF	; 255
    2302:	91 83       	std	Z+1, r25	; 0x01
    2304:	80 83       	st	Z, r24
       _delay_ms(300);
       DIO_u8GetPinValue(1,0,&pu8_GetPinValue);
       _delay_ms(30);
       DIO_u8GetPinValue(1,1,&pu8_GetPinValue1);
       _delay_ms(30);
      while((pu8_GetPinValue==0)&&(pu8_GetPinValue1==0))
    2306:	fe 01       	movw	r30, r28
    2308:	e3 51       	subi	r30, 0x13	; 19
    230a:	ff 4f       	sbci	r31, 0xFF	; 255
    230c:	80 81       	ld	r24, Z
    230e:	91 81       	ldd	r25, Z+1	; 0x01
    2310:	00 97       	sbiw	r24, 0x00	; 0
    2312:	41 f4       	brne	.+16     	; 0x2324 <main+0xf54>
    2314:	fe 01       	movw	r30, r28
    2316:	e1 51       	subi	r30, 0x11	; 17
    2318:	ff 4f       	sbci	r31, 0xFF	; 255
    231a:	80 81       	ld	r24, Z
    231c:	91 81       	ldd	r25, Z+1	; 0x01
    231e:	00 97       	sbiw	r24, 0x00	; 0
    2320:	09 f4       	brne	.+2      	; 0x2324 <main+0xf54>
    2322:	b9 cc       	rjmp	.-1678   	; 0x1c96 <main+0x8c6>
  DIO_u8GetPinValue(1,1,&pu8_GetPinValue1);
  _delay_ms(30);
  if((pu8_GetPinValue==0) && (pu8_GetPinValue1 !=0))
  {

	  for(;pu8_GetPinValue==0;i++)
    2324:	de 01       	movw	r26, r28
    2326:	ae 51       	subi	r26, 0x1E	; 30
    2328:	bf 4f       	sbci	r27, 0xFF	; 255
    232a:	fe 01       	movw	r30, r28
    232c:	ee 51       	subi	r30, 0x1E	; 30
    232e:	ff 4f       	sbci	r31, 0xFF	; 255
    2330:	80 81       	ld	r24, Z
    2332:	8f 5f       	subi	r24, 0xFF	; 255
    2334:	8c 93       	st	X, r24
    2336:	fe 01       	movw	r30, r28
    2338:	e3 51       	subi	r30, 0x13	; 19
    233a:	ff 4f       	sbci	r31, 0xFF	; 255
    233c:	80 81       	ld	r24, Z
    233e:	91 81       	ldd	r25, Z+1	; 0x01
    2340:	00 97       	sbiw	r24, 0x00	; 0
    2342:	09 f4       	brne	.+2      	; 0x2346 <main+0xf76>
    2344:	59 ca       	rjmp	.-2894   	; 0x17f8 <main+0x428>
          DIO_u8GetPinValue(1,1,&pu8_GetPinValue1);
          _delay_ms(30);
	   }
  }
 }
   if((pu8_GetPinValue1==0) && (pu8_GetPinValue !=0))
    2346:	fe 01       	movw	r30, r28
    2348:	e1 51       	subi	r30, 0x11	; 17
    234a:	ff 4f       	sbci	r31, 0xFF	; 255
    234c:	80 81       	ld	r24, Z
    234e:	91 81       	ldd	r25, Z+1	; 0x01
    2350:	00 97       	sbiw	r24, 0x00	; 0
    2352:	09 f0       	breq	.+2      	; 0x2356 <main+0xf86>
    2354:	c5 c8       	rjmp	.-3702   	; 0x14e0 <main+0x110>
    2356:	fe 01       	movw	r30, r28
    2358:	e3 51       	subi	r30, 0x13	; 19
    235a:	ff 4f       	sbci	r31, 0xFF	; 255
    235c:	80 81       	ld	r24, Z
    235e:	91 81       	ldd	r25, Z+1	; 0x01
    2360:	00 97       	sbiw	r24, 0x00	; 0
    2362:	09 f4       	brne	.+2      	; 0x2366 <main+0xf96>
    2364:	bd c8       	rjmp	.-3718   	; 0x14e0 <main+0x110>
    2366:	69 c4       	rjmp	.+2258   	; 0x2c3a <main+0x186a>
	{
		  for(;pu8_GetPinValue1==0;)
		  {
			  x++;
    2368:	de 01       	movw	r26, r28
    236a:	af 51       	subi	r26, 0x1F	; 31
    236c:	bf 4f       	sbci	r27, 0xFF	; 255
    236e:	fe 01       	movw	r30, r28
    2370:	ef 51       	subi	r30, 0x1F	; 31
    2372:	ff 4f       	sbci	r31, 0xFF	; 255
    2374:	80 81       	ld	r24, Z
    2376:	8f 5f       	subi	r24, 0xFF	; 255
    2378:	8c 93       	st	X, r24
		       if(x==10)
    237a:	fe 01       	movw	r30, r28
    237c:	ef 51       	subi	r30, 0x1F	; 31
    237e:	ff 4f       	sbci	r31, 0xFF	; 255
    2380:	80 81       	ld	r24, Z
    2382:	8a 30       	cpi	r24, 0x0A	; 10
    2384:	21 f4       	brne	.+8      	; 0x238e <main+0xfbe>
		       {
		    	   x=0;
    2386:	fe 01       	movw	r30, r28
    2388:	ef 51       	subi	r30, 0x1F	; 31
    238a:	ff 4f       	sbci	r31, 0xFF	; 255
    238c:	10 82       	st	Z, r1
		       }
		   DIO_u8AnalogPort(3,sevenseg[x]);
    238e:	fe 01       	movw	r30, r28
    2390:	ef 51       	subi	r30, 0x1F	; 31
    2392:	ff 4f       	sbci	r31, 0xFF	; 255
    2394:	80 81       	ld	r24, Z
    2396:	28 2f       	mov	r18, r24
    2398:	33 27       	eor	r19, r19
    239a:	27 fd       	sbrc	r18, 7
    239c:	30 95       	com	r19
    239e:	ce 01       	movw	r24, r28
    23a0:	8d 51       	subi	r24, 0x1D	; 29
    23a2:	9f 4f       	sbci	r25, 0xFF	; 255
    23a4:	fc 01       	movw	r30, r24
    23a6:	e2 0f       	add	r30, r18
    23a8:	f3 1f       	adc	r31, r19
    23aa:	80 81       	ld	r24, Z
    23ac:	28 2f       	mov	r18, r24
    23ae:	30 e0       	ldi	r19, 0x00	; 0
    23b0:	83 e0       	ldi	r24, 0x03	; 3
    23b2:	90 e0       	ldi	r25, 0x00	; 0
    23b4:	b9 01       	movw	r22, r18
    23b6:	0e 94 9d 09 	call	0x133a	; 0x133a <DIO_u8AnalogPort>
    23ba:	fe 01       	movw	r30, r28
    23bc:	e1 5a       	subi	r30, 0xA1	; 161
    23be:	ff 4f       	sbci	r31, 0xFF	; 255
    23c0:	80 e0       	ldi	r24, 0x00	; 0
    23c2:	90 e0       	ldi	r25, 0x00	; 0
    23c4:	a6 e9       	ldi	r26, 0x96	; 150
    23c6:	b3 e4       	ldi	r27, 0x43	; 67
    23c8:	80 83       	st	Z, r24
    23ca:	91 83       	std	Z+1, r25	; 0x01
    23cc:	a2 83       	std	Z+2, r26	; 0x02
    23ce:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    23d0:	8e 01       	movw	r16, r28
    23d2:	05 5a       	subi	r16, 0xA5	; 165
    23d4:	1f 4f       	sbci	r17, 0xFF	; 255
    23d6:	fe 01       	movw	r30, r28
    23d8:	e1 5a       	subi	r30, 0xA1	; 161
    23da:	ff 4f       	sbci	r31, 0xFF	; 255
    23dc:	60 81       	ld	r22, Z
    23de:	71 81       	ldd	r23, Z+1	; 0x01
    23e0:	82 81       	ldd	r24, Z+2	; 0x02
    23e2:	93 81       	ldd	r25, Z+3	; 0x03
    23e4:	20 e0       	ldi	r18, 0x00	; 0
    23e6:	30 e0       	ldi	r19, 0x00	; 0
    23e8:	4a ef       	ldi	r20, 0xFA	; 250
    23ea:	54 e4       	ldi	r21, 0x44	; 68
    23ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23f0:	dc 01       	movw	r26, r24
    23f2:	cb 01       	movw	r24, r22
    23f4:	f8 01       	movw	r30, r16
    23f6:	80 83       	st	Z, r24
    23f8:	91 83       	std	Z+1, r25	; 0x01
    23fa:	a2 83       	std	Z+2, r26	; 0x02
    23fc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    23fe:	fe 01       	movw	r30, r28
    2400:	e5 5a       	subi	r30, 0xA5	; 165
    2402:	ff 4f       	sbci	r31, 0xFF	; 255
    2404:	60 81       	ld	r22, Z
    2406:	71 81       	ldd	r23, Z+1	; 0x01
    2408:	82 81       	ldd	r24, Z+2	; 0x02
    240a:	93 81       	ldd	r25, Z+3	; 0x03
    240c:	20 e0       	ldi	r18, 0x00	; 0
    240e:	30 e0       	ldi	r19, 0x00	; 0
    2410:	40 e8       	ldi	r20, 0x80	; 128
    2412:	5f e3       	ldi	r21, 0x3F	; 63
    2414:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2418:	88 23       	and	r24, r24
    241a:	44 f4       	brge	.+16     	; 0x242c <main+0x105c>
		__ticks = 1;
    241c:	fe 01       	movw	r30, r28
    241e:	e7 5a       	subi	r30, 0xA7	; 167
    2420:	ff 4f       	sbci	r31, 0xFF	; 255
    2422:	81 e0       	ldi	r24, 0x01	; 1
    2424:	90 e0       	ldi	r25, 0x00	; 0
    2426:	91 83       	std	Z+1, r25	; 0x01
    2428:	80 83       	st	Z, r24
    242a:	64 c0       	rjmp	.+200    	; 0x24f4 <main+0x1124>
	else if (__tmp > 65535)
    242c:	fe 01       	movw	r30, r28
    242e:	e5 5a       	subi	r30, 0xA5	; 165
    2430:	ff 4f       	sbci	r31, 0xFF	; 255
    2432:	60 81       	ld	r22, Z
    2434:	71 81       	ldd	r23, Z+1	; 0x01
    2436:	82 81       	ldd	r24, Z+2	; 0x02
    2438:	93 81       	ldd	r25, Z+3	; 0x03
    243a:	20 e0       	ldi	r18, 0x00	; 0
    243c:	3f ef       	ldi	r19, 0xFF	; 255
    243e:	4f e7       	ldi	r20, 0x7F	; 127
    2440:	57 e4       	ldi	r21, 0x47	; 71
    2442:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2446:	18 16       	cp	r1, r24
    2448:	0c f0       	brlt	.+2      	; 0x244c <main+0x107c>
    244a:	43 c0       	rjmp	.+134    	; 0x24d2 <main+0x1102>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    244c:	fe 01       	movw	r30, r28
    244e:	e1 5a       	subi	r30, 0xA1	; 161
    2450:	ff 4f       	sbci	r31, 0xFF	; 255
    2452:	60 81       	ld	r22, Z
    2454:	71 81       	ldd	r23, Z+1	; 0x01
    2456:	82 81       	ldd	r24, Z+2	; 0x02
    2458:	93 81       	ldd	r25, Z+3	; 0x03
    245a:	20 e0       	ldi	r18, 0x00	; 0
    245c:	30 e0       	ldi	r19, 0x00	; 0
    245e:	40 e2       	ldi	r20, 0x20	; 32
    2460:	51 e4       	ldi	r21, 0x41	; 65
    2462:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2466:	dc 01       	movw	r26, r24
    2468:	cb 01       	movw	r24, r22
    246a:	8e 01       	movw	r16, r28
    246c:	07 5a       	subi	r16, 0xA7	; 167
    246e:	1f 4f       	sbci	r17, 0xFF	; 255
    2470:	bc 01       	movw	r22, r24
    2472:	cd 01       	movw	r24, r26
    2474:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2478:	dc 01       	movw	r26, r24
    247a:	cb 01       	movw	r24, r22
    247c:	f8 01       	movw	r30, r16
    247e:	91 83       	std	Z+1, r25	; 0x01
    2480:	80 83       	st	Z, r24
    2482:	1f c0       	rjmp	.+62     	; 0x24c2 <main+0x10f2>
    2484:	fe 01       	movw	r30, r28
    2486:	e9 5a       	subi	r30, 0xA9	; 169
    2488:	ff 4f       	sbci	r31, 0xFF	; 255
    248a:	88 ec       	ldi	r24, 0xC8	; 200
    248c:	90 e0       	ldi	r25, 0x00	; 0
    248e:	91 83       	std	Z+1, r25	; 0x01
    2490:	80 83       	st	Z, r24
    2492:	fe 01       	movw	r30, r28
    2494:	e9 5a       	subi	r30, 0xA9	; 169
    2496:	ff 4f       	sbci	r31, 0xFF	; 255
    2498:	80 81       	ld	r24, Z
    249a:	91 81       	ldd	r25, Z+1	; 0x01
    249c:	01 97       	sbiw	r24, 0x01	; 1
    249e:	f1 f7       	brne	.-4      	; 0x249c <main+0x10cc>
    24a0:	fe 01       	movw	r30, r28
    24a2:	e9 5a       	subi	r30, 0xA9	; 169
    24a4:	ff 4f       	sbci	r31, 0xFF	; 255
    24a6:	91 83       	std	Z+1, r25	; 0x01
    24a8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24aa:	de 01       	movw	r26, r28
    24ac:	a7 5a       	subi	r26, 0xA7	; 167
    24ae:	bf 4f       	sbci	r27, 0xFF	; 255
    24b0:	fe 01       	movw	r30, r28
    24b2:	e7 5a       	subi	r30, 0xA7	; 167
    24b4:	ff 4f       	sbci	r31, 0xFF	; 255
    24b6:	80 81       	ld	r24, Z
    24b8:	91 81       	ldd	r25, Z+1	; 0x01
    24ba:	01 97       	sbiw	r24, 0x01	; 1
    24bc:	11 96       	adiw	r26, 0x01	; 1
    24be:	9c 93       	st	X, r25
    24c0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24c2:	fe 01       	movw	r30, r28
    24c4:	e7 5a       	subi	r30, 0xA7	; 167
    24c6:	ff 4f       	sbci	r31, 0xFF	; 255
    24c8:	80 81       	ld	r24, Z
    24ca:	91 81       	ldd	r25, Z+1	; 0x01
    24cc:	00 97       	sbiw	r24, 0x00	; 0
    24ce:	d1 f6       	brne	.-76     	; 0x2484 <main+0x10b4>
    24d0:	27 c0       	rjmp	.+78     	; 0x2520 <main+0x1150>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24d2:	8e 01       	movw	r16, r28
    24d4:	07 5a       	subi	r16, 0xA7	; 167
    24d6:	1f 4f       	sbci	r17, 0xFF	; 255
    24d8:	fe 01       	movw	r30, r28
    24da:	e5 5a       	subi	r30, 0xA5	; 165
    24dc:	ff 4f       	sbci	r31, 0xFF	; 255
    24de:	60 81       	ld	r22, Z
    24e0:	71 81       	ldd	r23, Z+1	; 0x01
    24e2:	82 81       	ldd	r24, Z+2	; 0x02
    24e4:	93 81       	ldd	r25, Z+3	; 0x03
    24e6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24ea:	dc 01       	movw	r26, r24
    24ec:	cb 01       	movw	r24, r22
    24ee:	f8 01       	movw	r30, r16
    24f0:	91 83       	std	Z+1, r25	; 0x01
    24f2:	80 83       	st	Z, r24
    24f4:	de 01       	movw	r26, r28
    24f6:	ab 5a       	subi	r26, 0xAB	; 171
    24f8:	bf 4f       	sbci	r27, 0xFF	; 255
    24fa:	fe 01       	movw	r30, r28
    24fc:	e7 5a       	subi	r30, 0xA7	; 167
    24fe:	ff 4f       	sbci	r31, 0xFF	; 255
    2500:	80 81       	ld	r24, Z
    2502:	91 81       	ldd	r25, Z+1	; 0x01
    2504:	8d 93       	st	X+, r24
    2506:	9c 93       	st	X, r25
    2508:	fe 01       	movw	r30, r28
    250a:	eb 5a       	subi	r30, 0xAB	; 171
    250c:	ff 4f       	sbci	r31, 0xFF	; 255
    250e:	80 81       	ld	r24, Z
    2510:	91 81       	ldd	r25, Z+1	; 0x01
    2512:	01 97       	sbiw	r24, 0x01	; 1
    2514:	f1 f7       	brne	.-4      	; 0x2512 <main+0x1142>
    2516:	fe 01       	movw	r30, r28
    2518:	eb 5a       	subi	r30, 0xAB	; 171
    251a:	ff 4f       	sbci	r31, 0xFF	; 255
    251c:	91 83       	std	Z+1, r25	; 0x01
    251e:	80 83       	st	Z, r24
	       _delay_ms(300);
	       DIO_u8GetPinValue(1,1,&pu8_GetPinValue1);
    2520:	9e 01       	movw	r18, r28
    2522:	21 51       	subi	r18, 0x11	; 17
    2524:	3f 4f       	sbci	r19, 0xFF	; 255
    2526:	81 e0       	ldi	r24, 0x01	; 1
    2528:	90 e0       	ldi	r25, 0x00	; 0
    252a:	61 e0       	ldi	r22, 0x01	; 1
    252c:	70 e0       	ldi	r23, 0x00	; 0
    252e:	a9 01       	movw	r20, r18
    2530:	0e 94 a4 07 	call	0xf48	; 0xf48 <DIO_u8GetPinValue>
    2534:	fe 01       	movw	r30, r28
    2536:	ef 5a       	subi	r30, 0xAF	; 175
    2538:	ff 4f       	sbci	r31, 0xFF	; 255
    253a:	80 e0       	ldi	r24, 0x00	; 0
    253c:	90 e0       	ldi	r25, 0x00	; 0
    253e:	a0 ef       	ldi	r26, 0xF0	; 240
    2540:	b1 e4       	ldi	r27, 0x41	; 65
    2542:	80 83       	st	Z, r24
    2544:	91 83       	std	Z+1, r25	; 0x01
    2546:	a2 83       	std	Z+2, r26	; 0x02
    2548:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    254a:	8e 01       	movw	r16, r28
    254c:	03 5b       	subi	r16, 0xB3	; 179
    254e:	1f 4f       	sbci	r17, 0xFF	; 255
    2550:	fe 01       	movw	r30, r28
    2552:	ef 5a       	subi	r30, 0xAF	; 175
    2554:	ff 4f       	sbci	r31, 0xFF	; 255
    2556:	60 81       	ld	r22, Z
    2558:	71 81       	ldd	r23, Z+1	; 0x01
    255a:	82 81       	ldd	r24, Z+2	; 0x02
    255c:	93 81       	ldd	r25, Z+3	; 0x03
    255e:	20 e0       	ldi	r18, 0x00	; 0
    2560:	30 e0       	ldi	r19, 0x00	; 0
    2562:	4a ef       	ldi	r20, 0xFA	; 250
    2564:	54 e4       	ldi	r21, 0x44	; 68
    2566:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    256a:	dc 01       	movw	r26, r24
    256c:	cb 01       	movw	r24, r22
    256e:	f8 01       	movw	r30, r16
    2570:	80 83       	st	Z, r24
    2572:	91 83       	std	Z+1, r25	; 0x01
    2574:	a2 83       	std	Z+2, r26	; 0x02
    2576:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2578:	fe 01       	movw	r30, r28
    257a:	e3 5b       	subi	r30, 0xB3	; 179
    257c:	ff 4f       	sbci	r31, 0xFF	; 255
    257e:	60 81       	ld	r22, Z
    2580:	71 81       	ldd	r23, Z+1	; 0x01
    2582:	82 81       	ldd	r24, Z+2	; 0x02
    2584:	93 81       	ldd	r25, Z+3	; 0x03
    2586:	20 e0       	ldi	r18, 0x00	; 0
    2588:	30 e0       	ldi	r19, 0x00	; 0
    258a:	40 e8       	ldi	r20, 0x80	; 128
    258c:	5f e3       	ldi	r21, 0x3F	; 63
    258e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2592:	88 23       	and	r24, r24
    2594:	44 f4       	brge	.+16     	; 0x25a6 <main+0x11d6>
		__ticks = 1;
    2596:	fe 01       	movw	r30, r28
    2598:	e5 5b       	subi	r30, 0xB5	; 181
    259a:	ff 4f       	sbci	r31, 0xFF	; 255
    259c:	81 e0       	ldi	r24, 0x01	; 1
    259e:	90 e0       	ldi	r25, 0x00	; 0
    25a0:	91 83       	std	Z+1, r25	; 0x01
    25a2:	80 83       	st	Z, r24
    25a4:	64 c0       	rjmp	.+200    	; 0x266e <main+0x129e>
	else if (__tmp > 65535)
    25a6:	fe 01       	movw	r30, r28
    25a8:	e3 5b       	subi	r30, 0xB3	; 179
    25aa:	ff 4f       	sbci	r31, 0xFF	; 255
    25ac:	60 81       	ld	r22, Z
    25ae:	71 81       	ldd	r23, Z+1	; 0x01
    25b0:	82 81       	ldd	r24, Z+2	; 0x02
    25b2:	93 81       	ldd	r25, Z+3	; 0x03
    25b4:	20 e0       	ldi	r18, 0x00	; 0
    25b6:	3f ef       	ldi	r19, 0xFF	; 255
    25b8:	4f e7       	ldi	r20, 0x7F	; 127
    25ba:	57 e4       	ldi	r21, 0x47	; 71
    25bc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    25c0:	18 16       	cp	r1, r24
    25c2:	0c f0       	brlt	.+2      	; 0x25c6 <main+0x11f6>
    25c4:	43 c0       	rjmp	.+134    	; 0x264c <main+0x127c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25c6:	fe 01       	movw	r30, r28
    25c8:	ef 5a       	subi	r30, 0xAF	; 175
    25ca:	ff 4f       	sbci	r31, 0xFF	; 255
    25cc:	60 81       	ld	r22, Z
    25ce:	71 81       	ldd	r23, Z+1	; 0x01
    25d0:	82 81       	ldd	r24, Z+2	; 0x02
    25d2:	93 81       	ldd	r25, Z+3	; 0x03
    25d4:	20 e0       	ldi	r18, 0x00	; 0
    25d6:	30 e0       	ldi	r19, 0x00	; 0
    25d8:	40 e2       	ldi	r20, 0x20	; 32
    25da:	51 e4       	ldi	r21, 0x41	; 65
    25dc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25e0:	dc 01       	movw	r26, r24
    25e2:	cb 01       	movw	r24, r22
    25e4:	8e 01       	movw	r16, r28
    25e6:	05 5b       	subi	r16, 0xB5	; 181
    25e8:	1f 4f       	sbci	r17, 0xFF	; 255
    25ea:	bc 01       	movw	r22, r24
    25ec:	cd 01       	movw	r24, r26
    25ee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25f2:	dc 01       	movw	r26, r24
    25f4:	cb 01       	movw	r24, r22
    25f6:	f8 01       	movw	r30, r16
    25f8:	91 83       	std	Z+1, r25	; 0x01
    25fa:	80 83       	st	Z, r24
    25fc:	1f c0       	rjmp	.+62     	; 0x263c <main+0x126c>
    25fe:	fe 01       	movw	r30, r28
    2600:	e7 5b       	subi	r30, 0xB7	; 183
    2602:	ff 4f       	sbci	r31, 0xFF	; 255
    2604:	88 ec       	ldi	r24, 0xC8	; 200
    2606:	90 e0       	ldi	r25, 0x00	; 0
    2608:	91 83       	std	Z+1, r25	; 0x01
    260a:	80 83       	st	Z, r24
    260c:	fe 01       	movw	r30, r28
    260e:	e7 5b       	subi	r30, 0xB7	; 183
    2610:	ff 4f       	sbci	r31, 0xFF	; 255
    2612:	80 81       	ld	r24, Z
    2614:	91 81       	ldd	r25, Z+1	; 0x01
    2616:	01 97       	sbiw	r24, 0x01	; 1
    2618:	f1 f7       	brne	.-4      	; 0x2616 <main+0x1246>
    261a:	fe 01       	movw	r30, r28
    261c:	e7 5b       	subi	r30, 0xB7	; 183
    261e:	ff 4f       	sbci	r31, 0xFF	; 255
    2620:	91 83       	std	Z+1, r25	; 0x01
    2622:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2624:	de 01       	movw	r26, r28
    2626:	a5 5b       	subi	r26, 0xB5	; 181
    2628:	bf 4f       	sbci	r27, 0xFF	; 255
    262a:	fe 01       	movw	r30, r28
    262c:	e5 5b       	subi	r30, 0xB5	; 181
    262e:	ff 4f       	sbci	r31, 0xFF	; 255
    2630:	80 81       	ld	r24, Z
    2632:	91 81       	ldd	r25, Z+1	; 0x01
    2634:	01 97       	sbiw	r24, 0x01	; 1
    2636:	11 96       	adiw	r26, 0x01	; 1
    2638:	9c 93       	st	X, r25
    263a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    263c:	fe 01       	movw	r30, r28
    263e:	e5 5b       	subi	r30, 0xB5	; 181
    2640:	ff 4f       	sbci	r31, 0xFF	; 255
    2642:	80 81       	ld	r24, Z
    2644:	91 81       	ldd	r25, Z+1	; 0x01
    2646:	00 97       	sbiw	r24, 0x00	; 0
    2648:	d1 f6       	brne	.-76     	; 0x25fe <main+0x122e>
    264a:	27 c0       	rjmp	.+78     	; 0x269a <main+0x12ca>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    264c:	8e 01       	movw	r16, r28
    264e:	05 5b       	subi	r16, 0xB5	; 181
    2650:	1f 4f       	sbci	r17, 0xFF	; 255
    2652:	fe 01       	movw	r30, r28
    2654:	e3 5b       	subi	r30, 0xB3	; 179
    2656:	ff 4f       	sbci	r31, 0xFF	; 255
    2658:	60 81       	ld	r22, Z
    265a:	71 81       	ldd	r23, Z+1	; 0x01
    265c:	82 81       	ldd	r24, Z+2	; 0x02
    265e:	93 81       	ldd	r25, Z+3	; 0x03
    2660:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2664:	dc 01       	movw	r26, r24
    2666:	cb 01       	movw	r24, r22
    2668:	f8 01       	movw	r30, r16
    266a:	91 83       	std	Z+1, r25	; 0x01
    266c:	80 83       	st	Z, r24
    266e:	de 01       	movw	r26, r28
    2670:	a9 5b       	subi	r26, 0xB9	; 185
    2672:	bf 4f       	sbci	r27, 0xFF	; 255
    2674:	fe 01       	movw	r30, r28
    2676:	e5 5b       	subi	r30, 0xB5	; 181
    2678:	ff 4f       	sbci	r31, 0xFF	; 255
    267a:	80 81       	ld	r24, Z
    267c:	91 81       	ldd	r25, Z+1	; 0x01
    267e:	8d 93       	st	X+, r24
    2680:	9c 93       	st	X, r25
    2682:	fe 01       	movw	r30, r28
    2684:	e9 5b       	subi	r30, 0xB9	; 185
    2686:	ff 4f       	sbci	r31, 0xFF	; 255
    2688:	80 81       	ld	r24, Z
    268a:	91 81       	ldd	r25, Z+1	; 0x01
    268c:	01 97       	sbiw	r24, 0x01	; 1
    268e:	f1 f7       	brne	.-4      	; 0x268c <main+0x12bc>
    2690:	fe 01       	movw	r30, r28
    2692:	e9 5b       	subi	r30, 0xB9	; 185
    2694:	ff 4f       	sbci	r31, 0xFF	; 255
    2696:	91 83       	std	Z+1, r25	; 0x01
    2698:	80 83       	st	Z, r24
	       _delay_ms(30);
	       DIO_u8GetPinValue(1,0,&pu8_GetPinValue);
    269a:	9e 01       	movw	r18, r28
    269c:	23 51       	subi	r18, 0x13	; 19
    269e:	3f 4f       	sbci	r19, 0xFF	; 255
    26a0:	81 e0       	ldi	r24, 0x01	; 1
    26a2:	90 e0       	ldi	r25, 0x00	; 0
    26a4:	60 e0       	ldi	r22, 0x00	; 0
    26a6:	70 e0       	ldi	r23, 0x00	; 0
    26a8:	a9 01       	movw	r20, r18
    26aa:	0e 94 a4 07 	call	0xf48	; 0xf48 <DIO_u8GetPinValue>
    26ae:	fe 01       	movw	r30, r28
    26b0:	ed 5b       	subi	r30, 0xBD	; 189
    26b2:	ff 4f       	sbci	r31, 0xFF	; 255
    26b4:	80 e0       	ldi	r24, 0x00	; 0
    26b6:	90 e0       	ldi	r25, 0x00	; 0
    26b8:	a0 ef       	ldi	r26, 0xF0	; 240
    26ba:	b1 e4       	ldi	r27, 0x41	; 65
    26bc:	80 83       	st	Z, r24
    26be:	91 83       	std	Z+1, r25	; 0x01
    26c0:	a2 83       	std	Z+2, r26	; 0x02
    26c2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    26c4:	8e 01       	movw	r16, r28
    26c6:	01 5c       	subi	r16, 0xC1	; 193
    26c8:	1f 4f       	sbci	r17, 0xFF	; 255
    26ca:	fe 01       	movw	r30, r28
    26cc:	ed 5b       	subi	r30, 0xBD	; 189
    26ce:	ff 4f       	sbci	r31, 0xFF	; 255
    26d0:	60 81       	ld	r22, Z
    26d2:	71 81       	ldd	r23, Z+1	; 0x01
    26d4:	82 81       	ldd	r24, Z+2	; 0x02
    26d6:	93 81       	ldd	r25, Z+3	; 0x03
    26d8:	20 e0       	ldi	r18, 0x00	; 0
    26da:	30 e0       	ldi	r19, 0x00	; 0
    26dc:	4a ef       	ldi	r20, 0xFA	; 250
    26de:	54 e4       	ldi	r21, 0x44	; 68
    26e0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    26e4:	dc 01       	movw	r26, r24
    26e6:	cb 01       	movw	r24, r22
    26e8:	f8 01       	movw	r30, r16
    26ea:	80 83       	st	Z, r24
    26ec:	91 83       	std	Z+1, r25	; 0x01
    26ee:	a2 83       	std	Z+2, r26	; 0x02
    26f0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    26f2:	fe 01       	movw	r30, r28
    26f4:	ff 96       	adiw	r30, 0x3f	; 63
    26f6:	60 81       	ld	r22, Z
    26f8:	71 81       	ldd	r23, Z+1	; 0x01
    26fa:	82 81       	ldd	r24, Z+2	; 0x02
    26fc:	93 81       	ldd	r25, Z+3	; 0x03
    26fe:	20 e0       	ldi	r18, 0x00	; 0
    2700:	30 e0       	ldi	r19, 0x00	; 0
    2702:	40 e8       	ldi	r20, 0x80	; 128
    2704:	5f e3       	ldi	r21, 0x3F	; 63
    2706:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    270a:	88 23       	and	r24, r24
    270c:	2c f4       	brge	.+10     	; 0x2718 <main+0x1348>
		__ticks = 1;
    270e:	81 e0       	ldi	r24, 0x01	; 1
    2710:	90 e0       	ldi	r25, 0x00	; 0
    2712:	9e af       	std	Y+62, r25	; 0x3e
    2714:	8d af       	std	Y+61, r24	; 0x3d
    2716:	46 c0       	rjmp	.+140    	; 0x27a4 <main+0x13d4>
	else if (__tmp > 65535)
    2718:	fe 01       	movw	r30, r28
    271a:	ff 96       	adiw	r30, 0x3f	; 63
    271c:	60 81       	ld	r22, Z
    271e:	71 81       	ldd	r23, Z+1	; 0x01
    2720:	82 81       	ldd	r24, Z+2	; 0x02
    2722:	93 81       	ldd	r25, Z+3	; 0x03
    2724:	20 e0       	ldi	r18, 0x00	; 0
    2726:	3f ef       	ldi	r19, 0xFF	; 255
    2728:	4f e7       	ldi	r20, 0x7F	; 127
    272a:	57 e4       	ldi	r21, 0x47	; 71
    272c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2730:	18 16       	cp	r1, r24
    2732:	64 f5       	brge	.+88     	; 0x278c <main+0x13bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2734:	fe 01       	movw	r30, r28
    2736:	ed 5b       	subi	r30, 0xBD	; 189
    2738:	ff 4f       	sbci	r31, 0xFF	; 255
    273a:	60 81       	ld	r22, Z
    273c:	71 81       	ldd	r23, Z+1	; 0x01
    273e:	82 81       	ldd	r24, Z+2	; 0x02
    2740:	93 81       	ldd	r25, Z+3	; 0x03
    2742:	20 e0       	ldi	r18, 0x00	; 0
    2744:	30 e0       	ldi	r19, 0x00	; 0
    2746:	40 e2       	ldi	r20, 0x20	; 32
    2748:	51 e4       	ldi	r21, 0x41	; 65
    274a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    274e:	dc 01       	movw	r26, r24
    2750:	cb 01       	movw	r24, r22
    2752:	bc 01       	movw	r22, r24
    2754:	cd 01       	movw	r24, r26
    2756:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    275a:	dc 01       	movw	r26, r24
    275c:	cb 01       	movw	r24, r22
    275e:	9e af       	std	Y+62, r25	; 0x3e
    2760:	8d af       	std	Y+61, r24	; 0x3d
    2762:	0f c0       	rjmp	.+30     	; 0x2782 <main+0x13b2>
    2764:	88 ec       	ldi	r24, 0xC8	; 200
    2766:	90 e0       	ldi	r25, 0x00	; 0
    2768:	9c af       	std	Y+60, r25	; 0x3c
    276a:	8b af       	std	Y+59, r24	; 0x3b
    276c:	8b ad       	ldd	r24, Y+59	; 0x3b
    276e:	9c ad       	ldd	r25, Y+60	; 0x3c
    2770:	01 97       	sbiw	r24, 0x01	; 1
    2772:	f1 f7       	brne	.-4      	; 0x2770 <main+0x13a0>
    2774:	9c af       	std	Y+60, r25	; 0x3c
    2776:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2778:	8d ad       	ldd	r24, Y+61	; 0x3d
    277a:	9e ad       	ldd	r25, Y+62	; 0x3e
    277c:	01 97       	sbiw	r24, 0x01	; 1
    277e:	9e af       	std	Y+62, r25	; 0x3e
    2780:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2782:	8d ad       	ldd	r24, Y+61	; 0x3d
    2784:	9e ad       	ldd	r25, Y+62	; 0x3e
    2786:	00 97       	sbiw	r24, 0x00	; 0
    2788:	69 f7       	brne	.-38     	; 0x2764 <main+0x1394>
    278a:	48 c2       	rjmp	.+1168   	; 0x2c1c <main+0x184c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    278c:	fe 01       	movw	r30, r28
    278e:	ff 96       	adiw	r30, 0x3f	; 63
    2790:	60 81       	ld	r22, Z
    2792:	71 81       	ldd	r23, Z+1	; 0x01
    2794:	82 81       	ldd	r24, Z+2	; 0x02
    2796:	93 81       	ldd	r25, Z+3	; 0x03
    2798:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    279c:	dc 01       	movw	r26, r24
    279e:	cb 01       	movw	r24, r22
    27a0:	9e af       	std	Y+62, r25	; 0x3e
    27a2:	8d af       	std	Y+61, r24	; 0x3d
    27a4:	8d ad       	ldd	r24, Y+61	; 0x3d
    27a6:	9e ad       	ldd	r25, Y+62	; 0x3e
    27a8:	9a af       	std	Y+58, r25	; 0x3a
    27aa:	89 af       	std	Y+57, r24	; 0x39
    27ac:	89 ad       	ldd	r24, Y+57	; 0x39
    27ae:	9a ad       	ldd	r25, Y+58	; 0x3a
    27b0:	01 97       	sbiw	r24, 0x01	; 1
    27b2:	f1 f7       	brne	.-4      	; 0x27b0 <main+0x13e0>
    27b4:	9a af       	std	Y+58, r25	; 0x3a
    27b6:	89 af       	std	Y+57, r24	; 0x39
    27b8:	31 c2       	rjmp	.+1122   	; 0x2c1c <main+0x184c>
	       _delay_ms(30);
	       while((pu8_GetPinValue==0)&&(pu8_GetPinValue1==0))
	      {

	    	   --i;
    27ba:	de 01       	movw	r26, r28
    27bc:	ae 51       	subi	r26, 0x1E	; 30
    27be:	bf 4f       	sbci	r27, 0xFF	; 255
    27c0:	fe 01       	movw	r30, r28
    27c2:	ee 51       	subi	r30, 0x1E	; 30
    27c4:	ff 4f       	sbci	r31, 0xFF	; 255
    27c6:	80 81       	ld	r24, Z
    27c8:	81 50       	subi	r24, 0x01	; 1
    27ca:	8c 93       	st	X, r24
	     	  DIO_u8AnalogPort(2,sevenseg[i]);
    27cc:	fe 01       	movw	r30, r28
    27ce:	ee 51       	subi	r30, 0x1E	; 30
    27d0:	ff 4f       	sbci	r31, 0xFF	; 255
    27d2:	80 81       	ld	r24, Z
    27d4:	28 2f       	mov	r18, r24
    27d6:	33 27       	eor	r19, r19
    27d8:	27 fd       	sbrc	r18, 7
    27da:	30 95       	com	r19
    27dc:	ce 01       	movw	r24, r28
    27de:	8d 51       	subi	r24, 0x1D	; 29
    27e0:	9f 4f       	sbci	r25, 0xFF	; 255
    27e2:	fc 01       	movw	r30, r24
    27e4:	e2 0f       	add	r30, r18
    27e6:	f3 1f       	adc	r31, r19
    27e8:	80 81       	ld	r24, Z
    27ea:	28 2f       	mov	r18, r24
    27ec:	30 e0       	ldi	r19, 0x00	; 0
    27ee:	82 e0       	ldi	r24, 0x02	; 2
    27f0:	90 e0       	ldi	r25, 0x00	; 0
    27f2:	b9 01       	movw	r22, r18
    27f4:	0e 94 9d 09 	call	0x133a	; 0x133a <DIO_u8AnalogPort>
    27f8:	80 e0       	ldi	r24, 0x00	; 0
    27fa:	90 e0       	ldi	r25, 0x00	; 0
    27fc:	af ea       	ldi	r26, 0xAF	; 175
    27fe:	b3 e4       	ldi	r27, 0x43	; 67
    2800:	8d ab       	std	Y+53, r24	; 0x35
    2802:	9e ab       	std	Y+54, r25	; 0x36
    2804:	af ab       	std	Y+55, r26	; 0x37
    2806:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2808:	6d a9       	ldd	r22, Y+53	; 0x35
    280a:	7e a9       	ldd	r23, Y+54	; 0x36
    280c:	8f a9       	ldd	r24, Y+55	; 0x37
    280e:	98 ad       	ldd	r25, Y+56	; 0x38
    2810:	20 e0       	ldi	r18, 0x00	; 0
    2812:	30 e0       	ldi	r19, 0x00	; 0
    2814:	4a ef       	ldi	r20, 0xFA	; 250
    2816:	54 e4       	ldi	r21, 0x44	; 68
    2818:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    281c:	dc 01       	movw	r26, r24
    281e:	cb 01       	movw	r24, r22
    2820:	89 ab       	std	Y+49, r24	; 0x31
    2822:	9a ab       	std	Y+50, r25	; 0x32
    2824:	ab ab       	std	Y+51, r26	; 0x33
    2826:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2828:	69 a9       	ldd	r22, Y+49	; 0x31
    282a:	7a a9       	ldd	r23, Y+50	; 0x32
    282c:	8b a9       	ldd	r24, Y+51	; 0x33
    282e:	9c a9       	ldd	r25, Y+52	; 0x34
    2830:	20 e0       	ldi	r18, 0x00	; 0
    2832:	30 e0       	ldi	r19, 0x00	; 0
    2834:	40 e8       	ldi	r20, 0x80	; 128
    2836:	5f e3       	ldi	r21, 0x3F	; 63
    2838:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    283c:	88 23       	and	r24, r24
    283e:	2c f4       	brge	.+10     	; 0x284a <main+0x147a>
		__ticks = 1;
    2840:	81 e0       	ldi	r24, 0x01	; 1
    2842:	90 e0       	ldi	r25, 0x00	; 0
    2844:	98 ab       	std	Y+48, r25	; 0x30
    2846:	8f a7       	std	Y+47, r24	; 0x2f
    2848:	3f c0       	rjmp	.+126    	; 0x28c8 <main+0x14f8>
	else if (__tmp > 65535)
    284a:	69 a9       	ldd	r22, Y+49	; 0x31
    284c:	7a a9       	ldd	r23, Y+50	; 0x32
    284e:	8b a9       	ldd	r24, Y+51	; 0x33
    2850:	9c a9       	ldd	r25, Y+52	; 0x34
    2852:	20 e0       	ldi	r18, 0x00	; 0
    2854:	3f ef       	ldi	r19, 0xFF	; 255
    2856:	4f e7       	ldi	r20, 0x7F	; 127
    2858:	57 e4       	ldi	r21, 0x47	; 71
    285a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    285e:	18 16       	cp	r1, r24
    2860:	4c f5       	brge	.+82     	; 0x28b4 <main+0x14e4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2862:	6d a9       	ldd	r22, Y+53	; 0x35
    2864:	7e a9       	ldd	r23, Y+54	; 0x36
    2866:	8f a9       	ldd	r24, Y+55	; 0x37
    2868:	98 ad       	ldd	r25, Y+56	; 0x38
    286a:	20 e0       	ldi	r18, 0x00	; 0
    286c:	30 e0       	ldi	r19, 0x00	; 0
    286e:	40 e2       	ldi	r20, 0x20	; 32
    2870:	51 e4       	ldi	r21, 0x41	; 65
    2872:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2876:	dc 01       	movw	r26, r24
    2878:	cb 01       	movw	r24, r22
    287a:	bc 01       	movw	r22, r24
    287c:	cd 01       	movw	r24, r26
    287e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2882:	dc 01       	movw	r26, r24
    2884:	cb 01       	movw	r24, r22
    2886:	98 ab       	std	Y+48, r25	; 0x30
    2888:	8f a7       	std	Y+47, r24	; 0x2f
    288a:	0f c0       	rjmp	.+30     	; 0x28aa <main+0x14da>
    288c:	88 ec       	ldi	r24, 0xC8	; 200
    288e:	90 e0       	ldi	r25, 0x00	; 0
    2890:	9e a7       	std	Y+46, r25	; 0x2e
    2892:	8d a7       	std	Y+45, r24	; 0x2d
    2894:	8d a5       	ldd	r24, Y+45	; 0x2d
    2896:	9e a5       	ldd	r25, Y+46	; 0x2e
    2898:	01 97       	sbiw	r24, 0x01	; 1
    289a:	f1 f7       	brne	.-4      	; 0x2898 <main+0x14c8>
    289c:	9e a7       	std	Y+46, r25	; 0x2e
    289e:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    28a0:	8f a5       	ldd	r24, Y+47	; 0x2f
    28a2:	98 a9       	ldd	r25, Y+48	; 0x30
    28a4:	01 97       	sbiw	r24, 0x01	; 1
    28a6:	98 ab       	std	Y+48, r25	; 0x30
    28a8:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    28aa:	8f a5       	ldd	r24, Y+47	; 0x2f
    28ac:	98 a9       	ldd	r25, Y+48	; 0x30
    28ae:	00 97       	sbiw	r24, 0x00	; 0
    28b0:	69 f7       	brne	.-38     	; 0x288c <main+0x14bc>
    28b2:	14 c0       	rjmp	.+40     	; 0x28dc <main+0x150c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    28b4:	69 a9       	ldd	r22, Y+49	; 0x31
    28b6:	7a a9       	ldd	r23, Y+50	; 0x32
    28b8:	8b a9       	ldd	r24, Y+51	; 0x33
    28ba:	9c a9       	ldd	r25, Y+52	; 0x34
    28bc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    28c0:	dc 01       	movw	r26, r24
    28c2:	cb 01       	movw	r24, r22
    28c4:	98 ab       	std	Y+48, r25	; 0x30
    28c6:	8f a7       	std	Y+47, r24	; 0x2f
    28c8:	8f a5       	ldd	r24, Y+47	; 0x2f
    28ca:	98 a9       	ldd	r25, Y+48	; 0x30
    28cc:	9c a7       	std	Y+44, r25	; 0x2c
    28ce:	8b a7       	std	Y+43, r24	; 0x2b
    28d0:	8b a5       	ldd	r24, Y+43	; 0x2b
    28d2:	9c a5       	ldd	r25, Y+44	; 0x2c
    28d4:	01 97       	sbiw	r24, 0x01	; 1
    28d6:	f1 f7       	brne	.-4      	; 0x28d4 <main+0x1504>
    28d8:	9c a7       	std	Y+44, r25	; 0x2c
    28da:	8b a7       	std	Y+43, r24	; 0x2b
	     	  _delay_ms(350);
	     	  if(i==0)
    28dc:	fe 01       	movw	r30, r28
    28de:	ee 51       	subi	r30, 0x1E	; 30
    28e0:	ff 4f       	sbci	r31, 0xFF	; 255
    28e2:	80 81       	ld	r24, Z
    28e4:	88 23       	and	r24, r24
    28e6:	09 f0       	breq	.+2      	; 0x28ea <main+0x151a>
    28e8:	a1 c0       	rjmp	.+322    	; 0x2a2c <main+0x165c>
	     	  {
	     		  --x;
    28ea:	de 01       	movw	r26, r28
    28ec:	af 51       	subi	r26, 0x1F	; 31
    28ee:	bf 4f       	sbci	r27, 0xFF	; 255
    28f0:	fe 01       	movw	r30, r28
    28f2:	ef 51       	subi	r30, 0x1F	; 31
    28f4:	ff 4f       	sbci	r31, 0xFF	; 255
    28f6:	80 81       	ld	r24, Z
    28f8:	81 50       	subi	r24, 0x01	; 1
    28fa:	8c 93       	st	X, r24
	     		  DIO_u8AnalogPort(3,sevenseg[x]);
    28fc:	fe 01       	movw	r30, r28
    28fe:	ef 51       	subi	r30, 0x1F	; 31
    2900:	ff 4f       	sbci	r31, 0xFF	; 255
    2902:	80 81       	ld	r24, Z
    2904:	28 2f       	mov	r18, r24
    2906:	33 27       	eor	r19, r19
    2908:	27 fd       	sbrc	r18, 7
    290a:	30 95       	com	r19
    290c:	ce 01       	movw	r24, r28
    290e:	8d 51       	subi	r24, 0x1D	; 29
    2910:	9f 4f       	sbci	r25, 0xFF	; 255
    2912:	fc 01       	movw	r30, r24
    2914:	e2 0f       	add	r30, r18
    2916:	f3 1f       	adc	r31, r19
    2918:	80 81       	ld	r24, Z
    291a:	28 2f       	mov	r18, r24
    291c:	30 e0       	ldi	r19, 0x00	; 0
    291e:	83 e0       	ldi	r24, 0x03	; 3
    2920:	90 e0       	ldi	r25, 0x00	; 0
    2922:	b9 01       	movw	r22, r18
    2924:	0e 94 9d 09 	call	0x133a	; 0x133a <DIO_u8AnalogPort>
    2928:	80 e0       	ldi	r24, 0x00	; 0
    292a:	90 e0       	ldi	r25, 0x00	; 0
    292c:	af ea       	ldi	r26, 0xAF	; 175
    292e:	b3 e4       	ldi	r27, 0x43	; 67
    2930:	8f a3       	std	Y+39, r24	; 0x27
    2932:	98 a7       	std	Y+40, r25	; 0x28
    2934:	a9 a7       	std	Y+41, r26	; 0x29
    2936:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2938:	6f a1       	ldd	r22, Y+39	; 0x27
    293a:	78 a5       	ldd	r23, Y+40	; 0x28
    293c:	89 a5       	ldd	r24, Y+41	; 0x29
    293e:	9a a5       	ldd	r25, Y+42	; 0x2a
    2940:	20 e0       	ldi	r18, 0x00	; 0
    2942:	30 e0       	ldi	r19, 0x00	; 0
    2944:	4a ef       	ldi	r20, 0xFA	; 250
    2946:	54 e4       	ldi	r21, 0x44	; 68
    2948:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    294c:	dc 01       	movw	r26, r24
    294e:	cb 01       	movw	r24, r22
    2950:	8b a3       	std	Y+35, r24	; 0x23
    2952:	9c a3       	std	Y+36, r25	; 0x24
    2954:	ad a3       	std	Y+37, r26	; 0x25
    2956:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2958:	6b a1       	ldd	r22, Y+35	; 0x23
    295a:	7c a1       	ldd	r23, Y+36	; 0x24
    295c:	8d a1       	ldd	r24, Y+37	; 0x25
    295e:	9e a1       	ldd	r25, Y+38	; 0x26
    2960:	20 e0       	ldi	r18, 0x00	; 0
    2962:	30 e0       	ldi	r19, 0x00	; 0
    2964:	40 e8       	ldi	r20, 0x80	; 128
    2966:	5f e3       	ldi	r21, 0x3F	; 63
    2968:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    296c:	88 23       	and	r24, r24
    296e:	2c f4       	brge	.+10     	; 0x297a <main+0x15aa>
		__ticks = 1;
    2970:	81 e0       	ldi	r24, 0x01	; 1
    2972:	90 e0       	ldi	r25, 0x00	; 0
    2974:	9a a3       	std	Y+34, r25	; 0x22
    2976:	89 a3       	std	Y+33, r24	; 0x21
    2978:	3f c0       	rjmp	.+126    	; 0x29f8 <main+0x1628>
	else if (__tmp > 65535)
    297a:	6b a1       	ldd	r22, Y+35	; 0x23
    297c:	7c a1       	ldd	r23, Y+36	; 0x24
    297e:	8d a1       	ldd	r24, Y+37	; 0x25
    2980:	9e a1       	ldd	r25, Y+38	; 0x26
    2982:	20 e0       	ldi	r18, 0x00	; 0
    2984:	3f ef       	ldi	r19, 0xFF	; 255
    2986:	4f e7       	ldi	r20, 0x7F	; 127
    2988:	57 e4       	ldi	r21, 0x47	; 71
    298a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    298e:	18 16       	cp	r1, r24
    2990:	4c f5       	brge	.+82     	; 0x29e4 <main+0x1614>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2992:	6f a1       	ldd	r22, Y+39	; 0x27
    2994:	78 a5       	ldd	r23, Y+40	; 0x28
    2996:	89 a5       	ldd	r24, Y+41	; 0x29
    2998:	9a a5       	ldd	r25, Y+42	; 0x2a
    299a:	20 e0       	ldi	r18, 0x00	; 0
    299c:	30 e0       	ldi	r19, 0x00	; 0
    299e:	40 e2       	ldi	r20, 0x20	; 32
    29a0:	51 e4       	ldi	r21, 0x41	; 65
    29a2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    29a6:	dc 01       	movw	r26, r24
    29a8:	cb 01       	movw	r24, r22
    29aa:	bc 01       	movw	r22, r24
    29ac:	cd 01       	movw	r24, r26
    29ae:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    29b2:	dc 01       	movw	r26, r24
    29b4:	cb 01       	movw	r24, r22
    29b6:	9a a3       	std	Y+34, r25	; 0x22
    29b8:	89 a3       	std	Y+33, r24	; 0x21
    29ba:	0f c0       	rjmp	.+30     	; 0x29da <main+0x160a>
    29bc:	88 ec       	ldi	r24, 0xC8	; 200
    29be:	90 e0       	ldi	r25, 0x00	; 0
    29c0:	98 a3       	std	Y+32, r25	; 0x20
    29c2:	8f 8f       	std	Y+31, r24	; 0x1f
    29c4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    29c6:	98 a1       	ldd	r25, Y+32	; 0x20
    29c8:	01 97       	sbiw	r24, 0x01	; 1
    29ca:	f1 f7       	brne	.-4      	; 0x29c8 <main+0x15f8>
    29cc:	98 a3       	std	Y+32, r25	; 0x20
    29ce:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    29d0:	89 a1       	ldd	r24, Y+33	; 0x21
    29d2:	9a a1       	ldd	r25, Y+34	; 0x22
    29d4:	01 97       	sbiw	r24, 0x01	; 1
    29d6:	9a a3       	std	Y+34, r25	; 0x22
    29d8:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    29da:	89 a1       	ldd	r24, Y+33	; 0x21
    29dc:	9a a1       	ldd	r25, Y+34	; 0x22
    29de:	00 97       	sbiw	r24, 0x00	; 0
    29e0:	69 f7       	brne	.-38     	; 0x29bc <main+0x15ec>
    29e2:	14 c0       	rjmp	.+40     	; 0x2a0c <main+0x163c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    29e4:	6b a1       	ldd	r22, Y+35	; 0x23
    29e6:	7c a1       	ldd	r23, Y+36	; 0x24
    29e8:	8d a1       	ldd	r24, Y+37	; 0x25
    29ea:	9e a1       	ldd	r25, Y+38	; 0x26
    29ec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    29f0:	dc 01       	movw	r26, r24
    29f2:	cb 01       	movw	r24, r22
    29f4:	9a a3       	std	Y+34, r25	; 0x22
    29f6:	89 a3       	std	Y+33, r24	; 0x21
    29f8:	89 a1       	ldd	r24, Y+33	; 0x21
    29fa:	9a a1       	ldd	r25, Y+34	; 0x22
    29fc:	9e 8f       	std	Y+30, r25	; 0x1e
    29fe:	8d 8f       	std	Y+29, r24	; 0x1d
    2a00:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2a02:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2a04:	01 97       	sbiw	r24, 0x01	; 1
    2a06:	f1 f7       	brne	.-4      	; 0x2a04 <main+0x1634>
    2a08:	9e 8f       	std	Y+30, r25	; 0x1e
    2a0a:	8d 8f       	std	Y+29, r24	; 0x1d
	     		 _delay_ms(350);
	     		  i=10;
    2a0c:	fe 01       	movw	r30, r28
    2a0e:	ee 51       	subi	r30, 0x1E	; 30
    2a10:	ff 4f       	sbci	r31, 0xFF	; 255
    2a12:	8a e0       	ldi	r24, 0x0A	; 10
    2a14:	80 83       	st	Z, r24
	     		  if(x==0)
    2a16:	fe 01       	movw	r30, r28
    2a18:	ef 51       	subi	r30, 0x1F	; 31
    2a1a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a1c:	80 81       	ld	r24, Z
    2a1e:	88 23       	and	r24, r24
    2a20:	29 f4       	brne	.+10     	; 0x2a2c <main+0x165c>
	     		  {
	     		  x=9;
    2a22:	fe 01       	movw	r30, r28
    2a24:	ef 51       	subi	r30, 0x1F	; 31
    2a26:	ff 4f       	sbci	r31, 0xFF	; 255
    2a28:	89 e0       	ldi	r24, 0x09	; 9
    2a2a:	80 83       	st	Z, r24
	     		  }
	     	  }
	           DIO_u8GetPinValue(1,0,&pu8_GetPinValue);
    2a2c:	9e 01       	movw	r18, r28
    2a2e:	23 51       	subi	r18, 0x13	; 19
    2a30:	3f 4f       	sbci	r19, 0xFF	; 255
    2a32:	81 e0       	ldi	r24, 0x01	; 1
    2a34:	90 e0       	ldi	r25, 0x00	; 0
    2a36:	60 e0       	ldi	r22, 0x00	; 0
    2a38:	70 e0       	ldi	r23, 0x00	; 0
    2a3a:	a9 01       	movw	r20, r18
    2a3c:	0e 94 a4 07 	call	0xf48	; 0xf48 <DIO_u8GetPinValue>
    2a40:	80 e0       	ldi	r24, 0x00	; 0
    2a42:	90 e0       	ldi	r25, 0x00	; 0
    2a44:	a0 ef       	ldi	r26, 0xF0	; 240
    2a46:	b1 e4       	ldi	r27, 0x41	; 65
    2a48:	89 8f       	std	Y+25, r24	; 0x19
    2a4a:	9a 8f       	std	Y+26, r25	; 0x1a
    2a4c:	ab 8f       	std	Y+27, r26	; 0x1b
    2a4e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a50:	69 8d       	ldd	r22, Y+25	; 0x19
    2a52:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2a54:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2a56:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2a58:	20 e0       	ldi	r18, 0x00	; 0
    2a5a:	30 e0       	ldi	r19, 0x00	; 0
    2a5c:	4a ef       	ldi	r20, 0xFA	; 250
    2a5e:	54 e4       	ldi	r21, 0x44	; 68
    2a60:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a64:	dc 01       	movw	r26, r24
    2a66:	cb 01       	movw	r24, r22
    2a68:	8d 8b       	std	Y+21, r24	; 0x15
    2a6a:	9e 8b       	std	Y+22, r25	; 0x16
    2a6c:	af 8b       	std	Y+23, r26	; 0x17
    2a6e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2a70:	6d 89       	ldd	r22, Y+21	; 0x15
    2a72:	7e 89       	ldd	r23, Y+22	; 0x16
    2a74:	8f 89       	ldd	r24, Y+23	; 0x17
    2a76:	98 8d       	ldd	r25, Y+24	; 0x18
    2a78:	20 e0       	ldi	r18, 0x00	; 0
    2a7a:	30 e0       	ldi	r19, 0x00	; 0
    2a7c:	40 e8       	ldi	r20, 0x80	; 128
    2a7e:	5f e3       	ldi	r21, 0x3F	; 63
    2a80:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2a84:	88 23       	and	r24, r24
    2a86:	2c f4       	brge	.+10     	; 0x2a92 <main+0x16c2>
		__ticks = 1;
    2a88:	81 e0       	ldi	r24, 0x01	; 1
    2a8a:	90 e0       	ldi	r25, 0x00	; 0
    2a8c:	9c 8b       	std	Y+20, r25	; 0x14
    2a8e:	8b 8b       	std	Y+19, r24	; 0x13
    2a90:	3f c0       	rjmp	.+126    	; 0x2b10 <main+0x1740>
	else if (__tmp > 65535)
    2a92:	6d 89       	ldd	r22, Y+21	; 0x15
    2a94:	7e 89       	ldd	r23, Y+22	; 0x16
    2a96:	8f 89       	ldd	r24, Y+23	; 0x17
    2a98:	98 8d       	ldd	r25, Y+24	; 0x18
    2a9a:	20 e0       	ldi	r18, 0x00	; 0
    2a9c:	3f ef       	ldi	r19, 0xFF	; 255
    2a9e:	4f e7       	ldi	r20, 0x7F	; 127
    2aa0:	57 e4       	ldi	r21, 0x47	; 71
    2aa2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2aa6:	18 16       	cp	r1, r24
    2aa8:	4c f5       	brge	.+82     	; 0x2afc <main+0x172c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2aaa:	69 8d       	ldd	r22, Y+25	; 0x19
    2aac:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2aae:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2ab0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2ab2:	20 e0       	ldi	r18, 0x00	; 0
    2ab4:	30 e0       	ldi	r19, 0x00	; 0
    2ab6:	40 e2       	ldi	r20, 0x20	; 32
    2ab8:	51 e4       	ldi	r21, 0x41	; 65
    2aba:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2abe:	dc 01       	movw	r26, r24
    2ac0:	cb 01       	movw	r24, r22
    2ac2:	bc 01       	movw	r22, r24
    2ac4:	cd 01       	movw	r24, r26
    2ac6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2aca:	dc 01       	movw	r26, r24
    2acc:	cb 01       	movw	r24, r22
    2ace:	9c 8b       	std	Y+20, r25	; 0x14
    2ad0:	8b 8b       	std	Y+19, r24	; 0x13
    2ad2:	0f c0       	rjmp	.+30     	; 0x2af2 <main+0x1722>
    2ad4:	88 ec       	ldi	r24, 0xC8	; 200
    2ad6:	90 e0       	ldi	r25, 0x00	; 0
    2ad8:	9a 8b       	std	Y+18, r25	; 0x12
    2ada:	89 8b       	std	Y+17, r24	; 0x11
    2adc:	89 89       	ldd	r24, Y+17	; 0x11
    2ade:	9a 89       	ldd	r25, Y+18	; 0x12
    2ae0:	01 97       	sbiw	r24, 0x01	; 1
    2ae2:	f1 f7       	brne	.-4      	; 0x2ae0 <main+0x1710>
    2ae4:	9a 8b       	std	Y+18, r25	; 0x12
    2ae6:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ae8:	8b 89       	ldd	r24, Y+19	; 0x13
    2aea:	9c 89       	ldd	r25, Y+20	; 0x14
    2aec:	01 97       	sbiw	r24, 0x01	; 1
    2aee:	9c 8b       	std	Y+20, r25	; 0x14
    2af0:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2af2:	8b 89       	ldd	r24, Y+19	; 0x13
    2af4:	9c 89       	ldd	r25, Y+20	; 0x14
    2af6:	00 97       	sbiw	r24, 0x00	; 0
    2af8:	69 f7       	brne	.-38     	; 0x2ad4 <main+0x1704>
    2afa:	14 c0       	rjmp	.+40     	; 0x2b24 <main+0x1754>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2afc:	6d 89       	ldd	r22, Y+21	; 0x15
    2afe:	7e 89       	ldd	r23, Y+22	; 0x16
    2b00:	8f 89       	ldd	r24, Y+23	; 0x17
    2b02:	98 8d       	ldd	r25, Y+24	; 0x18
    2b04:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b08:	dc 01       	movw	r26, r24
    2b0a:	cb 01       	movw	r24, r22
    2b0c:	9c 8b       	std	Y+20, r25	; 0x14
    2b0e:	8b 8b       	std	Y+19, r24	; 0x13
    2b10:	8b 89       	ldd	r24, Y+19	; 0x13
    2b12:	9c 89       	ldd	r25, Y+20	; 0x14
    2b14:	98 8b       	std	Y+16, r25	; 0x10
    2b16:	8f 87       	std	Y+15, r24	; 0x0f
    2b18:	8f 85       	ldd	r24, Y+15	; 0x0f
    2b1a:	98 89       	ldd	r25, Y+16	; 0x10
    2b1c:	01 97       	sbiw	r24, 0x01	; 1
    2b1e:	f1 f7       	brne	.-4      	; 0x2b1c <main+0x174c>
    2b20:	98 8b       	std	Y+16, r25	; 0x10
    2b22:	8f 87       	std	Y+15, r24	; 0x0f
	           _delay_ms(30);
	           DIO_u8GetPinValue(1,1,&pu8_GetPinValue1);
    2b24:	9e 01       	movw	r18, r28
    2b26:	21 51       	subi	r18, 0x11	; 17
    2b28:	3f 4f       	sbci	r19, 0xFF	; 255
    2b2a:	81 e0       	ldi	r24, 0x01	; 1
    2b2c:	90 e0       	ldi	r25, 0x00	; 0
    2b2e:	61 e0       	ldi	r22, 0x01	; 1
    2b30:	70 e0       	ldi	r23, 0x00	; 0
    2b32:	a9 01       	movw	r20, r18
    2b34:	0e 94 a4 07 	call	0xf48	; 0xf48 <DIO_u8GetPinValue>
    2b38:	80 e0       	ldi	r24, 0x00	; 0
    2b3a:	90 e0       	ldi	r25, 0x00	; 0
    2b3c:	a0 ef       	ldi	r26, 0xF0	; 240
    2b3e:	b1 e4       	ldi	r27, 0x41	; 65
    2b40:	8b 87       	std	Y+11, r24	; 0x0b
    2b42:	9c 87       	std	Y+12, r25	; 0x0c
    2b44:	ad 87       	std	Y+13, r26	; 0x0d
    2b46:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b48:	6b 85       	ldd	r22, Y+11	; 0x0b
    2b4a:	7c 85       	ldd	r23, Y+12	; 0x0c
    2b4c:	8d 85       	ldd	r24, Y+13	; 0x0d
    2b4e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2b50:	20 e0       	ldi	r18, 0x00	; 0
    2b52:	30 e0       	ldi	r19, 0x00	; 0
    2b54:	4a ef       	ldi	r20, 0xFA	; 250
    2b56:	54 e4       	ldi	r21, 0x44	; 68
    2b58:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b5c:	dc 01       	movw	r26, r24
    2b5e:	cb 01       	movw	r24, r22
    2b60:	8f 83       	std	Y+7, r24	; 0x07
    2b62:	98 87       	std	Y+8, r25	; 0x08
    2b64:	a9 87       	std	Y+9, r26	; 0x09
    2b66:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2b68:	6f 81       	ldd	r22, Y+7	; 0x07
    2b6a:	78 85       	ldd	r23, Y+8	; 0x08
    2b6c:	89 85       	ldd	r24, Y+9	; 0x09
    2b6e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2b70:	20 e0       	ldi	r18, 0x00	; 0
    2b72:	30 e0       	ldi	r19, 0x00	; 0
    2b74:	40 e8       	ldi	r20, 0x80	; 128
    2b76:	5f e3       	ldi	r21, 0x3F	; 63
    2b78:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2b7c:	88 23       	and	r24, r24
    2b7e:	2c f4       	brge	.+10     	; 0x2b8a <main+0x17ba>
		__ticks = 1;
    2b80:	81 e0       	ldi	r24, 0x01	; 1
    2b82:	90 e0       	ldi	r25, 0x00	; 0
    2b84:	9e 83       	std	Y+6, r25	; 0x06
    2b86:	8d 83       	std	Y+5, r24	; 0x05
    2b88:	3f c0       	rjmp	.+126    	; 0x2c08 <main+0x1838>
	else if (__tmp > 65535)
    2b8a:	6f 81       	ldd	r22, Y+7	; 0x07
    2b8c:	78 85       	ldd	r23, Y+8	; 0x08
    2b8e:	89 85       	ldd	r24, Y+9	; 0x09
    2b90:	9a 85       	ldd	r25, Y+10	; 0x0a
    2b92:	20 e0       	ldi	r18, 0x00	; 0
    2b94:	3f ef       	ldi	r19, 0xFF	; 255
    2b96:	4f e7       	ldi	r20, 0x7F	; 127
    2b98:	57 e4       	ldi	r21, 0x47	; 71
    2b9a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2b9e:	18 16       	cp	r1, r24
    2ba0:	4c f5       	brge	.+82     	; 0x2bf4 <main+0x1824>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2ba2:	6b 85       	ldd	r22, Y+11	; 0x0b
    2ba4:	7c 85       	ldd	r23, Y+12	; 0x0c
    2ba6:	8d 85       	ldd	r24, Y+13	; 0x0d
    2ba8:	9e 85       	ldd	r25, Y+14	; 0x0e
    2baa:	20 e0       	ldi	r18, 0x00	; 0
    2bac:	30 e0       	ldi	r19, 0x00	; 0
    2bae:	40 e2       	ldi	r20, 0x20	; 32
    2bb0:	51 e4       	ldi	r21, 0x41	; 65
    2bb2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2bb6:	dc 01       	movw	r26, r24
    2bb8:	cb 01       	movw	r24, r22
    2bba:	bc 01       	movw	r22, r24
    2bbc:	cd 01       	movw	r24, r26
    2bbe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2bc2:	dc 01       	movw	r26, r24
    2bc4:	cb 01       	movw	r24, r22
    2bc6:	9e 83       	std	Y+6, r25	; 0x06
    2bc8:	8d 83       	std	Y+5, r24	; 0x05
    2bca:	0f c0       	rjmp	.+30     	; 0x2bea <main+0x181a>
    2bcc:	88 ec       	ldi	r24, 0xC8	; 200
    2bce:	90 e0       	ldi	r25, 0x00	; 0
    2bd0:	9c 83       	std	Y+4, r25	; 0x04
    2bd2:	8b 83       	std	Y+3, r24	; 0x03
    2bd4:	8b 81       	ldd	r24, Y+3	; 0x03
    2bd6:	9c 81       	ldd	r25, Y+4	; 0x04
    2bd8:	01 97       	sbiw	r24, 0x01	; 1
    2bda:	f1 f7       	brne	.-4      	; 0x2bd8 <main+0x1808>
    2bdc:	9c 83       	std	Y+4, r25	; 0x04
    2bde:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2be0:	8d 81       	ldd	r24, Y+5	; 0x05
    2be2:	9e 81       	ldd	r25, Y+6	; 0x06
    2be4:	01 97       	sbiw	r24, 0x01	; 1
    2be6:	9e 83       	std	Y+6, r25	; 0x06
    2be8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2bea:	8d 81       	ldd	r24, Y+5	; 0x05
    2bec:	9e 81       	ldd	r25, Y+6	; 0x06
    2bee:	00 97       	sbiw	r24, 0x00	; 0
    2bf0:	69 f7       	brne	.-38     	; 0x2bcc <main+0x17fc>
    2bf2:	14 c0       	rjmp	.+40     	; 0x2c1c <main+0x184c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2bf4:	6f 81       	ldd	r22, Y+7	; 0x07
    2bf6:	78 85       	ldd	r23, Y+8	; 0x08
    2bf8:	89 85       	ldd	r24, Y+9	; 0x09
    2bfa:	9a 85       	ldd	r25, Y+10	; 0x0a
    2bfc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c00:	dc 01       	movw	r26, r24
    2c02:	cb 01       	movw	r24, r22
    2c04:	9e 83       	std	Y+6, r25	; 0x06
    2c06:	8d 83       	std	Y+5, r24	; 0x05
    2c08:	8d 81       	ldd	r24, Y+5	; 0x05
    2c0a:	9e 81       	ldd	r25, Y+6	; 0x06
    2c0c:	9a 83       	std	Y+2, r25	; 0x02
    2c0e:	89 83       	std	Y+1, r24	; 0x01
    2c10:	89 81       	ldd	r24, Y+1	; 0x01
    2c12:	9a 81       	ldd	r25, Y+2	; 0x02
    2c14:	01 97       	sbiw	r24, 0x01	; 1
    2c16:	f1 f7       	brne	.-4      	; 0x2c14 <main+0x1844>
    2c18:	9a 83       	std	Y+2, r25	; 0x02
    2c1a:	89 83       	std	Y+1, r24	; 0x01
	       _delay_ms(300);
	       DIO_u8GetPinValue(1,1,&pu8_GetPinValue1);
	       _delay_ms(30);
	       DIO_u8GetPinValue(1,0,&pu8_GetPinValue);
	       _delay_ms(30);
	       while((pu8_GetPinValue==0)&&(pu8_GetPinValue1==0))
    2c1c:	fe 01       	movw	r30, r28
    2c1e:	e3 51       	subi	r30, 0x13	; 19
    2c20:	ff 4f       	sbci	r31, 0xFF	; 255
    2c22:	80 81       	ld	r24, Z
    2c24:	91 81       	ldd	r25, Z+1	; 0x01
    2c26:	00 97       	sbiw	r24, 0x00	; 0
    2c28:	41 f4       	brne	.+16     	; 0x2c3a <main+0x186a>
    2c2a:	fe 01       	movw	r30, r28
    2c2c:	e1 51       	subi	r30, 0x11	; 17
    2c2e:	ff 4f       	sbci	r31, 0xFF	; 255
    2c30:	80 81       	ld	r24, Z
    2c32:	91 81       	ldd	r25, Z+1	; 0x01
    2c34:	00 97       	sbiw	r24, 0x00	; 0
    2c36:	09 f4       	brne	.+2      	; 0x2c3a <main+0x186a>
    2c38:	c0 cd       	rjmp	.-1152   	; 0x27ba <main+0x13ea>
	   }
  }
 }
   if((pu8_GetPinValue1==0) && (pu8_GetPinValue !=0))
	{
		  for(;pu8_GetPinValue1==0;)
    2c3a:	fe 01       	movw	r30, r28
    2c3c:	e1 51       	subi	r30, 0x11	; 17
    2c3e:	ff 4f       	sbci	r31, 0xFF	; 255
    2c40:	80 81       	ld	r24, Z
    2c42:	91 81       	ldd	r25, Z+1	; 0x01
    2c44:	00 97       	sbiw	r24, 0x00	; 0
    2c46:	09 f4       	brne	.+2      	; 0x2c4a <main+0x187a>
    2c48:	8f cb       	rjmp	.-2274   	; 0x2368 <main+0xf98>
    2c4a:	0c 94 70 0a 	jmp	0x14e0	; 0x14e0 <main+0x110>

00002c4e <__prologue_saves__>:
    2c4e:	2f 92       	push	r2
    2c50:	3f 92       	push	r3
    2c52:	4f 92       	push	r4
    2c54:	5f 92       	push	r5
    2c56:	6f 92       	push	r6
    2c58:	7f 92       	push	r7
    2c5a:	8f 92       	push	r8
    2c5c:	9f 92       	push	r9
    2c5e:	af 92       	push	r10
    2c60:	bf 92       	push	r11
    2c62:	cf 92       	push	r12
    2c64:	df 92       	push	r13
    2c66:	ef 92       	push	r14
    2c68:	ff 92       	push	r15
    2c6a:	0f 93       	push	r16
    2c6c:	1f 93       	push	r17
    2c6e:	cf 93       	push	r28
    2c70:	df 93       	push	r29
    2c72:	cd b7       	in	r28, 0x3d	; 61
    2c74:	de b7       	in	r29, 0x3e	; 62
    2c76:	ca 1b       	sub	r28, r26
    2c78:	db 0b       	sbc	r29, r27
    2c7a:	0f b6       	in	r0, 0x3f	; 63
    2c7c:	f8 94       	cli
    2c7e:	de bf       	out	0x3e, r29	; 62
    2c80:	0f be       	out	0x3f, r0	; 63
    2c82:	cd bf       	out	0x3d, r28	; 61
    2c84:	09 94       	ijmp

00002c86 <__epilogue_restores__>:
    2c86:	2a 88       	ldd	r2, Y+18	; 0x12
    2c88:	39 88       	ldd	r3, Y+17	; 0x11
    2c8a:	48 88       	ldd	r4, Y+16	; 0x10
    2c8c:	5f 84       	ldd	r5, Y+15	; 0x0f
    2c8e:	6e 84       	ldd	r6, Y+14	; 0x0e
    2c90:	7d 84       	ldd	r7, Y+13	; 0x0d
    2c92:	8c 84       	ldd	r8, Y+12	; 0x0c
    2c94:	9b 84       	ldd	r9, Y+11	; 0x0b
    2c96:	aa 84       	ldd	r10, Y+10	; 0x0a
    2c98:	b9 84       	ldd	r11, Y+9	; 0x09
    2c9a:	c8 84       	ldd	r12, Y+8	; 0x08
    2c9c:	df 80       	ldd	r13, Y+7	; 0x07
    2c9e:	ee 80       	ldd	r14, Y+6	; 0x06
    2ca0:	fd 80       	ldd	r15, Y+5	; 0x05
    2ca2:	0c 81       	ldd	r16, Y+4	; 0x04
    2ca4:	1b 81       	ldd	r17, Y+3	; 0x03
    2ca6:	aa 81       	ldd	r26, Y+2	; 0x02
    2ca8:	b9 81       	ldd	r27, Y+1	; 0x01
    2caa:	ce 0f       	add	r28, r30
    2cac:	d1 1d       	adc	r29, r1
    2cae:	0f b6       	in	r0, 0x3f	; 63
    2cb0:	f8 94       	cli
    2cb2:	de bf       	out	0x3e, r29	; 62
    2cb4:	0f be       	out	0x3f, r0	; 63
    2cb6:	cd bf       	out	0x3d, r28	; 61
    2cb8:	ed 01       	movw	r28, r26
    2cba:	08 95       	ret

00002cbc <_exit>:
    2cbc:	f8 94       	cli

00002cbe <__stop_program>:
    2cbe:	ff cf       	rjmp	.-2      	; 0x2cbe <__stop_program>
