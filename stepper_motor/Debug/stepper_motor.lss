
stepper_motor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001fc4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00001fc4  00002038  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         0000150c  00000000  00000000  00002040  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000009d1  00000000  00000000  0000354c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00003f1d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  0000405d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  000041cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  00005e16  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  00006d01  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00007ab0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  00007c10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  00007e9d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000866b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 ec       	ldi	r30, 0xC4	; 196
      68:	ff e1       	ldi	r31, 0x1F	; 31
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 7a 0f 	call	0x1ef4	; 0x1ef4 <main>
      7a:	0c 94 e0 0f 	jmp	0x1fc0	; 0x1fc0 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 a9 0f 	jmp	0x1f52	; 0x1f52 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 c5 0f 	jmp	0x1f8a	; 0x1f8a <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 b5 0f 	jmp	0x1f6a	; 0x1f6a <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 d1 0f 	jmp	0x1fa2	; 0x1fa2 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 b5 0f 	jmp	0x1f6a	; 0x1f6a <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 d1 0f 	jmp	0x1fa2	; 0x1fa2 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 a9 0f 	jmp	0x1f52	; 0x1f52 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 c5 0f 	jmp	0x1f8a	; 0x1f8a <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 b5 0f 	jmp	0x1f6a	; 0x1f6a <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 d1 0f 	jmp	0x1fa2	; 0x1fa2 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 b5 0f 	jmp	0x1f6a	; 0x1f6a <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 d1 0f 	jmp	0x1fa2	; 0x1fa2 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 b5 0f 	jmp	0x1f6a	; 0x1f6a <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 d1 0f 	jmp	0x1fa2	; 0x1fa2 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 b9 0f 	jmp	0x1f72	; 0x1f72 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 d5 0f 	jmp	0x1faa	; 0x1faa <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <DIO_voidInit>:
#include "DIO_interface.h"
#include "DIO_config.h"
#include "DiO_private.h"

void DIO_voidInit(void)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62
	DIO_U8_DDRA_REG=conc(DIO_u8_PA7_DIRECTION,DIO_u8_PA6_DIRECTION,DIO_u8_PA5_DIRECTION,DIO_u8_PA4_DIRECTION,
     b3e:	ea e3       	ldi	r30, 0x3A	; 58
     b40:	f0 e0       	ldi	r31, 0x00	; 0
     b42:	10 82       	st	Z, r1
	               		 DIO_u8_PA3_DIRECTION,DIO_u8_PA2_DIRECTION,DIO_u8_PA1_DIRECTION,DIO_u8_PA0_DIRECTION );

    DIO_U8_DDRB_REG=conc(DIO_u8_PB7_DIRECTION,DIO_u8_PB6_DIRECTION,DIO_u8_PB5_DIRECTION,
     b44:	e7 e3       	ldi	r30, 0x37	; 55
     b46:	f0 e0       	ldi	r31, 0x00	; 0
     b48:	10 82       	st	Z, r1
				         DIO_u8_PB4_DIRECTION,DIO_u8_PB3_DIRECTION,DIO_u8_PB2_DIRECTION,DIO_u8_PB1_DIRECTION,DIO_u8_PB0_DIRECTION );

    DIO_U8_DDRC_REG=conc(DIO_u8_PC7_DIRECTION,DIO_u8_PC6_DIRECTION,DIO_u8_PC5_DIRECTION,
     b4a:	e4 e3       	ldi	r30, 0x34	; 52
     b4c:	f0 e0       	ldi	r31, 0x00	; 0
     b4e:	8f e0       	ldi	r24, 0x0F	; 15
     b50:	80 83       	st	Z, r24
				         DIO_u8_PC4_DIRECTION,DIO_u8_PC3_DIRECTION,DIO_u8_PC2_DIRECTION,DIO_u8_PC1_DIRECTION,DIO_u8_PC0_DIRECTION );

    DIO_U8_DDRD_REG=conc(DIO_u8_PD7_DIRECTION,DIO_u8_PD6_DIRECTION,DIO_u8_PD5_DIRECTION,
     b52:	e1 e3       	ldi	r30, 0x31	; 49
     b54:	f0 e0       	ldi	r31, 0x00	; 0
     b56:	10 82       	st	Z, r1
				         DIO_u8_PD4_DIRECTION,DIO_u8_PD3_DIRECTION,DIO_u8_PD2_DIRECTION,DIO_u8_PD1_DIRECTION,DIO_u8_PD0_DIRECTION );



    DIO_U8_PORTA_REG=conc(DIO_u8_PA7_INITTIAL_VALUE,DIO_u8_PA6_INITTIAL_VALUE,DIO_u8_PA5_INITTIAL_VALUE,
     b58:	eb e3       	ldi	r30, 0x3B	; 59
     b5a:	f0 e0       	ldi	r31, 0x00	; 0
     b5c:	10 82       	st	Z, r1
    		              DIO_u8_PA4_INITTIAL_VALUE,DIO_u8_PA3_INITTIAL_VALUE,DIO_u8_PA2_INITTIAL_VALUE,DIO_u8_PA1_INITTIAL_VALUE,DIO_u8_PA0_INITTIAL_VALUE);

    DIO_U8_PORTB_REG=conc(DIO_u8_PB7_INITTIAL_VALUE,DIO_u8_PB6_INITTIAL_VALUE,DIO_u8_PB5_INITTIAL_VALUE,
     b5e:	e8 e3       	ldi	r30, 0x38	; 56
     b60:	f0 e0       	ldi	r31, 0x00	; 0
     b62:	10 82       	st	Z, r1
    		              DIO_u8_PB4_INITTIAL_VALUE,DIO_u8_PB3_INITTIAL_VALUE,DIO_u8_PB2_INITTIAL_VALUE,DIO_u8_PB1_INITTIAL_VALUE,DIO_u8_PB0_INITTIAL_VALUE);

	DIO_U8_PORTC_REG=conc(DIO_u8_PC7_INITTIAL_VALUE,DIO_u8_PC6_INITTIAL_VALUE,DIO_u8_PC5_INITTIAL_VALUE,
     b64:	e5 e3       	ldi	r30, 0x35	; 53
     b66:	f0 e0       	ldi	r31, 0x00	; 0
     b68:	8f e0       	ldi	r24, 0x0F	; 15
     b6a:	80 83       	st	Z, r24
				          DIO_u8_PC4_INITTIAL_VALUE,DIO_u8_PC3_INITTIAL_VALUE,DIO_u8_PC2_INITTIAL_VALUE,DIO_u8_PC1_INITTIAL_VALUE,DIO_u8_PC0_INITTIAL_VALUE);

    DIO_U8_PORTD_REG=conc(DIO_u8_PD7_INITTIAL_VALUE,DIO_u8_PD6_INITTIAL_VALUE,DIO_u8_PD5_INITTIAL_VALUE,
     b6c:	e2 e3       	ldi	r30, 0x32	; 50
     b6e:	f0 e0       	ldi	r31, 0x00	; 0
     b70:	10 82       	st	Z, r1
    		              DIO_u8_PD4_INITTIAL_VALUE,DIO_u8_PD3_INITTIAL_VALUE,DIO_u8_PD2_INITTIAL_VALUE,DIO_u8_PD1_INITTIAL_VALUE,DIO_u8_PD0_INITTIAL_VALUE);


}
     b72:	cf 91       	pop	r28
     b74:	df 91       	pop	r29
     b76:	08 95       	ret

00000b78 <DIO_u8SetPinDirction>:


u8 DIO_u8SetPinDirction(u8 copy_u8PortId,u8 copy_u8PinId,u8 copy_u8PinDirction )
{
     b78:	df 93       	push	r29
     b7a:	cf 93       	push	r28
     b7c:	00 d0       	rcall	.+0      	; 0xb7e <DIO_u8SetPinDirction+0x6>
     b7e:	00 d0       	rcall	.+0      	; 0xb80 <DIO_u8SetPinDirction+0x8>
     b80:	00 d0       	rcall	.+0      	; 0xb82 <DIO_u8SetPinDirction+0xa>
     b82:	cd b7       	in	r28, 0x3d	; 61
     b84:	de b7       	in	r29, 0x3e	; 62
     b86:	8a 83       	std	Y+2, r24	; 0x02
     b88:	6b 83       	std	Y+3, r22	; 0x03
     b8a:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErorrState = STD_TYPES_OK;
     b8c:	81 e0       	ldi	r24, 0x01	; 1
     b8e:	89 83       	std	Y+1, r24	; 0x01
	if((copy_u8PortId<= DIO_U8_PORTD) && (copy_u8PinId <=DIO_U8_PIN7) && (copy_u8PinDirction<=DIO_U8_OUTPUT))
     b90:	8a 81       	ldd	r24, Y+2	; 0x02
     b92:	84 30       	cpi	r24, 0x04	; 4
     b94:	08 f0       	brcs	.+2      	; 0xb98 <DIO_u8SetPinDirction+0x20>
     b96:	da c0       	rjmp	.+436    	; 0xd4c <DIO_u8SetPinDirction+0x1d4>
     b98:	8b 81       	ldd	r24, Y+3	; 0x03
     b9a:	88 30       	cpi	r24, 0x08	; 8
     b9c:	08 f0       	brcs	.+2      	; 0xba0 <DIO_u8SetPinDirction+0x28>
     b9e:	d6 c0       	rjmp	.+428    	; 0xd4c <DIO_u8SetPinDirction+0x1d4>
     ba0:	8c 81       	ldd	r24, Y+4	; 0x04
     ba2:	82 30       	cpi	r24, 0x02	; 2
     ba4:	08 f0       	brcs	.+2      	; 0xba8 <DIO_u8SetPinDirction+0x30>
     ba6:	d2 c0       	rjmp	.+420    	; 0xd4c <DIO_u8SetPinDirction+0x1d4>
	{
		switch(copy_u8PortId)
     ba8:	8a 81       	ldd	r24, Y+2	; 0x02
     baa:	28 2f       	mov	r18, r24
     bac:	30 e0       	ldi	r19, 0x00	; 0
     bae:	3e 83       	std	Y+6, r19	; 0x06
     bb0:	2d 83       	std	Y+5, r18	; 0x05
     bb2:	8d 81       	ldd	r24, Y+5	; 0x05
     bb4:	9e 81       	ldd	r25, Y+6	; 0x06
     bb6:	81 30       	cpi	r24, 0x01	; 1
     bb8:	91 05       	cpc	r25, r1
     bba:	09 f4       	brne	.+2      	; 0xbbe <DIO_u8SetPinDirction+0x46>
     bbc:	43 c0       	rjmp	.+134    	; 0xc44 <DIO_u8SetPinDirction+0xcc>
     bbe:	2d 81       	ldd	r18, Y+5	; 0x05
     bc0:	3e 81       	ldd	r19, Y+6	; 0x06
     bc2:	22 30       	cpi	r18, 0x02	; 2
     bc4:	31 05       	cpc	r19, r1
     bc6:	2c f4       	brge	.+10     	; 0xbd2 <DIO_u8SetPinDirction+0x5a>
     bc8:	8d 81       	ldd	r24, Y+5	; 0x05
     bca:	9e 81       	ldd	r25, Y+6	; 0x06
     bcc:	00 97       	sbiw	r24, 0x00	; 0
     bce:	71 f0       	breq	.+28     	; 0xbec <DIO_u8SetPinDirction+0x74>
     bd0:	be c0       	rjmp	.+380    	; 0xd4e <DIO_u8SetPinDirction+0x1d6>
     bd2:	2d 81       	ldd	r18, Y+5	; 0x05
     bd4:	3e 81       	ldd	r19, Y+6	; 0x06
     bd6:	22 30       	cpi	r18, 0x02	; 2
     bd8:	31 05       	cpc	r19, r1
     bda:	09 f4       	brne	.+2      	; 0xbde <DIO_u8SetPinDirction+0x66>
     bdc:	5f c0       	rjmp	.+190    	; 0xc9c <DIO_u8SetPinDirction+0x124>
     bde:	8d 81       	ldd	r24, Y+5	; 0x05
     be0:	9e 81       	ldd	r25, Y+6	; 0x06
     be2:	83 30       	cpi	r24, 0x03	; 3
     be4:	91 05       	cpc	r25, r1
     be6:	09 f4       	brne	.+2      	; 0xbea <DIO_u8SetPinDirction+0x72>
     be8:	85 c0       	rjmp	.+266    	; 0xcf4 <DIO_u8SetPinDirction+0x17c>
     bea:	b1 c0       	rjmp	.+354    	; 0xd4e <DIO_u8SetPinDirction+0x1d6>
		{
			case DIO_U8_PORTA:
			       if(copy_u8PinDirction==DIO_U8_OUTPUT)
     bec:	8c 81       	ldd	r24, Y+4	; 0x04
     bee:	81 30       	cpi	r24, 0x01	; 1
     bf0:	a1 f4       	brne	.+40     	; 0xc1a <DIO_u8SetPinDirction+0xa2>
			       {
			            SET_BIT(DIO_U8_DDRA_REG,copy_u8PinId);
     bf2:	aa e3       	ldi	r26, 0x3A	; 58
     bf4:	b0 e0       	ldi	r27, 0x00	; 0
     bf6:	ea e3       	ldi	r30, 0x3A	; 58
     bf8:	f0 e0       	ldi	r31, 0x00	; 0
     bfa:	80 81       	ld	r24, Z
     bfc:	48 2f       	mov	r20, r24
     bfe:	8b 81       	ldd	r24, Y+3	; 0x03
     c00:	28 2f       	mov	r18, r24
     c02:	30 e0       	ldi	r19, 0x00	; 0
     c04:	81 e0       	ldi	r24, 0x01	; 1
     c06:	90 e0       	ldi	r25, 0x00	; 0
     c08:	02 2e       	mov	r0, r18
     c0a:	02 c0       	rjmp	.+4      	; 0xc10 <DIO_u8SetPinDirction+0x98>
     c0c:	88 0f       	add	r24, r24
     c0e:	99 1f       	adc	r25, r25
     c10:	0a 94       	dec	r0
     c12:	e2 f7       	brpl	.-8      	; 0xc0c <DIO_u8SetPinDirction+0x94>
     c14:	84 2b       	or	r24, r20
     c16:	8c 93       	st	X, r24
     c18:	9a c0       	rjmp	.+308    	; 0xd4e <DIO_u8SetPinDirction+0x1d6>
			       }
			       else
				   {
			            CLE_BIT(DIO_U8_DDRA_REG,copy_u8PinId);
     c1a:	aa e3       	ldi	r26, 0x3A	; 58
     c1c:	b0 e0       	ldi	r27, 0x00	; 0
     c1e:	ea e3       	ldi	r30, 0x3A	; 58
     c20:	f0 e0       	ldi	r31, 0x00	; 0
     c22:	80 81       	ld	r24, Z
     c24:	48 2f       	mov	r20, r24
     c26:	8b 81       	ldd	r24, Y+3	; 0x03
     c28:	28 2f       	mov	r18, r24
     c2a:	30 e0       	ldi	r19, 0x00	; 0
     c2c:	81 e0       	ldi	r24, 0x01	; 1
     c2e:	90 e0       	ldi	r25, 0x00	; 0
     c30:	02 2e       	mov	r0, r18
     c32:	02 c0       	rjmp	.+4      	; 0xc38 <DIO_u8SetPinDirction+0xc0>
     c34:	88 0f       	add	r24, r24
     c36:	99 1f       	adc	r25, r25
     c38:	0a 94       	dec	r0
     c3a:	e2 f7       	brpl	.-8      	; 0xc34 <DIO_u8SetPinDirction+0xbc>
     c3c:	80 95       	com	r24
     c3e:	84 23       	and	r24, r20
     c40:	8c 93       	st	X, r24
     c42:	85 c0       	rjmp	.+266    	; 0xd4e <DIO_u8SetPinDirction+0x1d6>
				   }
			break;
			case DIO_U8_PORTB :
			       if(copy_u8PinDirction==DIO_U8_OUTPUT)
     c44:	8c 81       	ldd	r24, Y+4	; 0x04
     c46:	81 30       	cpi	r24, 0x01	; 1
     c48:	a1 f4       	brne	.+40     	; 0xc72 <DIO_u8SetPinDirction+0xfa>
			       {
			            SET_BIT(DIO_U8_DDRB_REG,copy_u8PinId);
     c4a:	a7 e3       	ldi	r26, 0x37	; 55
     c4c:	b0 e0       	ldi	r27, 0x00	; 0
     c4e:	e7 e3       	ldi	r30, 0x37	; 55
     c50:	f0 e0       	ldi	r31, 0x00	; 0
     c52:	80 81       	ld	r24, Z
     c54:	48 2f       	mov	r20, r24
     c56:	8b 81       	ldd	r24, Y+3	; 0x03
     c58:	28 2f       	mov	r18, r24
     c5a:	30 e0       	ldi	r19, 0x00	; 0
     c5c:	81 e0       	ldi	r24, 0x01	; 1
     c5e:	90 e0       	ldi	r25, 0x00	; 0
     c60:	02 2e       	mov	r0, r18
     c62:	02 c0       	rjmp	.+4      	; 0xc68 <DIO_u8SetPinDirction+0xf0>
     c64:	88 0f       	add	r24, r24
     c66:	99 1f       	adc	r25, r25
     c68:	0a 94       	dec	r0
     c6a:	e2 f7       	brpl	.-8      	; 0xc64 <DIO_u8SetPinDirction+0xec>
     c6c:	84 2b       	or	r24, r20
     c6e:	8c 93       	st	X, r24
     c70:	6e c0       	rjmp	.+220    	; 0xd4e <DIO_u8SetPinDirction+0x1d6>
			       }
			       else
				   {
			            CLE_BIT(DIO_U8_DDRB_REG,copy_u8PinId);
     c72:	a7 e3       	ldi	r26, 0x37	; 55
     c74:	b0 e0       	ldi	r27, 0x00	; 0
     c76:	e7 e3       	ldi	r30, 0x37	; 55
     c78:	f0 e0       	ldi	r31, 0x00	; 0
     c7a:	80 81       	ld	r24, Z
     c7c:	48 2f       	mov	r20, r24
     c7e:	8b 81       	ldd	r24, Y+3	; 0x03
     c80:	28 2f       	mov	r18, r24
     c82:	30 e0       	ldi	r19, 0x00	; 0
     c84:	81 e0       	ldi	r24, 0x01	; 1
     c86:	90 e0       	ldi	r25, 0x00	; 0
     c88:	02 2e       	mov	r0, r18
     c8a:	02 c0       	rjmp	.+4      	; 0xc90 <DIO_u8SetPinDirction+0x118>
     c8c:	88 0f       	add	r24, r24
     c8e:	99 1f       	adc	r25, r25
     c90:	0a 94       	dec	r0
     c92:	e2 f7       	brpl	.-8      	; 0xc8c <DIO_u8SetPinDirction+0x114>
     c94:	80 95       	com	r24
     c96:	84 23       	and	r24, r20
     c98:	8c 93       	st	X, r24
     c9a:	59 c0       	rjmp	.+178    	; 0xd4e <DIO_u8SetPinDirction+0x1d6>
				   }
			break;
			case DIO_U8_PORTC:
			        if(copy_u8PinDirction==DIO_U8_OUTPUT)
     c9c:	8c 81       	ldd	r24, Y+4	; 0x04
     c9e:	81 30       	cpi	r24, 0x01	; 1
     ca0:	a1 f4       	brne	.+40     	; 0xcca <DIO_u8SetPinDirction+0x152>
			        {
			            SET_BIT(DIO_U8_DDRC_REG,copy_u8PinId);
     ca2:	a4 e3       	ldi	r26, 0x34	; 52
     ca4:	b0 e0       	ldi	r27, 0x00	; 0
     ca6:	e4 e3       	ldi	r30, 0x34	; 52
     ca8:	f0 e0       	ldi	r31, 0x00	; 0
     caa:	80 81       	ld	r24, Z
     cac:	48 2f       	mov	r20, r24
     cae:	8b 81       	ldd	r24, Y+3	; 0x03
     cb0:	28 2f       	mov	r18, r24
     cb2:	30 e0       	ldi	r19, 0x00	; 0
     cb4:	81 e0       	ldi	r24, 0x01	; 1
     cb6:	90 e0       	ldi	r25, 0x00	; 0
     cb8:	02 2e       	mov	r0, r18
     cba:	02 c0       	rjmp	.+4      	; 0xcc0 <DIO_u8SetPinDirction+0x148>
     cbc:	88 0f       	add	r24, r24
     cbe:	99 1f       	adc	r25, r25
     cc0:	0a 94       	dec	r0
     cc2:	e2 f7       	brpl	.-8      	; 0xcbc <DIO_u8SetPinDirction+0x144>
     cc4:	84 2b       	or	r24, r20
     cc6:	8c 93       	st	X, r24
     cc8:	42 c0       	rjmp	.+132    	; 0xd4e <DIO_u8SetPinDirction+0x1d6>
			        }
			        else
			        {
						CLE_BIT(DIO_U8_DDRC_REG,copy_u8PinId);
     cca:	a4 e3       	ldi	r26, 0x34	; 52
     ccc:	b0 e0       	ldi	r27, 0x00	; 0
     cce:	e4 e3       	ldi	r30, 0x34	; 52
     cd0:	f0 e0       	ldi	r31, 0x00	; 0
     cd2:	80 81       	ld	r24, Z
     cd4:	48 2f       	mov	r20, r24
     cd6:	8b 81       	ldd	r24, Y+3	; 0x03
     cd8:	28 2f       	mov	r18, r24
     cda:	30 e0       	ldi	r19, 0x00	; 0
     cdc:	81 e0       	ldi	r24, 0x01	; 1
     cde:	90 e0       	ldi	r25, 0x00	; 0
     ce0:	02 2e       	mov	r0, r18
     ce2:	02 c0       	rjmp	.+4      	; 0xce8 <DIO_u8SetPinDirction+0x170>
     ce4:	88 0f       	add	r24, r24
     ce6:	99 1f       	adc	r25, r25
     ce8:	0a 94       	dec	r0
     cea:	e2 f7       	brpl	.-8      	; 0xce4 <DIO_u8SetPinDirction+0x16c>
     cec:	80 95       	com	r24
     cee:	84 23       	and	r24, r20
     cf0:	8c 93       	st	X, r24
     cf2:	2d c0       	rjmp	.+90     	; 0xd4e <DIO_u8SetPinDirction+0x1d6>
					}
			break;
			case DIO_U8_PORTD:
			        if(copy_u8PinDirction==DIO_U8_OUTPUT)
     cf4:	8c 81       	ldd	r24, Y+4	; 0x04
     cf6:	81 30       	cpi	r24, 0x01	; 1
     cf8:	a1 f4       	brne	.+40     	; 0xd22 <DIO_u8SetPinDirction+0x1aa>
			        {
			            SET_BIT(DIO_U8_DDRD_REG,copy_u8PinId);
     cfa:	a1 e3       	ldi	r26, 0x31	; 49
     cfc:	b0 e0       	ldi	r27, 0x00	; 0
     cfe:	e1 e3       	ldi	r30, 0x31	; 49
     d00:	f0 e0       	ldi	r31, 0x00	; 0
     d02:	80 81       	ld	r24, Z
     d04:	48 2f       	mov	r20, r24
     d06:	8b 81       	ldd	r24, Y+3	; 0x03
     d08:	28 2f       	mov	r18, r24
     d0a:	30 e0       	ldi	r19, 0x00	; 0
     d0c:	81 e0       	ldi	r24, 0x01	; 1
     d0e:	90 e0       	ldi	r25, 0x00	; 0
     d10:	02 2e       	mov	r0, r18
     d12:	02 c0       	rjmp	.+4      	; 0xd18 <DIO_u8SetPinDirction+0x1a0>
     d14:	88 0f       	add	r24, r24
     d16:	99 1f       	adc	r25, r25
     d18:	0a 94       	dec	r0
     d1a:	e2 f7       	brpl	.-8      	; 0xd14 <DIO_u8SetPinDirction+0x19c>
     d1c:	84 2b       	or	r24, r20
     d1e:	8c 93       	st	X, r24
     d20:	16 c0       	rjmp	.+44     	; 0xd4e <DIO_u8SetPinDirction+0x1d6>
			        }
			        else
					{
                 		CLE_BIT(DIO_U8_DDRD_REG,copy_u8PinId);
     d22:	a1 e3       	ldi	r26, 0x31	; 49
     d24:	b0 e0       	ldi	r27, 0x00	; 0
     d26:	e1 e3       	ldi	r30, 0x31	; 49
     d28:	f0 e0       	ldi	r31, 0x00	; 0
     d2a:	80 81       	ld	r24, Z
     d2c:	48 2f       	mov	r20, r24
     d2e:	8b 81       	ldd	r24, Y+3	; 0x03
     d30:	28 2f       	mov	r18, r24
     d32:	30 e0       	ldi	r19, 0x00	; 0
     d34:	81 e0       	ldi	r24, 0x01	; 1
     d36:	90 e0       	ldi	r25, 0x00	; 0
     d38:	02 2e       	mov	r0, r18
     d3a:	02 c0       	rjmp	.+4      	; 0xd40 <DIO_u8SetPinDirction+0x1c8>
     d3c:	88 0f       	add	r24, r24
     d3e:	99 1f       	adc	r25, r25
     d40:	0a 94       	dec	r0
     d42:	e2 f7       	brpl	.-8      	; 0xd3c <DIO_u8SetPinDirction+0x1c4>
     d44:	80 95       	com	r24
     d46:	84 23       	and	r24, r20
     d48:	8c 93       	st	X, r24
     d4a:	01 c0       	rjmp	.+2      	; 0xd4e <DIO_u8SetPinDirction+0x1d6>
			break;
		}
	}
	else
	{
		Local_u8ErorrState =STD_TYPES_NOK; 
     d4c:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ErorrState;
     d4e:	89 81       	ldd	r24, Y+1	; 0x01
}
     d50:	26 96       	adiw	r28, 0x06	; 6
     d52:	0f b6       	in	r0, 0x3f	; 63
     d54:	f8 94       	cli
     d56:	de bf       	out	0x3e, r29	; 62
     d58:	0f be       	out	0x3f, r0	; 63
     d5a:	cd bf       	out	0x3d, r28	; 61
     d5c:	cf 91       	pop	r28
     d5e:	df 91       	pop	r29
     d60:	08 95       	ret

00000d62 <DIO_u8SetPinValue>:

u8 DIO_u8SetPinValue(u8 copy_u8PortId,u8 copy_u8PinId,u8 copy_u8PinValue)
{
     d62:	df 93       	push	r29
     d64:	cf 93       	push	r28
     d66:	00 d0       	rcall	.+0      	; 0xd68 <DIO_u8SetPinValue+0x6>
     d68:	00 d0       	rcall	.+0      	; 0xd6a <DIO_u8SetPinValue+0x8>
     d6a:	00 d0       	rcall	.+0      	; 0xd6c <DIO_u8SetPinValue+0xa>
     d6c:	cd b7       	in	r28, 0x3d	; 61
     d6e:	de b7       	in	r29, 0x3e	; 62
     d70:	8a 83       	std	Y+2, r24	; 0x02
     d72:	6b 83       	std	Y+3, r22	; 0x03
     d74:	4c 83       	std	Y+4, r20	; 0x04
		u8 Local_u8ErorrState = STD_TYPES_OK;
     d76:	81 e0       	ldi	r24, 0x01	; 1
     d78:	89 83       	std	Y+1, r24	; 0x01
	if((copy_u8PortId<= DIO_U8_PORTD) && (copy_u8PinId <=DIO_U8_PIN7) && (copy_u8PinValue<=DIO_U8_OUTPUT))
     d7a:	8a 81       	ldd	r24, Y+2	; 0x02
     d7c:	84 30       	cpi	r24, 0x04	; 4
     d7e:	08 f0       	brcs	.+2      	; 0xd82 <DIO_u8SetPinValue+0x20>
     d80:	da c0       	rjmp	.+436    	; 0xf36 <DIO_u8SetPinValue+0x1d4>
     d82:	8b 81       	ldd	r24, Y+3	; 0x03
     d84:	88 30       	cpi	r24, 0x08	; 8
     d86:	08 f0       	brcs	.+2      	; 0xd8a <DIO_u8SetPinValue+0x28>
     d88:	d6 c0       	rjmp	.+428    	; 0xf36 <DIO_u8SetPinValue+0x1d4>
     d8a:	8c 81       	ldd	r24, Y+4	; 0x04
     d8c:	82 30       	cpi	r24, 0x02	; 2
     d8e:	08 f0       	brcs	.+2      	; 0xd92 <DIO_u8SetPinValue+0x30>
     d90:	d2 c0       	rjmp	.+420    	; 0xf36 <DIO_u8SetPinValue+0x1d4>
	{
	  switch(copy_u8PortId)
     d92:	8a 81       	ldd	r24, Y+2	; 0x02
     d94:	28 2f       	mov	r18, r24
     d96:	30 e0       	ldi	r19, 0x00	; 0
     d98:	3e 83       	std	Y+6, r19	; 0x06
     d9a:	2d 83       	std	Y+5, r18	; 0x05
     d9c:	8d 81       	ldd	r24, Y+5	; 0x05
     d9e:	9e 81       	ldd	r25, Y+6	; 0x06
     da0:	81 30       	cpi	r24, 0x01	; 1
     da2:	91 05       	cpc	r25, r1
     da4:	09 f4       	brne	.+2      	; 0xda8 <DIO_u8SetPinValue+0x46>
     da6:	43 c0       	rjmp	.+134    	; 0xe2e <DIO_u8SetPinValue+0xcc>
     da8:	2d 81       	ldd	r18, Y+5	; 0x05
     daa:	3e 81       	ldd	r19, Y+6	; 0x06
     dac:	22 30       	cpi	r18, 0x02	; 2
     dae:	31 05       	cpc	r19, r1
     db0:	2c f4       	brge	.+10     	; 0xdbc <DIO_u8SetPinValue+0x5a>
     db2:	8d 81       	ldd	r24, Y+5	; 0x05
     db4:	9e 81       	ldd	r25, Y+6	; 0x06
     db6:	00 97       	sbiw	r24, 0x00	; 0
     db8:	71 f0       	breq	.+28     	; 0xdd6 <DIO_u8SetPinValue+0x74>
     dba:	be c0       	rjmp	.+380    	; 0xf38 <DIO_u8SetPinValue+0x1d6>
     dbc:	2d 81       	ldd	r18, Y+5	; 0x05
     dbe:	3e 81       	ldd	r19, Y+6	; 0x06
     dc0:	22 30       	cpi	r18, 0x02	; 2
     dc2:	31 05       	cpc	r19, r1
     dc4:	09 f4       	brne	.+2      	; 0xdc8 <DIO_u8SetPinValue+0x66>
     dc6:	5f c0       	rjmp	.+190    	; 0xe86 <DIO_u8SetPinValue+0x124>
     dc8:	8d 81       	ldd	r24, Y+5	; 0x05
     dca:	9e 81       	ldd	r25, Y+6	; 0x06
     dcc:	83 30       	cpi	r24, 0x03	; 3
     dce:	91 05       	cpc	r25, r1
     dd0:	09 f4       	brne	.+2      	; 0xdd4 <DIO_u8SetPinValue+0x72>
     dd2:	85 c0       	rjmp	.+266    	; 0xede <DIO_u8SetPinValue+0x17c>
     dd4:	b1 c0       	rjmp	.+354    	; 0xf38 <DIO_u8SetPinValue+0x1d6>
	  {
		  case DIO_U8_PORTA:
		       if(copy_u8PinValue==DIO_U8_OUTPUT)
     dd6:	8c 81       	ldd	r24, Y+4	; 0x04
     dd8:	81 30       	cpi	r24, 0x01	; 1
     dda:	a1 f4       	brne	.+40     	; 0xe04 <DIO_u8SetPinValue+0xa2>
	       	   {
			       SET_BIT(DIO_U8_PORTA_REG,copy_u8PinId);
     ddc:	ab e3       	ldi	r26, 0x3B	; 59
     dde:	b0 e0       	ldi	r27, 0x00	; 0
     de0:	eb e3       	ldi	r30, 0x3B	; 59
     de2:	f0 e0       	ldi	r31, 0x00	; 0
     de4:	80 81       	ld	r24, Z
     de6:	48 2f       	mov	r20, r24
     de8:	8b 81       	ldd	r24, Y+3	; 0x03
     dea:	28 2f       	mov	r18, r24
     dec:	30 e0       	ldi	r19, 0x00	; 0
     dee:	81 e0       	ldi	r24, 0x01	; 1
     df0:	90 e0       	ldi	r25, 0x00	; 0
     df2:	02 2e       	mov	r0, r18
     df4:	02 c0       	rjmp	.+4      	; 0xdfa <DIO_u8SetPinValue+0x98>
     df6:	88 0f       	add	r24, r24
     df8:	99 1f       	adc	r25, r25
     dfa:	0a 94       	dec	r0
     dfc:	e2 f7       	brpl	.-8      	; 0xdf6 <DIO_u8SetPinValue+0x94>
     dfe:	84 2b       	or	r24, r20
     e00:	8c 93       	st	X, r24
     e02:	9a c0       	rjmp	.+308    	; 0xf38 <DIO_u8SetPinValue+0x1d6>
		       }
		       else
			   {
				   CLE_BIT(DIO_U8_PORTA_REG,copy_u8PinId);
     e04:	ab e3       	ldi	r26, 0x3B	; 59
     e06:	b0 e0       	ldi	r27, 0x00	; 0
     e08:	eb e3       	ldi	r30, 0x3B	; 59
     e0a:	f0 e0       	ldi	r31, 0x00	; 0
     e0c:	80 81       	ld	r24, Z
     e0e:	48 2f       	mov	r20, r24
     e10:	8b 81       	ldd	r24, Y+3	; 0x03
     e12:	28 2f       	mov	r18, r24
     e14:	30 e0       	ldi	r19, 0x00	; 0
     e16:	81 e0       	ldi	r24, 0x01	; 1
     e18:	90 e0       	ldi	r25, 0x00	; 0
     e1a:	02 2e       	mov	r0, r18
     e1c:	02 c0       	rjmp	.+4      	; 0xe22 <DIO_u8SetPinValue+0xc0>
     e1e:	88 0f       	add	r24, r24
     e20:	99 1f       	adc	r25, r25
     e22:	0a 94       	dec	r0
     e24:	e2 f7       	brpl	.-8      	; 0xe1e <DIO_u8SetPinValue+0xbc>
     e26:	80 95       	com	r24
     e28:	84 23       	and	r24, r20
     e2a:	8c 93       	st	X, r24
     e2c:	85 c0       	rjmp	.+266    	; 0xf38 <DIO_u8SetPinValue+0x1d6>
			   }
		  break;
		  case DIO_U8_PORTB:
		       if(copy_u8PinValue==DIO_U8_OUTPUT)
     e2e:	8c 81       	ldd	r24, Y+4	; 0x04
     e30:	81 30       	cpi	r24, 0x01	; 1
     e32:	a1 f4       	brne	.+40     	; 0xe5c <DIO_u8SetPinValue+0xfa>
	       	   {
			       SET_BIT(DIO_U8_PORTB_REG,copy_u8PinId);
     e34:	a8 e3       	ldi	r26, 0x38	; 56
     e36:	b0 e0       	ldi	r27, 0x00	; 0
     e38:	e8 e3       	ldi	r30, 0x38	; 56
     e3a:	f0 e0       	ldi	r31, 0x00	; 0
     e3c:	80 81       	ld	r24, Z
     e3e:	48 2f       	mov	r20, r24
     e40:	8b 81       	ldd	r24, Y+3	; 0x03
     e42:	28 2f       	mov	r18, r24
     e44:	30 e0       	ldi	r19, 0x00	; 0
     e46:	81 e0       	ldi	r24, 0x01	; 1
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	02 2e       	mov	r0, r18
     e4c:	02 c0       	rjmp	.+4      	; 0xe52 <DIO_u8SetPinValue+0xf0>
     e4e:	88 0f       	add	r24, r24
     e50:	99 1f       	adc	r25, r25
     e52:	0a 94       	dec	r0
     e54:	e2 f7       	brpl	.-8      	; 0xe4e <DIO_u8SetPinValue+0xec>
     e56:	84 2b       	or	r24, r20
     e58:	8c 93       	st	X, r24
     e5a:	6e c0       	rjmp	.+220    	; 0xf38 <DIO_u8SetPinValue+0x1d6>
		       }
		       else
			   {
				   CLE_BIT(DIO_U8_PORTB_REG,copy_u8PinId);
     e5c:	a8 e3       	ldi	r26, 0x38	; 56
     e5e:	b0 e0       	ldi	r27, 0x00	; 0
     e60:	e8 e3       	ldi	r30, 0x38	; 56
     e62:	f0 e0       	ldi	r31, 0x00	; 0
     e64:	80 81       	ld	r24, Z
     e66:	48 2f       	mov	r20, r24
     e68:	8b 81       	ldd	r24, Y+3	; 0x03
     e6a:	28 2f       	mov	r18, r24
     e6c:	30 e0       	ldi	r19, 0x00	; 0
     e6e:	81 e0       	ldi	r24, 0x01	; 1
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	02 2e       	mov	r0, r18
     e74:	02 c0       	rjmp	.+4      	; 0xe7a <DIO_u8SetPinValue+0x118>
     e76:	88 0f       	add	r24, r24
     e78:	99 1f       	adc	r25, r25
     e7a:	0a 94       	dec	r0
     e7c:	e2 f7       	brpl	.-8      	; 0xe76 <DIO_u8SetPinValue+0x114>
     e7e:	80 95       	com	r24
     e80:	84 23       	and	r24, r20
     e82:	8c 93       	st	X, r24
     e84:	59 c0       	rjmp	.+178    	; 0xf38 <DIO_u8SetPinValue+0x1d6>
			   }
		  break;
		  case DIO_U8_PORTC:
		       if(copy_u8PinValue==DIO_U8_OUTPUT)
     e86:	8c 81       	ldd	r24, Y+4	; 0x04
     e88:	81 30       	cpi	r24, 0x01	; 1
     e8a:	a1 f4       	brne	.+40     	; 0xeb4 <DIO_u8SetPinValue+0x152>
	       	   {
			       SET_BIT(DIO_U8_PORTC_REG,copy_u8PinId);
     e8c:	a5 e3       	ldi	r26, 0x35	; 53
     e8e:	b0 e0       	ldi	r27, 0x00	; 0
     e90:	e5 e3       	ldi	r30, 0x35	; 53
     e92:	f0 e0       	ldi	r31, 0x00	; 0
     e94:	80 81       	ld	r24, Z
     e96:	48 2f       	mov	r20, r24
     e98:	8b 81       	ldd	r24, Y+3	; 0x03
     e9a:	28 2f       	mov	r18, r24
     e9c:	30 e0       	ldi	r19, 0x00	; 0
     e9e:	81 e0       	ldi	r24, 0x01	; 1
     ea0:	90 e0       	ldi	r25, 0x00	; 0
     ea2:	02 2e       	mov	r0, r18
     ea4:	02 c0       	rjmp	.+4      	; 0xeaa <DIO_u8SetPinValue+0x148>
     ea6:	88 0f       	add	r24, r24
     ea8:	99 1f       	adc	r25, r25
     eaa:	0a 94       	dec	r0
     eac:	e2 f7       	brpl	.-8      	; 0xea6 <DIO_u8SetPinValue+0x144>
     eae:	84 2b       	or	r24, r20
     eb0:	8c 93       	st	X, r24
     eb2:	42 c0       	rjmp	.+132    	; 0xf38 <DIO_u8SetPinValue+0x1d6>
		       }
		       else
			   {
				   CLE_BIT(DIO_U8_PORTC_REG,copy_u8PinId);
     eb4:	a5 e3       	ldi	r26, 0x35	; 53
     eb6:	b0 e0       	ldi	r27, 0x00	; 0
     eb8:	e5 e3       	ldi	r30, 0x35	; 53
     eba:	f0 e0       	ldi	r31, 0x00	; 0
     ebc:	80 81       	ld	r24, Z
     ebe:	48 2f       	mov	r20, r24
     ec0:	8b 81       	ldd	r24, Y+3	; 0x03
     ec2:	28 2f       	mov	r18, r24
     ec4:	30 e0       	ldi	r19, 0x00	; 0
     ec6:	81 e0       	ldi	r24, 0x01	; 1
     ec8:	90 e0       	ldi	r25, 0x00	; 0
     eca:	02 2e       	mov	r0, r18
     ecc:	02 c0       	rjmp	.+4      	; 0xed2 <DIO_u8SetPinValue+0x170>
     ece:	88 0f       	add	r24, r24
     ed0:	99 1f       	adc	r25, r25
     ed2:	0a 94       	dec	r0
     ed4:	e2 f7       	brpl	.-8      	; 0xece <DIO_u8SetPinValue+0x16c>
     ed6:	80 95       	com	r24
     ed8:	84 23       	and	r24, r20
     eda:	8c 93       	st	X, r24
     edc:	2d c0       	rjmp	.+90     	; 0xf38 <DIO_u8SetPinValue+0x1d6>
			   }
		  break;
		  case DIO_U8_PORTD:
		       if(copy_u8PinValue==DIO_U8_OUTPUT)
     ede:	8c 81       	ldd	r24, Y+4	; 0x04
     ee0:	81 30       	cpi	r24, 0x01	; 1
     ee2:	a1 f4       	brne	.+40     	; 0xf0c <DIO_u8SetPinValue+0x1aa>
	       	   {
			       SET_BIT(DIO_U8_PORTD_REG,copy_u8PinId);
     ee4:	a2 e3       	ldi	r26, 0x32	; 50
     ee6:	b0 e0       	ldi	r27, 0x00	; 0
     ee8:	e2 e3       	ldi	r30, 0x32	; 50
     eea:	f0 e0       	ldi	r31, 0x00	; 0
     eec:	80 81       	ld	r24, Z
     eee:	48 2f       	mov	r20, r24
     ef0:	8b 81       	ldd	r24, Y+3	; 0x03
     ef2:	28 2f       	mov	r18, r24
     ef4:	30 e0       	ldi	r19, 0x00	; 0
     ef6:	81 e0       	ldi	r24, 0x01	; 1
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	02 2e       	mov	r0, r18
     efc:	02 c0       	rjmp	.+4      	; 0xf02 <DIO_u8SetPinValue+0x1a0>
     efe:	88 0f       	add	r24, r24
     f00:	99 1f       	adc	r25, r25
     f02:	0a 94       	dec	r0
     f04:	e2 f7       	brpl	.-8      	; 0xefe <DIO_u8SetPinValue+0x19c>
     f06:	84 2b       	or	r24, r20
     f08:	8c 93       	st	X, r24
     f0a:	16 c0       	rjmp	.+44     	; 0xf38 <DIO_u8SetPinValue+0x1d6>
		       }
		       else
			   {
				   CLE_BIT(DIO_U8_PORTD_REG,copy_u8PinId);
     f0c:	a2 e3       	ldi	r26, 0x32	; 50
     f0e:	b0 e0       	ldi	r27, 0x00	; 0
     f10:	e2 e3       	ldi	r30, 0x32	; 50
     f12:	f0 e0       	ldi	r31, 0x00	; 0
     f14:	80 81       	ld	r24, Z
     f16:	48 2f       	mov	r20, r24
     f18:	8b 81       	ldd	r24, Y+3	; 0x03
     f1a:	28 2f       	mov	r18, r24
     f1c:	30 e0       	ldi	r19, 0x00	; 0
     f1e:	81 e0       	ldi	r24, 0x01	; 1
     f20:	90 e0       	ldi	r25, 0x00	; 0
     f22:	02 2e       	mov	r0, r18
     f24:	02 c0       	rjmp	.+4      	; 0xf2a <DIO_u8SetPinValue+0x1c8>
     f26:	88 0f       	add	r24, r24
     f28:	99 1f       	adc	r25, r25
     f2a:	0a 94       	dec	r0
     f2c:	e2 f7       	brpl	.-8      	; 0xf26 <DIO_u8SetPinValue+0x1c4>
     f2e:	80 95       	com	r24
     f30:	84 23       	and	r24, r20
     f32:	8c 93       	st	X, r24
     f34:	01 c0       	rjmp	.+2      	; 0xf38 <DIO_u8SetPinValue+0x1d6>
		  
	  }
	}
	else
	{
	Local_u8ErorrState =STD_TYPES_NOK; 
     f36:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ErorrState;
     f38:	89 81       	ldd	r24, Y+1	; 0x01
	
}
     f3a:	26 96       	adiw	r28, 0x06	; 6
     f3c:	0f b6       	in	r0, 0x3f	; 63
     f3e:	f8 94       	cli
     f40:	de bf       	out	0x3e, r29	; 62
     f42:	0f be       	out	0x3f, r0	; 63
     f44:	cd bf       	out	0x3d, r28	; 61
     f46:	cf 91       	pop	r28
     f48:	df 91       	pop	r29
     f4a:	08 95       	ret

00000f4c <DIO_u8GetPinValue>:

u8 DIO_u8GetPinValue(u8 copy_u8PortId,u8 copy_u8PinId,u8 *copy_pu8PinValue )
{
     f4c:	df 93       	push	r29
     f4e:	cf 93       	push	r28
     f50:	cd b7       	in	r28, 0x3d	; 61
     f52:	de b7       	in	r29, 0x3e	; 62
     f54:	27 97       	sbiw	r28, 0x07	; 7
     f56:	0f b6       	in	r0, 0x3f	; 63
     f58:	f8 94       	cli
     f5a:	de bf       	out	0x3e, r29	; 62
     f5c:	0f be       	out	0x3f, r0	; 63
     f5e:	cd bf       	out	0x3d, r28	; 61
     f60:	8a 83       	std	Y+2, r24	; 0x02
     f62:	6b 83       	std	Y+3, r22	; 0x03
     f64:	5d 83       	std	Y+5, r21	; 0x05
     f66:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErorrState = STD_TYPES_OK;
     f68:	81 e0       	ldi	r24, 0x01	; 1
     f6a:	89 83       	std	Y+1, r24	; 0x01
	if((copy_u8PortId<= DIO_U8_PORTD) && (copy_u8PinId <=DIO_U8_PIN7))
     f6c:	8a 81       	ldd	r24, Y+2	; 0x02
     f6e:	84 30       	cpi	r24, 0x04	; 4
     f70:	08 f0       	brcs	.+2      	; 0xf74 <DIO_u8GetPinValue+0x28>
     f72:	75 c0       	rjmp	.+234    	; 0x105e <DIO_u8GetPinValue+0x112>
     f74:	8b 81       	ldd	r24, Y+3	; 0x03
     f76:	88 30       	cpi	r24, 0x08	; 8
     f78:	08 f0       	brcs	.+2      	; 0xf7c <DIO_u8GetPinValue+0x30>
     f7a:	71 c0       	rjmp	.+226    	; 0x105e <DIO_u8GetPinValue+0x112>
	{
	 switch(copy_u8PortId)
     f7c:	8a 81       	ldd	r24, Y+2	; 0x02
     f7e:	28 2f       	mov	r18, r24
     f80:	30 e0       	ldi	r19, 0x00	; 0
     f82:	3f 83       	std	Y+7, r19	; 0x07
     f84:	2e 83       	std	Y+6, r18	; 0x06
     f86:	4e 81       	ldd	r20, Y+6	; 0x06
     f88:	5f 81       	ldd	r21, Y+7	; 0x07
     f8a:	41 30       	cpi	r20, 0x01	; 1
     f8c:	51 05       	cpc	r21, r1
     f8e:	59 f1       	breq	.+86     	; 0xfe6 <DIO_u8GetPinValue+0x9a>
     f90:	8e 81       	ldd	r24, Y+6	; 0x06
     f92:	9f 81       	ldd	r25, Y+7	; 0x07
     f94:	82 30       	cpi	r24, 0x02	; 2
     f96:	91 05       	cpc	r25, r1
     f98:	34 f4       	brge	.+12     	; 0xfa6 <DIO_u8GetPinValue+0x5a>
     f9a:	2e 81       	ldd	r18, Y+6	; 0x06
     f9c:	3f 81       	ldd	r19, Y+7	; 0x07
     f9e:	21 15       	cp	r18, r1
     fa0:	31 05       	cpc	r19, r1
     fa2:	69 f0       	breq	.+26     	; 0xfbe <DIO_u8GetPinValue+0x72>
     fa4:	5d c0       	rjmp	.+186    	; 0x1060 <DIO_u8GetPinValue+0x114>
     fa6:	4e 81       	ldd	r20, Y+6	; 0x06
     fa8:	5f 81       	ldd	r21, Y+7	; 0x07
     faa:	42 30       	cpi	r20, 0x02	; 2
     fac:	51 05       	cpc	r21, r1
     fae:	79 f1       	breq	.+94     	; 0x100e <DIO_u8GetPinValue+0xc2>
     fb0:	8e 81       	ldd	r24, Y+6	; 0x06
     fb2:	9f 81       	ldd	r25, Y+7	; 0x07
     fb4:	83 30       	cpi	r24, 0x03	; 3
     fb6:	91 05       	cpc	r25, r1
     fb8:	09 f4       	brne	.+2      	; 0xfbc <DIO_u8GetPinValue+0x70>
     fba:	3d c0       	rjmp	.+122    	; 0x1036 <DIO_u8GetPinValue+0xea>
     fbc:	51 c0       	rjmp	.+162    	; 0x1060 <DIO_u8GetPinValue+0x114>
	  {
		 case DIO_U8_PORTA:
		 
			  *copy_pu8PinValue = GET_BIT(DIO_U8_PINA_REG,copy_u8PinId);
     fbe:	e9 e3       	ldi	r30, 0x39	; 57
     fc0:	f0 e0       	ldi	r31, 0x00	; 0
     fc2:	80 81       	ld	r24, Z
     fc4:	28 2f       	mov	r18, r24
     fc6:	30 e0       	ldi	r19, 0x00	; 0
     fc8:	8b 81       	ldd	r24, Y+3	; 0x03
     fca:	88 2f       	mov	r24, r24
     fcc:	90 e0       	ldi	r25, 0x00	; 0
     fce:	a9 01       	movw	r20, r18
     fd0:	02 c0       	rjmp	.+4      	; 0xfd6 <DIO_u8GetPinValue+0x8a>
     fd2:	55 95       	asr	r21
     fd4:	47 95       	ror	r20
     fd6:	8a 95       	dec	r24
     fd8:	e2 f7       	brpl	.-8      	; 0xfd2 <DIO_u8GetPinValue+0x86>
     fda:	ca 01       	movw	r24, r20
     fdc:	81 70       	andi	r24, 0x01	; 1
     fde:	ec 81       	ldd	r30, Y+4	; 0x04
     fe0:	fd 81       	ldd	r31, Y+5	; 0x05
     fe2:	80 83       	st	Z, r24
     fe4:	3d c0       	rjmp	.+122    	; 0x1060 <DIO_u8GetPinValue+0x114>
		
		 break;
		 case DIO_U8_PORTB:
		 
			  *copy_pu8PinValue = GET_BIT(DIO_U8_PINB_REG,copy_u8PinId);
     fe6:	e6 e3       	ldi	r30, 0x36	; 54
     fe8:	f0 e0       	ldi	r31, 0x00	; 0
     fea:	80 81       	ld	r24, Z
     fec:	28 2f       	mov	r18, r24
     fee:	30 e0       	ldi	r19, 0x00	; 0
     ff0:	8b 81       	ldd	r24, Y+3	; 0x03
     ff2:	88 2f       	mov	r24, r24
     ff4:	90 e0       	ldi	r25, 0x00	; 0
     ff6:	a9 01       	movw	r20, r18
     ff8:	02 c0       	rjmp	.+4      	; 0xffe <DIO_u8GetPinValue+0xb2>
     ffa:	55 95       	asr	r21
     ffc:	47 95       	ror	r20
     ffe:	8a 95       	dec	r24
    1000:	e2 f7       	brpl	.-8      	; 0xffa <DIO_u8GetPinValue+0xae>
    1002:	ca 01       	movw	r24, r20
    1004:	81 70       	andi	r24, 0x01	; 1
    1006:	ec 81       	ldd	r30, Y+4	; 0x04
    1008:	fd 81       	ldd	r31, Y+5	; 0x05
    100a:	80 83       	st	Z, r24
    100c:	29 c0       	rjmp	.+82     	; 0x1060 <DIO_u8GetPinValue+0x114>
		
		 break;
		 case DIO_U8_PORTC:
		 
			  *copy_pu8PinValue = GET_BIT(DIO_U8_PINC_REG,copy_u8PinId);
    100e:	e3 e3       	ldi	r30, 0x33	; 51
    1010:	f0 e0       	ldi	r31, 0x00	; 0
    1012:	80 81       	ld	r24, Z
    1014:	28 2f       	mov	r18, r24
    1016:	30 e0       	ldi	r19, 0x00	; 0
    1018:	8b 81       	ldd	r24, Y+3	; 0x03
    101a:	88 2f       	mov	r24, r24
    101c:	90 e0       	ldi	r25, 0x00	; 0
    101e:	a9 01       	movw	r20, r18
    1020:	02 c0       	rjmp	.+4      	; 0x1026 <DIO_u8GetPinValue+0xda>
    1022:	55 95       	asr	r21
    1024:	47 95       	ror	r20
    1026:	8a 95       	dec	r24
    1028:	e2 f7       	brpl	.-8      	; 0x1022 <DIO_u8GetPinValue+0xd6>
    102a:	ca 01       	movw	r24, r20
    102c:	81 70       	andi	r24, 0x01	; 1
    102e:	ec 81       	ldd	r30, Y+4	; 0x04
    1030:	fd 81       	ldd	r31, Y+5	; 0x05
    1032:	80 83       	st	Z, r24
    1034:	15 c0       	rjmp	.+42     	; 0x1060 <DIO_u8GetPinValue+0x114>
		
		 break;
		 case DIO_U8_PORTD:
		 
			  *copy_pu8PinValue = GET_BIT(DIO_U8_PIND_REG,copy_u8PinId);
    1036:	e0 e3       	ldi	r30, 0x30	; 48
    1038:	f0 e0       	ldi	r31, 0x00	; 0
    103a:	80 81       	ld	r24, Z
    103c:	28 2f       	mov	r18, r24
    103e:	30 e0       	ldi	r19, 0x00	; 0
    1040:	8b 81       	ldd	r24, Y+3	; 0x03
    1042:	88 2f       	mov	r24, r24
    1044:	90 e0       	ldi	r25, 0x00	; 0
    1046:	a9 01       	movw	r20, r18
    1048:	02 c0       	rjmp	.+4      	; 0x104e <DIO_u8GetPinValue+0x102>
    104a:	55 95       	asr	r21
    104c:	47 95       	ror	r20
    104e:	8a 95       	dec	r24
    1050:	e2 f7       	brpl	.-8      	; 0x104a <DIO_u8GetPinValue+0xfe>
    1052:	ca 01       	movw	r24, r20
    1054:	81 70       	andi	r24, 0x01	; 1
    1056:	ec 81       	ldd	r30, Y+4	; 0x04
    1058:	fd 81       	ldd	r31, Y+5	; 0x05
    105a:	80 83       	st	Z, r24
    105c:	01 c0       	rjmp	.+2      	; 0x1060 <DIO_u8GetPinValue+0x114>
		 break;
	  }
	}
	else
	{
	Local_u8ErorrState =STD_TYPES_NOK;	
    105e:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ErorrState;
    1060:	89 81       	ldd	r24, Y+1	; 0x01
}
    1062:	27 96       	adiw	r28, 0x07	; 7
    1064:	0f b6       	in	r0, 0x3f	; 63
    1066:	f8 94       	cli
    1068:	de bf       	out	0x3e, r29	; 62
    106a:	0f be       	out	0x3f, r0	; 63
    106c:	cd bf       	out	0x3d, r28	; 61
    106e:	cf 91       	pop	r28
    1070:	df 91       	pop	r29
    1072:	08 95       	ret

00001074 <DIO_u8SetPortDirction>:

u8 DIO_u8SetPortDirction(u8 copy_u8PortId,u8 copy_u8PortDirction )
{
    1074:	df 93       	push	r29
    1076:	cf 93       	push	r28
    1078:	cd b7       	in	r28, 0x3d	; 61
    107a:	de b7       	in	r29, 0x3e	; 62
    107c:	2d 97       	sbiw	r28, 0x0d	; 13
    107e:	0f b6       	in	r0, 0x3f	; 63
    1080:	f8 94       	cli
    1082:	de bf       	out	0x3e, r29	; 62
    1084:	0f be       	out	0x3f, r0	; 63
    1086:	cd bf       	out	0x3d, r28	; 61
    1088:	8a 83       	std	Y+2, r24	; 0x02
    108a:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErorrState = STD_TYPES_OK; 	
    108c:	81 e0       	ldi	r24, 0x01	; 1
    108e:	89 83       	std	Y+1, r24	; 0x01
	if((copy_u8PortId<=DIO_U8_PORTD) && (copy_u8PortDirction<=DIO_U8_OUTPUT))
    1090:	8a 81       	ldd	r24, Y+2	; 0x02
    1092:	84 30       	cpi	r24, 0x04	; 4
    1094:	08 f0       	brcs	.+2      	; 0x1098 <DIO_u8SetPortDirction+0x24>
    1096:	6b c0       	rjmp	.+214    	; 0x116e <DIO_u8SetPortDirction+0xfa>
    1098:	8b 81       	ldd	r24, Y+3	; 0x03
    109a:	82 30       	cpi	r24, 0x02	; 2
    109c:	08 f0       	brcs	.+2      	; 0x10a0 <DIO_u8SetPortDirction+0x2c>
    109e:	67 c0       	rjmp	.+206    	; 0x116e <DIO_u8SetPortDirction+0xfa>
	{
		switch(copy_u8PortId)
    10a0:	8a 81       	ldd	r24, Y+2	; 0x02
    10a2:	28 2f       	mov	r18, r24
    10a4:	30 e0       	ldi	r19, 0x00	; 0
    10a6:	3d 87       	std	Y+13, r19	; 0x0d
    10a8:	2c 87       	std	Y+12, r18	; 0x0c
    10aa:	8c 85       	ldd	r24, Y+12	; 0x0c
    10ac:	9d 85       	ldd	r25, Y+13	; 0x0d
    10ae:	81 30       	cpi	r24, 0x01	; 1
    10b0:	91 05       	cpc	r25, r1
    10b2:	39 f1       	breq	.+78     	; 0x1102 <DIO_u8SetPortDirction+0x8e>
    10b4:	2c 85       	ldd	r18, Y+12	; 0x0c
    10b6:	3d 85       	ldd	r19, Y+13	; 0x0d
    10b8:	22 30       	cpi	r18, 0x02	; 2
    10ba:	31 05       	cpc	r19, r1
    10bc:	2c f4       	brge	.+10     	; 0x10c8 <DIO_u8SetPortDirction+0x54>
    10be:	8c 85       	ldd	r24, Y+12	; 0x0c
    10c0:	9d 85       	ldd	r25, Y+13	; 0x0d
    10c2:	00 97       	sbiw	r24, 0x00	; 0
    10c4:	61 f0       	breq	.+24     	; 0x10de <DIO_u8SetPortDirction+0x6a>
    10c6:	54 c0       	rjmp	.+168    	; 0x1170 <DIO_u8SetPortDirction+0xfc>
    10c8:	2c 85       	ldd	r18, Y+12	; 0x0c
    10ca:	3d 85       	ldd	r19, Y+13	; 0x0d
    10cc:	22 30       	cpi	r18, 0x02	; 2
    10ce:	31 05       	cpc	r19, r1
    10d0:	51 f1       	breq	.+84     	; 0x1126 <DIO_u8SetPortDirction+0xb2>
    10d2:	8c 85       	ldd	r24, Y+12	; 0x0c
    10d4:	9d 85       	ldd	r25, Y+13	; 0x0d
    10d6:	83 30       	cpi	r24, 0x03	; 3
    10d8:	91 05       	cpc	r25, r1
    10da:	b9 f1       	breq	.+110    	; 0x114a <DIO_u8SetPortDirction+0xd6>
    10dc:	49 c0       	rjmp	.+146    	; 0x1170 <DIO_u8SetPortDirction+0xfc>
		{
			case DIO_U8_PORTA:
			     if(copy_u8PortDirction==DIO_U8_OUTPUT)
    10de:	8b 81       	ldd	r24, Y+3	; 0x03
    10e0:	81 30       	cpi	r24, 0x01	; 1
    10e2:	41 f4       	brne	.+16     	; 0x10f4 <DIO_u8SetPortDirction+0x80>
			     { 
			     SET_PORT(DIO_U8_DDRA_REG);	
    10e4:	ea e3       	ldi	r30, 0x3A	; 58
    10e6:	f0 e0       	ldi	r31, 0x00	; 0
    10e8:	90 81       	ld	r25, Z
    10ea:	ea e3       	ldi	r30, 0x3A	; 58
    10ec:	f0 e0       	ldi	r31, 0x00	; 0
    10ee:	8f ef       	ldi	r24, 0xFF	; 255
    10f0:	80 83       	st	Z, r24
    10f2:	3e c0       	rjmp	.+124    	; 0x1170 <DIO_u8SetPortDirction+0xfc>
			     }
			     else
			     {
			      CLE_PORT(DIO_U8_DDRA_REG);
    10f4:	ea e3       	ldi	r30, 0x3A	; 58
    10f6:	f0 e0       	ldi	r31, 0x00	; 0
    10f8:	20 81       	ld	r18, Z
    10fa:	ea e3       	ldi	r30, 0x3A	; 58
    10fc:	f0 e0       	ldi	r31, 0x00	; 0
    10fe:	10 82       	st	Z, r1
    1100:	37 c0       	rjmp	.+110    	; 0x1170 <DIO_u8SetPortDirction+0xfc>
	       		 }
     		break;
			case DIO_U8_PORTB:
			     if(copy_u8PortDirction==DIO_U8_OUTPUT)
    1102:	8b 81       	ldd	r24, Y+3	; 0x03
    1104:	81 30       	cpi	r24, 0x01	; 1
    1106:	41 f4       	brne	.+16     	; 0x1118 <DIO_u8SetPortDirction+0xa4>
			     { 
			     SET_PORT(DIO_U8_DDRB_REG);	
    1108:	e7 e3       	ldi	r30, 0x37	; 55
    110a:	f0 e0       	ldi	r31, 0x00	; 0
    110c:	30 81       	ld	r19, Z
    110e:	e7 e3       	ldi	r30, 0x37	; 55
    1110:	f0 e0       	ldi	r31, 0x00	; 0
    1112:	8f ef       	ldi	r24, 0xFF	; 255
    1114:	80 83       	st	Z, r24
    1116:	2c c0       	rjmp	.+88     	; 0x1170 <DIO_u8SetPortDirction+0xfc>
			     }
			     else
			     {
			      CLE_PORT(DIO_U8_DDRB_REG);
    1118:	e7 e3       	ldi	r30, 0x37	; 55
    111a:	f0 e0       	ldi	r31, 0x00	; 0
    111c:	80 81       	ld	r24, Z
    111e:	e7 e3       	ldi	r30, 0x37	; 55
    1120:	f0 e0       	ldi	r31, 0x00	; 0
    1122:	10 82       	st	Z, r1
    1124:	25 c0       	rjmp	.+74     	; 0x1170 <DIO_u8SetPortDirction+0xfc>
	       		 }
     		break;
			case DIO_U8_PORTC:
			     if(copy_u8PortDirction==DIO_U8_OUTPUT)
    1126:	8b 81       	ldd	r24, Y+3	; 0x03
    1128:	81 30       	cpi	r24, 0x01	; 1
    112a:	41 f4       	brne	.+16     	; 0x113c <DIO_u8SetPortDirction+0xc8>
			     { 
			     SET_PORT(DIO_U8_DDRC_REG);	
    112c:	e4 e3       	ldi	r30, 0x34	; 52
    112e:	f0 e0       	ldi	r31, 0x00	; 0
    1130:	90 81       	ld	r25, Z
    1132:	e4 e3       	ldi	r30, 0x34	; 52
    1134:	f0 e0       	ldi	r31, 0x00	; 0
    1136:	8f ef       	ldi	r24, 0xFF	; 255
    1138:	80 83       	st	Z, r24
    113a:	1a c0       	rjmp	.+52     	; 0x1170 <DIO_u8SetPortDirction+0xfc>
			     }
			     else
			     {
			      CLE_PORT(DIO_U8_DDRC_REG);
    113c:	e4 e3       	ldi	r30, 0x34	; 52
    113e:	f0 e0       	ldi	r31, 0x00	; 0
    1140:	20 81       	ld	r18, Z
    1142:	e4 e3       	ldi	r30, 0x34	; 52
    1144:	f0 e0       	ldi	r31, 0x00	; 0
    1146:	10 82       	st	Z, r1
    1148:	13 c0       	rjmp	.+38     	; 0x1170 <DIO_u8SetPortDirction+0xfc>
	       		 }
     		break;
			case DIO_U8_PORTD:
			     if(copy_u8PortDirction==DIO_U8_OUTPUT)
    114a:	8b 81       	ldd	r24, Y+3	; 0x03
    114c:	81 30       	cpi	r24, 0x01	; 1
    114e:	41 f4       	brne	.+16     	; 0x1160 <DIO_u8SetPortDirction+0xec>
			     { 
			     SET_PORT(DIO_U8_DDRD_REG);	
    1150:	e1 e3       	ldi	r30, 0x31	; 49
    1152:	f0 e0       	ldi	r31, 0x00	; 0
    1154:	30 81       	ld	r19, Z
    1156:	e1 e3       	ldi	r30, 0x31	; 49
    1158:	f0 e0       	ldi	r31, 0x00	; 0
    115a:	8f ef       	ldi	r24, 0xFF	; 255
    115c:	80 83       	st	Z, r24
    115e:	08 c0       	rjmp	.+16     	; 0x1170 <DIO_u8SetPortDirction+0xfc>
			     }
			     else
			     {
			      CLE_PORT(DIO_U8_DDRD_REG);
    1160:	e1 e3       	ldi	r30, 0x31	; 49
    1162:	f0 e0       	ldi	r31, 0x00	; 0
    1164:	80 81       	ld	r24, Z
    1166:	e1 e3       	ldi	r30, 0x31	; 49
    1168:	f0 e0       	ldi	r31, 0x00	; 0
    116a:	10 82       	st	Z, r1
    116c:	01 c0       	rjmp	.+2      	; 0x1170 <DIO_u8SetPortDirction+0xfc>
     		break;
		}
	}
    else
	{
	Local_u8ErorrState =STD_TYPES_NOK;	
    116e:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ErorrState;	
    1170:	89 81       	ldd	r24, Y+1	; 0x01
}
    1172:	2d 96       	adiw	r28, 0x0d	; 13
    1174:	0f b6       	in	r0, 0x3f	; 63
    1176:	f8 94       	cli
    1178:	de bf       	out	0x3e, r29	; 62
    117a:	0f be       	out	0x3f, r0	; 63
    117c:	cd bf       	out	0x3d, r28	; 61
    117e:	cf 91       	pop	r28
    1180:	df 91       	pop	r29
    1182:	08 95       	ret

00001184 <DIO_u8SetPortValue>:

u8 DIO_u8SetPortValue(u8 copy_u8PortId,u8 copy_u8PortValue)
{
    1184:	df 93       	push	r29
    1186:	cf 93       	push	r28
    1188:	cd b7       	in	r28, 0x3d	; 61
    118a:	de b7       	in	r29, 0x3e	; 62
    118c:	2d 97       	sbiw	r28, 0x0d	; 13
    118e:	0f b6       	in	r0, 0x3f	; 63
    1190:	f8 94       	cli
    1192:	de bf       	out	0x3e, r29	; 62
    1194:	0f be       	out	0x3f, r0	; 63
    1196:	cd bf       	out	0x3d, r28	; 61
    1198:	8a 83       	std	Y+2, r24	; 0x02
    119a:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErorrState = STD_TYPES_OK; 	
    119c:	81 e0       	ldi	r24, 0x01	; 1
    119e:	89 83       	std	Y+1, r24	; 0x01
	if((copy_u8PortId<=DIO_U8_PORTD) && (copy_u8PortValue<=DIO_U8_OUTPUT))
    11a0:	8a 81       	ldd	r24, Y+2	; 0x02
    11a2:	84 30       	cpi	r24, 0x04	; 4
    11a4:	08 f0       	brcs	.+2      	; 0x11a8 <DIO_u8SetPortValue+0x24>
    11a6:	6b c0       	rjmp	.+214    	; 0x127e <DIO_u8SetPortValue+0xfa>
    11a8:	8b 81       	ldd	r24, Y+3	; 0x03
    11aa:	82 30       	cpi	r24, 0x02	; 2
    11ac:	08 f0       	brcs	.+2      	; 0x11b0 <DIO_u8SetPortValue+0x2c>
    11ae:	67 c0       	rjmp	.+206    	; 0x127e <DIO_u8SetPortValue+0xfa>
	{
		switch(copy_u8PortId)
    11b0:	8a 81       	ldd	r24, Y+2	; 0x02
    11b2:	28 2f       	mov	r18, r24
    11b4:	30 e0       	ldi	r19, 0x00	; 0
    11b6:	3d 87       	std	Y+13, r19	; 0x0d
    11b8:	2c 87       	std	Y+12, r18	; 0x0c
    11ba:	8c 85       	ldd	r24, Y+12	; 0x0c
    11bc:	9d 85       	ldd	r25, Y+13	; 0x0d
    11be:	81 30       	cpi	r24, 0x01	; 1
    11c0:	91 05       	cpc	r25, r1
    11c2:	39 f1       	breq	.+78     	; 0x1212 <DIO_u8SetPortValue+0x8e>
    11c4:	2c 85       	ldd	r18, Y+12	; 0x0c
    11c6:	3d 85       	ldd	r19, Y+13	; 0x0d
    11c8:	22 30       	cpi	r18, 0x02	; 2
    11ca:	31 05       	cpc	r19, r1
    11cc:	2c f4       	brge	.+10     	; 0x11d8 <DIO_u8SetPortValue+0x54>
    11ce:	8c 85       	ldd	r24, Y+12	; 0x0c
    11d0:	9d 85       	ldd	r25, Y+13	; 0x0d
    11d2:	00 97       	sbiw	r24, 0x00	; 0
    11d4:	61 f0       	breq	.+24     	; 0x11ee <DIO_u8SetPortValue+0x6a>
    11d6:	54 c0       	rjmp	.+168    	; 0x1280 <DIO_u8SetPortValue+0xfc>
    11d8:	2c 85       	ldd	r18, Y+12	; 0x0c
    11da:	3d 85       	ldd	r19, Y+13	; 0x0d
    11dc:	22 30       	cpi	r18, 0x02	; 2
    11de:	31 05       	cpc	r19, r1
    11e0:	51 f1       	breq	.+84     	; 0x1236 <DIO_u8SetPortValue+0xb2>
    11e2:	8c 85       	ldd	r24, Y+12	; 0x0c
    11e4:	9d 85       	ldd	r25, Y+13	; 0x0d
    11e6:	83 30       	cpi	r24, 0x03	; 3
    11e8:	91 05       	cpc	r25, r1
    11ea:	b9 f1       	breq	.+110    	; 0x125a <DIO_u8SetPortValue+0xd6>
    11ec:	49 c0       	rjmp	.+146    	; 0x1280 <DIO_u8SetPortValue+0xfc>
		{
			case DIO_U8_PORTA:
			     if(copy_u8PortValue==DIO_U8_OUTPUT)
    11ee:	8b 81       	ldd	r24, Y+3	; 0x03
    11f0:	81 30       	cpi	r24, 0x01	; 1
    11f2:	41 f4       	brne	.+16     	; 0x1204 <DIO_u8SetPortValue+0x80>
			     {
			     SET_PORT(DIO_U8_PORTA_REG);
    11f4:	eb e3       	ldi	r30, 0x3B	; 59
    11f6:	f0 e0       	ldi	r31, 0x00	; 0
    11f8:	90 81       	ld	r25, Z
    11fa:	eb e3       	ldi	r30, 0x3B	; 59
    11fc:	f0 e0       	ldi	r31, 0x00	; 0
    11fe:	8f ef       	ldi	r24, 0xFF	; 255
    1200:	80 83       	st	Z, r24
    1202:	3e c0       	rjmp	.+124    	; 0x1280 <DIO_u8SetPortValue+0xfc>
			     }
			     else
			     {
			      CLE_PORT(DIO_U8_PORTA_REG);
    1204:	eb e3       	ldi	r30, 0x3B	; 59
    1206:	f0 e0       	ldi	r31, 0x00	; 0
    1208:	20 81       	ld	r18, Z
    120a:	eb e3       	ldi	r30, 0x3B	; 59
    120c:	f0 e0       	ldi	r31, 0x00	; 0
    120e:	10 82       	st	Z, r1
    1210:	37 c0       	rjmp	.+110    	; 0x1280 <DIO_u8SetPortValue+0xfc>
	       		 }
     		break;
			case DIO_U8_PORTB:
			     if(copy_u8PortValue==DIO_U8_OUTPUT)
    1212:	8b 81       	ldd	r24, Y+3	; 0x03
    1214:	81 30       	cpi	r24, 0x01	; 1
    1216:	41 f4       	brne	.+16     	; 0x1228 <DIO_u8SetPortValue+0xa4>
			     { 
			     SET_PORT(DIO_U8_PORTB_REG);
    1218:	e8 e3       	ldi	r30, 0x38	; 56
    121a:	f0 e0       	ldi	r31, 0x00	; 0
    121c:	30 81       	ld	r19, Z
    121e:	e8 e3       	ldi	r30, 0x38	; 56
    1220:	f0 e0       	ldi	r31, 0x00	; 0
    1222:	8f ef       	ldi	r24, 0xFF	; 255
    1224:	80 83       	st	Z, r24
    1226:	2c c0       	rjmp	.+88     	; 0x1280 <DIO_u8SetPortValue+0xfc>
			     }
			     else
			     {
			      CLE_PORT(DIO_U8_PORTB_REG);
    1228:	e8 e3       	ldi	r30, 0x38	; 56
    122a:	f0 e0       	ldi	r31, 0x00	; 0
    122c:	80 81       	ld	r24, Z
    122e:	e8 e3       	ldi	r30, 0x38	; 56
    1230:	f0 e0       	ldi	r31, 0x00	; 0
    1232:	10 82       	st	Z, r1
    1234:	25 c0       	rjmp	.+74     	; 0x1280 <DIO_u8SetPortValue+0xfc>
	       		 }
     		break;
			case DIO_U8_PORTC:
			     if(copy_u8PortValue==DIO_U8_OUTPUT)
    1236:	8b 81       	ldd	r24, Y+3	; 0x03
    1238:	81 30       	cpi	r24, 0x01	; 1
    123a:	41 f4       	brne	.+16     	; 0x124c <DIO_u8SetPortValue+0xc8>
			     { 
			     SET_PORT(DIO_U8_PORTC_REG);
    123c:	e5 e3       	ldi	r30, 0x35	; 53
    123e:	f0 e0       	ldi	r31, 0x00	; 0
    1240:	90 81       	ld	r25, Z
    1242:	e5 e3       	ldi	r30, 0x35	; 53
    1244:	f0 e0       	ldi	r31, 0x00	; 0
    1246:	8f ef       	ldi	r24, 0xFF	; 255
    1248:	80 83       	st	Z, r24
    124a:	1a c0       	rjmp	.+52     	; 0x1280 <DIO_u8SetPortValue+0xfc>
			     }
			     else
			     {
			      CLE_PORT(DIO_U8_PORTC_REG);
    124c:	e5 e3       	ldi	r30, 0x35	; 53
    124e:	f0 e0       	ldi	r31, 0x00	; 0
    1250:	20 81       	ld	r18, Z
    1252:	e5 e3       	ldi	r30, 0x35	; 53
    1254:	f0 e0       	ldi	r31, 0x00	; 0
    1256:	10 82       	st	Z, r1
    1258:	13 c0       	rjmp	.+38     	; 0x1280 <DIO_u8SetPortValue+0xfc>
	       		 }
     		break;
			case DIO_U8_PORTD:
			     if(copy_u8PortValue==DIO_U8_OUTPUT)
    125a:	8b 81       	ldd	r24, Y+3	; 0x03
    125c:	81 30       	cpi	r24, 0x01	; 1
    125e:	41 f4       	brne	.+16     	; 0x1270 <DIO_u8SetPortValue+0xec>
			     { 
			     SET_PORT(DIO_U8_PORTD_REG);
    1260:	e2 e3       	ldi	r30, 0x32	; 50
    1262:	f0 e0       	ldi	r31, 0x00	; 0
    1264:	30 81       	ld	r19, Z
    1266:	e2 e3       	ldi	r30, 0x32	; 50
    1268:	f0 e0       	ldi	r31, 0x00	; 0
    126a:	8f ef       	ldi	r24, 0xFF	; 255
    126c:	80 83       	st	Z, r24
    126e:	08 c0       	rjmp	.+16     	; 0x1280 <DIO_u8SetPortValue+0xfc>
			     }
			     else
			     {
			      CLE_PORT(DIO_U8_PORTD_REG);
    1270:	e2 e3       	ldi	r30, 0x32	; 50
    1272:	f0 e0       	ldi	r31, 0x00	; 0
    1274:	80 81       	ld	r24, Z
    1276:	e2 e3       	ldi	r30, 0x32	; 50
    1278:	f0 e0       	ldi	r31, 0x00	; 0
    127a:	10 82       	st	Z, r1
    127c:	01 c0       	rjmp	.+2      	; 0x1280 <DIO_u8SetPortValue+0xfc>
     		break;
		}
	}
    else
	{
	Local_u8ErorrState =STD_TYPES_NOK;	
    127e:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ErorrState;
    1280:	89 81       	ldd	r24, Y+1	; 0x01
}
    1282:	2d 96       	adiw	r28, 0x0d	; 13
    1284:	0f b6       	in	r0, 0x3f	; 63
    1286:	f8 94       	cli
    1288:	de bf       	out	0x3e, r29	; 62
    128a:	0f be       	out	0x3f, r0	; 63
    128c:	cd bf       	out	0x3d, r28	; 61
    128e:	cf 91       	pop	r28
    1290:	df 91       	pop	r29
    1292:	08 95       	ret

00001294 <DIO_u8GetPortValue>:

u8 DIO_u8GetPortValue(u8 copy_u8PortId, u8 *copy_pu8PortValue)
{
    1294:	df 93       	push	r29
    1296:	cf 93       	push	r28
    1298:	00 d0       	rcall	.+0      	; 0x129a <DIO_u8GetPortValue+0x6>
    129a:	00 d0       	rcall	.+0      	; 0x129c <DIO_u8GetPortValue+0x8>
    129c:	00 d0       	rcall	.+0      	; 0x129e <DIO_u8GetPortValue+0xa>
    129e:	cd b7       	in	r28, 0x3d	; 61
    12a0:	de b7       	in	r29, 0x3e	; 62
    12a2:	8a 83       	std	Y+2, r24	; 0x02
    12a4:	7c 83       	std	Y+4, r23	; 0x04
    12a6:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErorrState = STD_TYPES_OK; 	
    12a8:	81 e0       	ldi	r24, 0x01	; 1
    12aa:	89 83       	std	Y+1, r24	; 0x01
	if(copy_u8PortId<=DIO_U8_PORTD)
    12ac:	8a 81       	ldd	r24, Y+2	; 0x02
    12ae:	84 30       	cpi	r24, 0x04	; 4
    12b0:	d8 f5       	brcc	.+118    	; 0x1328 <DIO_u8GetPortValue+0x94>
	{
		switch(copy_u8PortId)
    12b2:	8a 81       	ldd	r24, Y+2	; 0x02
    12b4:	28 2f       	mov	r18, r24
    12b6:	30 e0       	ldi	r19, 0x00	; 0
    12b8:	3e 83       	std	Y+6, r19	; 0x06
    12ba:	2d 83       	std	Y+5, r18	; 0x05
    12bc:	8d 81       	ldd	r24, Y+5	; 0x05
    12be:	9e 81       	ldd	r25, Y+6	; 0x06
    12c0:	81 30       	cpi	r24, 0x01	; 1
    12c2:	91 05       	cpc	r25, r1
    12c4:	e1 f0       	breq	.+56     	; 0x12fe <DIO_u8GetPortValue+0x6a>
    12c6:	2d 81       	ldd	r18, Y+5	; 0x05
    12c8:	3e 81       	ldd	r19, Y+6	; 0x06
    12ca:	22 30       	cpi	r18, 0x02	; 2
    12cc:	31 05       	cpc	r19, r1
    12ce:	2c f4       	brge	.+10     	; 0x12da <DIO_u8GetPortValue+0x46>
    12d0:	8d 81       	ldd	r24, Y+5	; 0x05
    12d2:	9e 81       	ldd	r25, Y+6	; 0x06
    12d4:	00 97       	sbiw	r24, 0x00	; 0
    12d6:	61 f0       	breq	.+24     	; 0x12f0 <DIO_u8GetPortValue+0x5c>
    12d8:	28 c0       	rjmp	.+80     	; 0x132a <DIO_u8GetPortValue+0x96>
    12da:	2d 81       	ldd	r18, Y+5	; 0x05
    12dc:	3e 81       	ldd	r19, Y+6	; 0x06
    12de:	22 30       	cpi	r18, 0x02	; 2
    12e0:	31 05       	cpc	r19, r1
    12e2:	a1 f0       	breq	.+40     	; 0x130c <DIO_u8GetPortValue+0x78>
    12e4:	8d 81       	ldd	r24, Y+5	; 0x05
    12e6:	9e 81       	ldd	r25, Y+6	; 0x06
    12e8:	83 30       	cpi	r24, 0x03	; 3
    12ea:	91 05       	cpc	r25, r1
    12ec:	b1 f0       	breq	.+44     	; 0x131a <DIO_u8GetPortValue+0x86>
    12ee:	1d c0       	rjmp	.+58     	; 0x132a <DIO_u8GetPortValue+0x96>
		{
			case DIO_U8_PORTA:
			   
			   *copy_pu8PortValue = GET_PORT(DIO_U8_PORTA_REG);
    12f0:	eb e3       	ldi	r30, 0x3B	; 59
    12f2:	f0 e0       	ldi	r31, 0x00	; 0
    12f4:	80 81       	ld	r24, Z
    12f6:	eb 81       	ldd	r30, Y+3	; 0x03
    12f8:	fc 81       	ldd	r31, Y+4	; 0x04
    12fa:	80 83       	st	Z, r24
    12fc:	16 c0       	rjmp	.+44     	; 0x132a <DIO_u8GetPortValue+0x96>
			    
     		break;
			case DIO_U8_PORTB:
			    
				*copy_pu8PortValue = GET_PORT(DIO_U8_PORTB_REG);
    12fe:	e8 e3       	ldi	r30, 0x38	; 56
    1300:	f0 e0       	ldi	r31, 0x00	; 0
    1302:	80 81       	ld	r24, Z
    1304:	eb 81       	ldd	r30, Y+3	; 0x03
    1306:	fc 81       	ldd	r31, Y+4	; 0x04
    1308:	80 83       	st	Z, r24
    130a:	0f c0       	rjmp	.+30     	; 0x132a <DIO_u8GetPortValue+0x96>
			
     		break;
			case DIO_U8_PORTC:
			     
				*copy_pu8PortValue = GET_PORT(DIO_U8_PORTC_REG);
    130c:	e5 e3       	ldi	r30, 0x35	; 53
    130e:	f0 e0       	ldi	r31, 0x00	; 0
    1310:	80 81       	ld	r24, Z
    1312:	eb 81       	ldd	r30, Y+3	; 0x03
    1314:	fc 81       	ldd	r31, Y+4	; 0x04
    1316:	80 83       	st	Z, r24
    1318:	08 c0       	rjmp	.+16     	; 0x132a <DIO_u8GetPortValue+0x96>
			   
     		break;
			case DIO_U8_PORTD:
			 
				*copy_pu8PortValue = GET_PORT(DIO_U8_PORTD_REG);
    131a:	e2 e3       	ldi	r30, 0x32	; 50
    131c:	f0 e0       	ldi	r31, 0x00	; 0
    131e:	80 81       	ld	r24, Z
    1320:	eb 81       	ldd	r30, Y+3	; 0x03
    1322:	fc 81       	ldd	r31, Y+4	; 0x04
    1324:	80 83       	st	Z, r24
    1326:	01 c0       	rjmp	.+2      	; 0x132a <DIO_u8GetPortValue+0x96>
     		break;
		}
	}
    else
	{
	Local_u8ErorrState =STD_TYPES_NOK;	
    1328:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ErorrState;
    132a:	89 81       	ldd	r24, Y+1	; 0x01
	
}
    132c:	26 96       	adiw	r28, 0x06	; 6
    132e:	0f b6       	in	r0, 0x3f	; 63
    1330:	f8 94       	cli
    1332:	de bf       	out	0x3e, r29	; 62
    1334:	0f be       	out	0x3f, r0	; 63
    1336:	cd bf       	out	0x3d, r28	; 61
    1338:	cf 91       	pop	r28
    133a:	df 91       	pop	r29
    133c:	08 95       	ret

0000133e <DIO_u8AnalogPort>:
u8 DIO_u8AnalogPort(u8 copy_u8PortId,u8 copy_u8PortValue)
{
    133e:	df 93       	push	r29
    1340:	cf 93       	push	r28
    1342:	00 d0       	rcall	.+0      	; 0x1344 <DIO_u8AnalogPort+0x6>
    1344:	00 d0       	rcall	.+0      	; 0x1346 <DIO_u8AnalogPort+0x8>
    1346:	0f 92       	push	r0
    1348:	cd b7       	in	r28, 0x3d	; 61
    134a:	de b7       	in	r29, 0x3e	; 62
    134c:	8a 83       	std	Y+2, r24	; 0x02
    134e:	6b 83       	std	Y+3, r22	; 0x03
    u8	Local_u8ErorrState =STD_TYPES_OK;
    1350:	81 e0       	ldi	r24, 0x01	; 1
    1352:	89 83       	std	Y+1, r24	; 0x01
	if((copy_u8PortId<=DIO_U8_PORTD)  &&  (copy_u8PortValue<= 0xff))
    1354:	8a 81       	ldd	r24, Y+2	; 0x02
    1356:	84 30       	cpi	r24, 0x04	; 4
    1358:	98 f5       	brcc	.+102    	; 0x13c0 <DIO_u8AnalogPort+0x82>
	{
		switch(copy_u8PortId)
    135a:	8a 81       	ldd	r24, Y+2	; 0x02
    135c:	28 2f       	mov	r18, r24
    135e:	30 e0       	ldi	r19, 0x00	; 0
    1360:	3d 83       	std	Y+5, r19	; 0x05
    1362:	2c 83       	std	Y+4, r18	; 0x04
    1364:	8c 81       	ldd	r24, Y+4	; 0x04
    1366:	9d 81       	ldd	r25, Y+5	; 0x05
    1368:	81 30       	cpi	r24, 0x01	; 1
    136a:	91 05       	cpc	r25, r1
    136c:	d1 f0       	breq	.+52     	; 0x13a2 <DIO_u8AnalogPort+0x64>
    136e:	2c 81       	ldd	r18, Y+4	; 0x04
    1370:	3d 81       	ldd	r19, Y+5	; 0x05
    1372:	22 30       	cpi	r18, 0x02	; 2
    1374:	31 05       	cpc	r19, r1
    1376:	2c f4       	brge	.+10     	; 0x1382 <DIO_u8AnalogPort+0x44>
    1378:	8c 81       	ldd	r24, Y+4	; 0x04
    137a:	9d 81       	ldd	r25, Y+5	; 0x05
    137c:	00 97       	sbiw	r24, 0x00	; 0
    137e:	61 f0       	breq	.+24     	; 0x1398 <DIO_u8AnalogPort+0x5a>
    1380:	20 c0       	rjmp	.+64     	; 0x13c2 <DIO_u8AnalogPort+0x84>
    1382:	2c 81       	ldd	r18, Y+4	; 0x04
    1384:	3d 81       	ldd	r19, Y+5	; 0x05
    1386:	22 30       	cpi	r18, 0x02	; 2
    1388:	31 05       	cpc	r19, r1
    138a:	81 f0       	breq	.+32     	; 0x13ac <DIO_u8AnalogPort+0x6e>
    138c:	8c 81       	ldd	r24, Y+4	; 0x04
    138e:	9d 81       	ldd	r25, Y+5	; 0x05
    1390:	83 30       	cpi	r24, 0x03	; 3
    1392:	91 05       	cpc	r25, r1
    1394:	81 f0       	breq	.+32     	; 0x13b6 <DIO_u8AnalogPort+0x78>
    1396:	15 c0       	rjmp	.+42     	; 0x13c2 <DIO_u8AnalogPort+0x84>
		{
		case DIO_U8_PORTA:

			DIO_U8_PORTA_REG = copy_u8PortValue;
    1398:	eb e3       	ldi	r30, 0x3B	; 59
    139a:	f0 e0       	ldi	r31, 0x00	; 0
    139c:	8b 81       	ldd	r24, Y+3	; 0x03
    139e:	80 83       	st	Z, r24
    13a0:	10 c0       	rjmp	.+32     	; 0x13c2 <DIO_u8AnalogPort+0x84>
		break;
		case DIO_U8_PORTB:

			 DIO_U8_PORTB_REG = copy_u8PortValue;
    13a2:	e8 e3       	ldi	r30, 0x38	; 56
    13a4:	f0 e0       	ldi	r31, 0x00	; 0
    13a6:	8b 81       	ldd	r24, Y+3	; 0x03
    13a8:	80 83       	st	Z, r24
    13aa:	0b c0       	rjmp	.+22     	; 0x13c2 <DIO_u8AnalogPort+0x84>
		break;
		case DIO_U8_PORTC:

			DIO_U8_PORTC_REG = copy_u8PortValue;
    13ac:	e5 e3       	ldi	r30, 0x35	; 53
    13ae:	f0 e0       	ldi	r31, 0x00	; 0
    13b0:	8b 81       	ldd	r24, Y+3	; 0x03
    13b2:	80 83       	st	Z, r24
    13b4:	06 c0       	rjmp	.+12     	; 0x13c2 <DIO_u8AnalogPort+0x84>
		break;
		case DIO_U8_PORTD:

			 DIO_U8_PORTD_REG = copy_u8PortValue;
    13b6:	e2 e3       	ldi	r30, 0x32	; 50
    13b8:	f0 e0       	ldi	r31, 0x00	; 0
    13ba:	8b 81       	ldd	r24, Y+3	; 0x03
    13bc:	80 83       	st	Z, r24
    13be:	01 c0       	rjmp	.+2      	; 0x13c2 <DIO_u8AnalogPort+0x84>
		break;
		}
	}
	else
	{
		Local_u8ErorrState =STD_TYPES_NOK;
    13c0:	19 82       	std	Y+1, r1	; 0x01
	}
		return Local_u8ErorrState;
    13c2:	89 81       	ldd	r24, Y+1	; 0x01
}
    13c4:	0f 90       	pop	r0
    13c6:	0f 90       	pop	r0
    13c8:	0f 90       	pop	r0
    13ca:	0f 90       	pop	r0
    13cc:	0f 90       	pop	r0
    13ce:	cf 91       	pop	r28
    13d0:	df 91       	pop	r29
    13d2:	08 95       	ret

000013d4 <STEPPER_MOTOR_voiddrive>:
#include  "STEPPER_MOTOR_private.h"
#include  "STEPPER_MOTOR_config.h"
#include  "STEPPER_MOTOR_interfac.h"

void STEPPER_MOTOR_voiddrive(u16 copy_u16degree,u8 copy_u8direction)
{
    13d4:	0f 93       	push	r16
    13d6:	1f 93       	push	r17
    13d8:	df 93       	push	r29
    13da:	cf 93       	push	r28
    13dc:	cd b7       	in	r28, 0x3d	; 61
    13de:	de b7       	in	r29, 0x3e	; 62
    13e0:	c7 57       	subi	r28, 0x77	; 119
    13e2:	d0 40       	sbci	r29, 0x00	; 0
    13e4:	0f b6       	in	r0, 0x3f	; 63
    13e6:	f8 94       	cli
    13e8:	de bf       	out	0x3e, r29	; 62
    13ea:	0f be       	out	0x3f, r0	; 63
    13ec:	cd bf       	out	0x3d, r28	; 61
    13ee:	fe 01       	movw	r30, r28
    13f0:	eb 58       	subi	r30, 0x8B	; 139
    13f2:	ff 4f       	sbci	r31, 0xFF	; 255
    13f4:	91 83       	std	Z+1, r25	; 0x01
    13f6:	80 83       	st	Z, r24
    13f8:	fe 01       	movw	r30, r28
    13fa:	e9 58       	subi	r30, 0x89	; 137
    13fc:	ff 4f       	sbci	r31, 0xFF	; 255
    13fe:	60 83       	st	Z, r22
  u8 local_u8nof_iteration,i;
  u32 local_u8nof_step;
  local_u8nof_step =  (copy_u16degree * MAX_ITERATION)/(MAX_ITERATION);
    1400:	fe 01       	movw	r30, r28
    1402:	eb 58       	subi	r30, 0x8B	; 139
    1404:	ff 4f       	sbci	r31, 0xFF	; 255
    1406:	20 81       	ld	r18, Z
    1408:	31 81       	ldd	r19, Z+1	; 0x01
    140a:	82 e0       	ldi	r24, 0x02	; 2
    140c:	98 e0       	ldi	r25, 0x08	; 8
    140e:	ac 01       	movw	r20, r24
    1410:	24 9f       	mul	r18, r20
    1412:	c0 01       	movw	r24, r0
    1414:	25 9f       	mul	r18, r21
    1416:	90 0d       	add	r25, r0
    1418:	34 9f       	mul	r19, r20
    141a:	90 0d       	add	r25, r0
    141c:	11 24       	eor	r1, r1
    141e:	fe 01       	movw	r30, r28
    1420:	ef 58       	subi	r30, 0x8F	; 143
    1422:	ff 4f       	sbci	r31, 0xFF	; 255
    1424:	22 e0       	ldi	r18, 0x02	; 2
    1426:	38 e0       	ldi	r19, 0x08	; 8
    1428:	b9 01       	movw	r22, r18
    142a:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__udivmodhi4>
    142e:	cb 01       	movw	r24, r22
    1430:	91 83       	std	Z+1, r25	; 0x01
    1432:	80 83       	st	Z, r24
 
  local_u8nof_iteration = local_u8nof_step/4;
    1434:	fe 01       	movw	r30, r28
    1436:	ef 58       	subi	r30, 0x8F	; 143
    1438:	ff 4f       	sbci	r31, 0xFF	; 255
    143a:	80 81       	ld	r24, Z
    143c:	91 81       	ldd	r25, Z+1	; 0x01
    143e:	96 95       	lsr	r25
    1440:	87 95       	ror	r24
    1442:	96 95       	lsr	r25
    1444:	87 95       	ror	r24
    1446:	fe 01       	movw	r30, r28
    1448:	ec 58       	subi	r30, 0x8C	; 140
    144a:	ff 4f       	sbci	r31, 0xFF	; 255
    144c:	80 83       	st	Z, r24
  if(STEPER_MOTOR_PIN_COM == VCC && copy_u8direction == CLOCK_WISE)
    144e:	fe 01       	movw	r30, r28
    1450:	e9 58       	subi	r30, 0x89	; 137
    1452:	ff 4f       	sbci	r31, 0xFF	; 255
    1454:	80 81       	ld	r24, Z
    1456:	81 30       	cpi	r24, 0x01	; 1
    1458:	09 f0       	breq	.+2      	; 0x145c <STEPPER_MOTOR_voiddrive+0x88>
    145a:	08 c3       	rjmp	.+1552   	; 0x1a6c <STEPPER_MOTOR_voiddrive+0x698>
  {

	 for(i=0;i<local_u8nof_iteration;i++)
    145c:	fe 01       	movw	r30, r28
    145e:	ed 58       	subi	r30, 0x8D	; 141
    1460:	ff 4f       	sbci	r31, 0xFF	; 255
    1462:	10 82       	st	Z, r1
    1464:	f7 c2       	rjmp	.+1518   	; 0x1a54 <STEPPER_MOTOR_voiddrive+0x680>
	 {		 
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR1,STEPER_MOTOR_PIN_TR1,DIO_U8_LOW);
    1466:	82 e0       	ldi	r24, 0x02	; 2
    1468:	60 e0       	ldi	r22, 0x00	; 0
    146a:	40 e0       	ldi	r20, 0x00	; 0
    146c:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR2,STEPER_MOTOR_PIN_TR2,DIO_U8_HIGH); 
    1470:	82 e0       	ldi	r24, 0x02	; 2
    1472:	61 e0       	ldi	r22, 0x01	; 1
    1474:	41 e0       	ldi	r20, 0x01	; 1
    1476:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR3,STEPER_MOTOR_PIN_TR3,DIO_U8_HIGH); 
    147a:	82 e0       	ldi	r24, 0x02	; 2
    147c:	62 e0       	ldi	r22, 0x02	; 2
    147e:	41 e0       	ldi	r20, 0x01	; 1
    1480:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR4,STEPER_MOTOR_PIN_TR4,DIO_U8_HIGH); 
    1484:	82 e0       	ldi	r24, 0x02	; 2
    1486:	63 e0       	ldi	r22, 0x03	; 3
    1488:	41 e0       	ldi	r20, 0x01	; 1
    148a:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
    148e:	fe 01       	movw	r30, r28
    1490:	e3 59       	subi	r30, 0x93	; 147
    1492:	ff 4f       	sbci	r31, 0xFF	; 255
    1494:	80 e0       	ldi	r24, 0x00	; 0
    1496:	90 e0       	ldi	r25, 0x00	; 0
    1498:	a0 e2       	ldi	r26, 0x20	; 32
    149a:	b1 e4       	ldi	r27, 0x41	; 65
    149c:	80 83       	st	Z, r24
    149e:	91 83       	std	Z+1, r25	; 0x01
    14a0:	a2 83       	std	Z+2, r26	; 0x02
    14a2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    14a4:	8e 01       	movw	r16, r28
    14a6:	07 59       	subi	r16, 0x97	; 151
    14a8:	1f 4f       	sbci	r17, 0xFF	; 255
    14aa:	fe 01       	movw	r30, r28
    14ac:	e3 59       	subi	r30, 0x93	; 147
    14ae:	ff 4f       	sbci	r31, 0xFF	; 255
    14b0:	60 81       	ld	r22, Z
    14b2:	71 81       	ldd	r23, Z+1	; 0x01
    14b4:	82 81       	ldd	r24, Z+2	; 0x02
    14b6:	93 81       	ldd	r25, Z+3	; 0x03
    14b8:	20 e0       	ldi	r18, 0x00	; 0
    14ba:	30 e0       	ldi	r19, 0x00	; 0
    14bc:	4a ef       	ldi	r20, 0xFA	; 250
    14be:	54 e4       	ldi	r21, 0x44	; 68
    14c0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    14c4:	dc 01       	movw	r26, r24
    14c6:	cb 01       	movw	r24, r22
    14c8:	f8 01       	movw	r30, r16
    14ca:	80 83       	st	Z, r24
    14cc:	91 83       	std	Z+1, r25	; 0x01
    14ce:	a2 83       	std	Z+2, r26	; 0x02
    14d0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    14d2:	fe 01       	movw	r30, r28
    14d4:	e7 59       	subi	r30, 0x97	; 151
    14d6:	ff 4f       	sbci	r31, 0xFF	; 255
    14d8:	60 81       	ld	r22, Z
    14da:	71 81       	ldd	r23, Z+1	; 0x01
    14dc:	82 81       	ldd	r24, Z+2	; 0x02
    14de:	93 81       	ldd	r25, Z+3	; 0x03
    14e0:	20 e0       	ldi	r18, 0x00	; 0
    14e2:	30 e0       	ldi	r19, 0x00	; 0
    14e4:	40 e8       	ldi	r20, 0x80	; 128
    14e6:	5f e3       	ldi	r21, 0x3F	; 63
    14e8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    14ec:	88 23       	and	r24, r24
    14ee:	44 f4       	brge	.+16     	; 0x1500 <STEPPER_MOTOR_voiddrive+0x12c>
		__ticks = 1;
    14f0:	fe 01       	movw	r30, r28
    14f2:	e9 59       	subi	r30, 0x99	; 153
    14f4:	ff 4f       	sbci	r31, 0xFF	; 255
    14f6:	81 e0       	ldi	r24, 0x01	; 1
    14f8:	90 e0       	ldi	r25, 0x00	; 0
    14fa:	91 83       	std	Z+1, r25	; 0x01
    14fc:	80 83       	st	Z, r24
    14fe:	64 c0       	rjmp	.+200    	; 0x15c8 <STEPPER_MOTOR_voiddrive+0x1f4>
	else if (__tmp > 65535)
    1500:	fe 01       	movw	r30, r28
    1502:	e7 59       	subi	r30, 0x97	; 151
    1504:	ff 4f       	sbci	r31, 0xFF	; 255
    1506:	60 81       	ld	r22, Z
    1508:	71 81       	ldd	r23, Z+1	; 0x01
    150a:	82 81       	ldd	r24, Z+2	; 0x02
    150c:	93 81       	ldd	r25, Z+3	; 0x03
    150e:	20 e0       	ldi	r18, 0x00	; 0
    1510:	3f ef       	ldi	r19, 0xFF	; 255
    1512:	4f e7       	ldi	r20, 0x7F	; 127
    1514:	57 e4       	ldi	r21, 0x47	; 71
    1516:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    151a:	18 16       	cp	r1, r24
    151c:	0c f0       	brlt	.+2      	; 0x1520 <STEPPER_MOTOR_voiddrive+0x14c>
    151e:	43 c0       	rjmp	.+134    	; 0x15a6 <STEPPER_MOTOR_voiddrive+0x1d2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1520:	fe 01       	movw	r30, r28
    1522:	e3 59       	subi	r30, 0x93	; 147
    1524:	ff 4f       	sbci	r31, 0xFF	; 255
    1526:	60 81       	ld	r22, Z
    1528:	71 81       	ldd	r23, Z+1	; 0x01
    152a:	82 81       	ldd	r24, Z+2	; 0x02
    152c:	93 81       	ldd	r25, Z+3	; 0x03
    152e:	20 e0       	ldi	r18, 0x00	; 0
    1530:	30 e0       	ldi	r19, 0x00	; 0
    1532:	40 e2       	ldi	r20, 0x20	; 32
    1534:	51 e4       	ldi	r21, 0x41	; 65
    1536:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    153a:	dc 01       	movw	r26, r24
    153c:	cb 01       	movw	r24, r22
    153e:	8e 01       	movw	r16, r28
    1540:	09 59       	subi	r16, 0x99	; 153
    1542:	1f 4f       	sbci	r17, 0xFF	; 255
    1544:	bc 01       	movw	r22, r24
    1546:	cd 01       	movw	r24, r26
    1548:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    154c:	dc 01       	movw	r26, r24
    154e:	cb 01       	movw	r24, r22
    1550:	f8 01       	movw	r30, r16
    1552:	91 83       	std	Z+1, r25	; 0x01
    1554:	80 83       	st	Z, r24
    1556:	1f c0       	rjmp	.+62     	; 0x1596 <STEPPER_MOTOR_voiddrive+0x1c2>
    1558:	fe 01       	movw	r30, r28
    155a:	eb 59       	subi	r30, 0x9B	; 155
    155c:	ff 4f       	sbci	r31, 0xFF	; 255
    155e:	88 ec       	ldi	r24, 0xC8	; 200
    1560:	90 e0       	ldi	r25, 0x00	; 0
    1562:	91 83       	std	Z+1, r25	; 0x01
    1564:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1566:	fe 01       	movw	r30, r28
    1568:	eb 59       	subi	r30, 0x9B	; 155
    156a:	ff 4f       	sbci	r31, 0xFF	; 255
    156c:	80 81       	ld	r24, Z
    156e:	91 81       	ldd	r25, Z+1	; 0x01
    1570:	01 97       	sbiw	r24, 0x01	; 1
    1572:	f1 f7       	brne	.-4      	; 0x1570 <STEPPER_MOTOR_voiddrive+0x19c>
    1574:	fe 01       	movw	r30, r28
    1576:	eb 59       	subi	r30, 0x9B	; 155
    1578:	ff 4f       	sbci	r31, 0xFF	; 255
    157a:	91 83       	std	Z+1, r25	; 0x01
    157c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    157e:	de 01       	movw	r26, r28
    1580:	a9 59       	subi	r26, 0x99	; 153
    1582:	bf 4f       	sbci	r27, 0xFF	; 255
    1584:	fe 01       	movw	r30, r28
    1586:	e9 59       	subi	r30, 0x99	; 153
    1588:	ff 4f       	sbci	r31, 0xFF	; 255
    158a:	80 81       	ld	r24, Z
    158c:	91 81       	ldd	r25, Z+1	; 0x01
    158e:	01 97       	sbiw	r24, 0x01	; 1
    1590:	11 96       	adiw	r26, 0x01	; 1
    1592:	9c 93       	st	X, r25
    1594:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1596:	fe 01       	movw	r30, r28
    1598:	e9 59       	subi	r30, 0x99	; 153
    159a:	ff 4f       	sbci	r31, 0xFF	; 255
    159c:	80 81       	ld	r24, Z
    159e:	91 81       	ldd	r25, Z+1	; 0x01
    15a0:	00 97       	sbiw	r24, 0x00	; 0
    15a2:	d1 f6       	brne	.-76     	; 0x1558 <STEPPER_MOTOR_voiddrive+0x184>
    15a4:	27 c0       	rjmp	.+78     	; 0x15f4 <STEPPER_MOTOR_voiddrive+0x220>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15a6:	8e 01       	movw	r16, r28
    15a8:	09 59       	subi	r16, 0x99	; 153
    15aa:	1f 4f       	sbci	r17, 0xFF	; 255
    15ac:	fe 01       	movw	r30, r28
    15ae:	e7 59       	subi	r30, 0x97	; 151
    15b0:	ff 4f       	sbci	r31, 0xFF	; 255
    15b2:	60 81       	ld	r22, Z
    15b4:	71 81       	ldd	r23, Z+1	; 0x01
    15b6:	82 81       	ldd	r24, Z+2	; 0x02
    15b8:	93 81       	ldd	r25, Z+3	; 0x03
    15ba:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    15be:	dc 01       	movw	r26, r24
    15c0:	cb 01       	movw	r24, r22
    15c2:	f8 01       	movw	r30, r16
    15c4:	91 83       	std	Z+1, r25	; 0x01
    15c6:	80 83       	st	Z, r24
    15c8:	de 01       	movw	r26, r28
    15ca:	ad 59       	subi	r26, 0x9D	; 157
    15cc:	bf 4f       	sbci	r27, 0xFF	; 255
    15ce:	fe 01       	movw	r30, r28
    15d0:	e9 59       	subi	r30, 0x99	; 153
    15d2:	ff 4f       	sbci	r31, 0xFF	; 255
    15d4:	80 81       	ld	r24, Z
    15d6:	91 81       	ldd	r25, Z+1	; 0x01
    15d8:	8d 93       	st	X+, r24
    15da:	9c 93       	st	X, r25
    15dc:	fe 01       	movw	r30, r28
    15de:	ed 59       	subi	r30, 0x9D	; 157
    15e0:	ff 4f       	sbci	r31, 0xFF	; 255
    15e2:	80 81       	ld	r24, Z
    15e4:	91 81       	ldd	r25, Z+1	; 0x01
    15e6:	01 97       	sbiw	r24, 0x01	; 1
    15e8:	f1 f7       	brne	.-4      	; 0x15e6 <STEPPER_MOTOR_voiddrive+0x212>
    15ea:	fe 01       	movw	r30, r28
    15ec:	ed 59       	subi	r30, 0x9D	; 157
    15ee:	ff 4f       	sbci	r31, 0xFF	; 255
    15f0:	91 83       	std	Z+1, r25	; 0x01
    15f2:	80 83       	st	Z, r24
	_delay_ms(10);
	
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR1,STEPER_MOTOR_PIN_TR1,DIO_U8_HIGH);
    15f4:	82 e0       	ldi	r24, 0x02	; 2
    15f6:	60 e0       	ldi	r22, 0x00	; 0
    15f8:	41 e0       	ldi	r20, 0x01	; 1
    15fa:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR2,STEPER_MOTOR_PIN_TR2,DIO_U8_LOW); 
    15fe:	82 e0       	ldi	r24, 0x02	; 2
    1600:	61 e0       	ldi	r22, 0x01	; 1
    1602:	40 e0       	ldi	r20, 0x00	; 0
    1604:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR3,STEPER_MOTOR_PIN_TR3,DIO_U8_HIGH); 
    1608:	82 e0       	ldi	r24, 0x02	; 2
    160a:	62 e0       	ldi	r22, 0x02	; 2
    160c:	41 e0       	ldi	r20, 0x01	; 1
    160e:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR4,STEPER_MOTOR_PIN_TR4,DIO_U8_HIGH);
    1612:	82 e0       	ldi	r24, 0x02	; 2
    1614:	63 e0       	ldi	r22, 0x03	; 3
    1616:	41 e0       	ldi	r20, 0x01	; 1
    1618:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
    161c:	fe 01       	movw	r30, r28
    161e:	e1 5a       	subi	r30, 0xA1	; 161
    1620:	ff 4f       	sbci	r31, 0xFF	; 255
    1622:	80 e0       	ldi	r24, 0x00	; 0
    1624:	90 e0       	ldi	r25, 0x00	; 0
    1626:	a0 e2       	ldi	r26, 0x20	; 32
    1628:	b1 e4       	ldi	r27, 0x41	; 65
    162a:	80 83       	st	Z, r24
    162c:	91 83       	std	Z+1, r25	; 0x01
    162e:	a2 83       	std	Z+2, r26	; 0x02
    1630:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1632:	8e 01       	movw	r16, r28
    1634:	05 5a       	subi	r16, 0xA5	; 165
    1636:	1f 4f       	sbci	r17, 0xFF	; 255
    1638:	fe 01       	movw	r30, r28
    163a:	e1 5a       	subi	r30, 0xA1	; 161
    163c:	ff 4f       	sbci	r31, 0xFF	; 255
    163e:	60 81       	ld	r22, Z
    1640:	71 81       	ldd	r23, Z+1	; 0x01
    1642:	82 81       	ldd	r24, Z+2	; 0x02
    1644:	93 81       	ldd	r25, Z+3	; 0x03
    1646:	20 e0       	ldi	r18, 0x00	; 0
    1648:	30 e0       	ldi	r19, 0x00	; 0
    164a:	4a ef       	ldi	r20, 0xFA	; 250
    164c:	54 e4       	ldi	r21, 0x44	; 68
    164e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1652:	dc 01       	movw	r26, r24
    1654:	cb 01       	movw	r24, r22
    1656:	f8 01       	movw	r30, r16
    1658:	80 83       	st	Z, r24
    165a:	91 83       	std	Z+1, r25	; 0x01
    165c:	a2 83       	std	Z+2, r26	; 0x02
    165e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1660:	fe 01       	movw	r30, r28
    1662:	e5 5a       	subi	r30, 0xA5	; 165
    1664:	ff 4f       	sbci	r31, 0xFF	; 255
    1666:	60 81       	ld	r22, Z
    1668:	71 81       	ldd	r23, Z+1	; 0x01
    166a:	82 81       	ldd	r24, Z+2	; 0x02
    166c:	93 81       	ldd	r25, Z+3	; 0x03
    166e:	20 e0       	ldi	r18, 0x00	; 0
    1670:	30 e0       	ldi	r19, 0x00	; 0
    1672:	40 e8       	ldi	r20, 0x80	; 128
    1674:	5f e3       	ldi	r21, 0x3F	; 63
    1676:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    167a:	88 23       	and	r24, r24
    167c:	44 f4       	brge	.+16     	; 0x168e <STEPPER_MOTOR_voiddrive+0x2ba>
		__ticks = 1;
    167e:	fe 01       	movw	r30, r28
    1680:	e7 5a       	subi	r30, 0xA7	; 167
    1682:	ff 4f       	sbci	r31, 0xFF	; 255
    1684:	81 e0       	ldi	r24, 0x01	; 1
    1686:	90 e0       	ldi	r25, 0x00	; 0
    1688:	91 83       	std	Z+1, r25	; 0x01
    168a:	80 83       	st	Z, r24
    168c:	64 c0       	rjmp	.+200    	; 0x1756 <STEPPER_MOTOR_voiddrive+0x382>
	else if (__tmp > 65535)
    168e:	fe 01       	movw	r30, r28
    1690:	e5 5a       	subi	r30, 0xA5	; 165
    1692:	ff 4f       	sbci	r31, 0xFF	; 255
    1694:	60 81       	ld	r22, Z
    1696:	71 81       	ldd	r23, Z+1	; 0x01
    1698:	82 81       	ldd	r24, Z+2	; 0x02
    169a:	93 81       	ldd	r25, Z+3	; 0x03
    169c:	20 e0       	ldi	r18, 0x00	; 0
    169e:	3f ef       	ldi	r19, 0xFF	; 255
    16a0:	4f e7       	ldi	r20, 0x7F	; 127
    16a2:	57 e4       	ldi	r21, 0x47	; 71
    16a4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    16a8:	18 16       	cp	r1, r24
    16aa:	0c f0       	brlt	.+2      	; 0x16ae <STEPPER_MOTOR_voiddrive+0x2da>
    16ac:	43 c0       	rjmp	.+134    	; 0x1734 <STEPPER_MOTOR_voiddrive+0x360>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16ae:	fe 01       	movw	r30, r28
    16b0:	e1 5a       	subi	r30, 0xA1	; 161
    16b2:	ff 4f       	sbci	r31, 0xFF	; 255
    16b4:	60 81       	ld	r22, Z
    16b6:	71 81       	ldd	r23, Z+1	; 0x01
    16b8:	82 81       	ldd	r24, Z+2	; 0x02
    16ba:	93 81       	ldd	r25, Z+3	; 0x03
    16bc:	20 e0       	ldi	r18, 0x00	; 0
    16be:	30 e0       	ldi	r19, 0x00	; 0
    16c0:	40 e2       	ldi	r20, 0x20	; 32
    16c2:	51 e4       	ldi	r21, 0x41	; 65
    16c4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16c8:	dc 01       	movw	r26, r24
    16ca:	cb 01       	movw	r24, r22
    16cc:	8e 01       	movw	r16, r28
    16ce:	07 5a       	subi	r16, 0xA7	; 167
    16d0:	1f 4f       	sbci	r17, 0xFF	; 255
    16d2:	bc 01       	movw	r22, r24
    16d4:	cd 01       	movw	r24, r26
    16d6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    16da:	dc 01       	movw	r26, r24
    16dc:	cb 01       	movw	r24, r22
    16de:	f8 01       	movw	r30, r16
    16e0:	91 83       	std	Z+1, r25	; 0x01
    16e2:	80 83       	st	Z, r24
    16e4:	1f c0       	rjmp	.+62     	; 0x1724 <STEPPER_MOTOR_voiddrive+0x350>
    16e6:	fe 01       	movw	r30, r28
    16e8:	e9 5a       	subi	r30, 0xA9	; 169
    16ea:	ff 4f       	sbci	r31, 0xFF	; 255
    16ec:	88 ec       	ldi	r24, 0xC8	; 200
    16ee:	90 e0       	ldi	r25, 0x00	; 0
    16f0:	91 83       	std	Z+1, r25	; 0x01
    16f2:	80 83       	st	Z, r24
    16f4:	fe 01       	movw	r30, r28
    16f6:	e9 5a       	subi	r30, 0xA9	; 169
    16f8:	ff 4f       	sbci	r31, 0xFF	; 255
    16fa:	80 81       	ld	r24, Z
    16fc:	91 81       	ldd	r25, Z+1	; 0x01
    16fe:	01 97       	sbiw	r24, 0x01	; 1
    1700:	f1 f7       	brne	.-4      	; 0x16fe <STEPPER_MOTOR_voiddrive+0x32a>
    1702:	fe 01       	movw	r30, r28
    1704:	e9 5a       	subi	r30, 0xA9	; 169
    1706:	ff 4f       	sbci	r31, 0xFF	; 255
    1708:	91 83       	std	Z+1, r25	; 0x01
    170a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    170c:	de 01       	movw	r26, r28
    170e:	a7 5a       	subi	r26, 0xA7	; 167
    1710:	bf 4f       	sbci	r27, 0xFF	; 255
    1712:	fe 01       	movw	r30, r28
    1714:	e7 5a       	subi	r30, 0xA7	; 167
    1716:	ff 4f       	sbci	r31, 0xFF	; 255
    1718:	80 81       	ld	r24, Z
    171a:	91 81       	ldd	r25, Z+1	; 0x01
    171c:	01 97       	sbiw	r24, 0x01	; 1
    171e:	11 96       	adiw	r26, 0x01	; 1
    1720:	9c 93       	st	X, r25
    1722:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1724:	fe 01       	movw	r30, r28
    1726:	e7 5a       	subi	r30, 0xA7	; 167
    1728:	ff 4f       	sbci	r31, 0xFF	; 255
    172a:	80 81       	ld	r24, Z
    172c:	91 81       	ldd	r25, Z+1	; 0x01
    172e:	00 97       	sbiw	r24, 0x00	; 0
    1730:	d1 f6       	brne	.-76     	; 0x16e6 <STEPPER_MOTOR_voiddrive+0x312>
    1732:	27 c0       	rjmp	.+78     	; 0x1782 <STEPPER_MOTOR_voiddrive+0x3ae>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1734:	8e 01       	movw	r16, r28
    1736:	07 5a       	subi	r16, 0xA7	; 167
    1738:	1f 4f       	sbci	r17, 0xFF	; 255
    173a:	fe 01       	movw	r30, r28
    173c:	e5 5a       	subi	r30, 0xA5	; 165
    173e:	ff 4f       	sbci	r31, 0xFF	; 255
    1740:	60 81       	ld	r22, Z
    1742:	71 81       	ldd	r23, Z+1	; 0x01
    1744:	82 81       	ldd	r24, Z+2	; 0x02
    1746:	93 81       	ldd	r25, Z+3	; 0x03
    1748:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    174c:	dc 01       	movw	r26, r24
    174e:	cb 01       	movw	r24, r22
    1750:	f8 01       	movw	r30, r16
    1752:	91 83       	std	Z+1, r25	; 0x01
    1754:	80 83       	st	Z, r24
    1756:	de 01       	movw	r26, r28
    1758:	ab 5a       	subi	r26, 0xAB	; 171
    175a:	bf 4f       	sbci	r27, 0xFF	; 255
    175c:	fe 01       	movw	r30, r28
    175e:	e7 5a       	subi	r30, 0xA7	; 167
    1760:	ff 4f       	sbci	r31, 0xFF	; 255
    1762:	80 81       	ld	r24, Z
    1764:	91 81       	ldd	r25, Z+1	; 0x01
    1766:	8d 93       	st	X+, r24
    1768:	9c 93       	st	X, r25
    176a:	fe 01       	movw	r30, r28
    176c:	eb 5a       	subi	r30, 0xAB	; 171
    176e:	ff 4f       	sbci	r31, 0xFF	; 255
    1770:	80 81       	ld	r24, Z
    1772:	91 81       	ldd	r25, Z+1	; 0x01
    1774:	01 97       	sbiw	r24, 0x01	; 1
    1776:	f1 f7       	brne	.-4      	; 0x1774 <STEPPER_MOTOR_voiddrive+0x3a0>
    1778:	fe 01       	movw	r30, r28
    177a:	eb 5a       	subi	r30, 0xAB	; 171
    177c:	ff 4f       	sbci	r31, 0xFF	; 255
    177e:	91 83       	std	Z+1, r25	; 0x01
    1780:	80 83       	st	Z, r24
    _delay_ms(10);
	
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR1,STEPER_MOTOR_PIN_TR1,DIO_U8_HIGH);
    1782:	82 e0       	ldi	r24, 0x02	; 2
    1784:	60 e0       	ldi	r22, 0x00	; 0
    1786:	41 e0       	ldi	r20, 0x01	; 1
    1788:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR2,STEPER_MOTOR_PIN_TR2,DIO_U8_HIGH); 
    178c:	82 e0       	ldi	r24, 0x02	; 2
    178e:	61 e0       	ldi	r22, 0x01	; 1
    1790:	41 e0       	ldi	r20, 0x01	; 1
    1792:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR3,STEPER_MOTOR_PIN_TR3,DIO_U8_LOW);
    1796:	82 e0       	ldi	r24, 0x02	; 2
    1798:	62 e0       	ldi	r22, 0x02	; 2
    179a:	40 e0       	ldi	r20, 0x00	; 0
    179c:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR4,STEPER_MOTOR_PIN_TR4,DIO_U8_HIGH);
    17a0:	82 e0       	ldi	r24, 0x02	; 2
    17a2:	63 e0       	ldi	r22, 0x03	; 3
    17a4:	41 e0       	ldi	r20, 0x01	; 1
    17a6:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
    17aa:	fe 01       	movw	r30, r28
    17ac:	ef 5a       	subi	r30, 0xAF	; 175
    17ae:	ff 4f       	sbci	r31, 0xFF	; 255
    17b0:	80 e0       	ldi	r24, 0x00	; 0
    17b2:	90 e0       	ldi	r25, 0x00	; 0
    17b4:	a0 e2       	ldi	r26, 0x20	; 32
    17b6:	b1 e4       	ldi	r27, 0x41	; 65
    17b8:	80 83       	st	Z, r24
    17ba:	91 83       	std	Z+1, r25	; 0x01
    17bc:	a2 83       	std	Z+2, r26	; 0x02
    17be:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17c0:	8e 01       	movw	r16, r28
    17c2:	03 5b       	subi	r16, 0xB3	; 179
    17c4:	1f 4f       	sbci	r17, 0xFF	; 255
    17c6:	fe 01       	movw	r30, r28
    17c8:	ef 5a       	subi	r30, 0xAF	; 175
    17ca:	ff 4f       	sbci	r31, 0xFF	; 255
    17cc:	60 81       	ld	r22, Z
    17ce:	71 81       	ldd	r23, Z+1	; 0x01
    17d0:	82 81       	ldd	r24, Z+2	; 0x02
    17d2:	93 81       	ldd	r25, Z+3	; 0x03
    17d4:	20 e0       	ldi	r18, 0x00	; 0
    17d6:	30 e0       	ldi	r19, 0x00	; 0
    17d8:	4a ef       	ldi	r20, 0xFA	; 250
    17da:	54 e4       	ldi	r21, 0x44	; 68
    17dc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17e0:	dc 01       	movw	r26, r24
    17e2:	cb 01       	movw	r24, r22
    17e4:	f8 01       	movw	r30, r16
    17e6:	80 83       	st	Z, r24
    17e8:	91 83       	std	Z+1, r25	; 0x01
    17ea:	a2 83       	std	Z+2, r26	; 0x02
    17ec:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    17ee:	fe 01       	movw	r30, r28
    17f0:	e3 5b       	subi	r30, 0xB3	; 179
    17f2:	ff 4f       	sbci	r31, 0xFF	; 255
    17f4:	60 81       	ld	r22, Z
    17f6:	71 81       	ldd	r23, Z+1	; 0x01
    17f8:	82 81       	ldd	r24, Z+2	; 0x02
    17fa:	93 81       	ldd	r25, Z+3	; 0x03
    17fc:	20 e0       	ldi	r18, 0x00	; 0
    17fe:	30 e0       	ldi	r19, 0x00	; 0
    1800:	40 e8       	ldi	r20, 0x80	; 128
    1802:	5f e3       	ldi	r21, 0x3F	; 63
    1804:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1808:	88 23       	and	r24, r24
    180a:	44 f4       	brge	.+16     	; 0x181c <STEPPER_MOTOR_voiddrive+0x448>
		__ticks = 1;
    180c:	fe 01       	movw	r30, r28
    180e:	e5 5b       	subi	r30, 0xB5	; 181
    1810:	ff 4f       	sbci	r31, 0xFF	; 255
    1812:	81 e0       	ldi	r24, 0x01	; 1
    1814:	90 e0       	ldi	r25, 0x00	; 0
    1816:	91 83       	std	Z+1, r25	; 0x01
    1818:	80 83       	st	Z, r24
    181a:	64 c0       	rjmp	.+200    	; 0x18e4 <STEPPER_MOTOR_voiddrive+0x510>
	else if (__tmp > 65535)
    181c:	fe 01       	movw	r30, r28
    181e:	e3 5b       	subi	r30, 0xB3	; 179
    1820:	ff 4f       	sbci	r31, 0xFF	; 255
    1822:	60 81       	ld	r22, Z
    1824:	71 81       	ldd	r23, Z+1	; 0x01
    1826:	82 81       	ldd	r24, Z+2	; 0x02
    1828:	93 81       	ldd	r25, Z+3	; 0x03
    182a:	20 e0       	ldi	r18, 0x00	; 0
    182c:	3f ef       	ldi	r19, 0xFF	; 255
    182e:	4f e7       	ldi	r20, 0x7F	; 127
    1830:	57 e4       	ldi	r21, 0x47	; 71
    1832:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1836:	18 16       	cp	r1, r24
    1838:	0c f0       	brlt	.+2      	; 0x183c <STEPPER_MOTOR_voiddrive+0x468>
    183a:	43 c0       	rjmp	.+134    	; 0x18c2 <STEPPER_MOTOR_voiddrive+0x4ee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    183c:	fe 01       	movw	r30, r28
    183e:	ef 5a       	subi	r30, 0xAF	; 175
    1840:	ff 4f       	sbci	r31, 0xFF	; 255
    1842:	60 81       	ld	r22, Z
    1844:	71 81       	ldd	r23, Z+1	; 0x01
    1846:	82 81       	ldd	r24, Z+2	; 0x02
    1848:	93 81       	ldd	r25, Z+3	; 0x03
    184a:	20 e0       	ldi	r18, 0x00	; 0
    184c:	30 e0       	ldi	r19, 0x00	; 0
    184e:	40 e2       	ldi	r20, 0x20	; 32
    1850:	51 e4       	ldi	r21, 0x41	; 65
    1852:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1856:	dc 01       	movw	r26, r24
    1858:	cb 01       	movw	r24, r22
    185a:	8e 01       	movw	r16, r28
    185c:	05 5b       	subi	r16, 0xB5	; 181
    185e:	1f 4f       	sbci	r17, 0xFF	; 255
    1860:	bc 01       	movw	r22, r24
    1862:	cd 01       	movw	r24, r26
    1864:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1868:	dc 01       	movw	r26, r24
    186a:	cb 01       	movw	r24, r22
    186c:	f8 01       	movw	r30, r16
    186e:	91 83       	std	Z+1, r25	; 0x01
    1870:	80 83       	st	Z, r24
    1872:	1f c0       	rjmp	.+62     	; 0x18b2 <STEPPER_MOTOR_voiddrive+0x4de>
    1874:	fe 01       	movw	r30, r28
    1876:	e7 5b       	subi	r30, 0xB7	; 183
    1878:	ff 4f       	sbci	r31, 0xFF	; 255
    187a:	88 ec       	ldi	r24, 0xC8	; 200
    187c:	90 e0       	ldi	r25, 0x00	; 0
    187e:	91 83       	std	Z+1, r25	; 0x01
    1880:	80 83       	st	Z, r24
    1882:	fe 01       	movw	r30, r28
    1884:	e7 5b       	subi	r30, 0xB7	; 183
    1886:	ff 4f       	sbci	r31, 0xFF	; 255
    1888:	80 81       	ld	r24, Z
    188a:	91 81       	ldd	r25, Z+1	; 0x01
    188c:	01 97       	sbiw	r24, 0x01	; 1
    188e:	f1 f7       	brne	.-4      	; 0x188c <STEPPER_MOTOR_voiddrive+0x4b8>
    1890:	fe 01       	movw	r30, r28
    1892:	e7 5b       	subi	r30, 0xB7	; 183
    1894:	ff 4f       	sbci	r31, 0xFF	; 255
    1896:	91 83       	std	Z+1, r25	; 0x01
    1898:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    189a:	de 01       	movw	r26, r28
    189c:	a5 5b       	subi	r26, 0xB5	; 181
    189e:	bf 4f       	sbci	r27, 0xFF	; 255
    18a0:	fe 01       	movw	r30, r28
    18a2:	e5 5b       	subi	r30, 0xB5	; 181
    18a4:	ff 4f       	sbci	r31, 0xFF	; 255
    18a6:	80 81       	ld	r24, Z
    18a8:	91 81       	ldd	r25, Z+1	; 0x01
    18aa:	01 97       	sbiw	r24, 0x01	; 1
    18ac:	11 96       	adiw	r26, 0x01	; 1
    18ae:	9c 93       	st	X, r25
    18b0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18b2:	fe 01       	movw	r30, r28
    18b4:	e5 5b       	subi	r30, 0xB5	; 181
    18b6:	ff 4f       	sbci	r31, 0xFF	; 255
    18b8:	80 81       	ld	r24, Z
    18ba:	91 81       	ldd	r25, Z+1	; 0x01
    18bc:	00 97       	sbiw	r24, 0x00	; 0
    18be:	d1 f6       	brne	.-76     	; 0x1874 <STEPPER_MOTOR_voiddrive+0x4a0>
    18c0:	27 c0       	rjmp	.+78     	; 0x1910 <STEPPER_MOTOR_voiddrive+0x53c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18c2:	8e 01       	movw	r16, r28
    18c4:	05 5b       	subi	r16, 0xB5	; 181
    18c6:	1f 4f       	sbci	r17, 0xFF	; 255
    18c8:	fe 01       	movw	r30, r28
    18ca:	e3 5b       	subi	r30, 0xB3	; 179
    18cc:	ff 4f       	sbci	r31, 0xFF	; 255
    18ce:	60 81       	ld	r22, Z
    18d0:	71 81       	ldd	r23, Z+1	; 0x01
    18d2:	82 81       	ldd	r24, Z+2	; 0x02
    18d4:	93 81       	ldd	r25, Z+3	; 0x03
    18d6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18da:	dc 01       	movw	r26, r24
    18dc:	cb 01       	movw	r24, r22
    18de:	f8 01       	movw	r30, r16
    18e0:	91 83       	std	Z+1, r25	; 0x01
    18e2:	80 83       	st	Z, r24
    18e4:	de 01       	movw	r26, r28
    18e6:	a9 5b       	subi	r26, 0xB9	; 185
    18e8:	bf 4f       	sbci	r27, 0xFF	; 255
    18ea:	fe 01       	movw	r30, r28
    18ec:	e5 5b       	subi	r30, 0xB5	; 181
    18ee:	ff 4f       	sbci	r31, 0xFF	; 255
    18f0:	80 81       	ld	r24, Z
    18f2:	91 81       	ldd	r25, Z+1	; 0x01
    18f4:	8d 93       	st	X+, r24
    18f6:	9c 93       	st	X, r25
    18f8:	fe 01       	movw	r30, r28
    18fa:	e9 5b       	subi	r30, 0xB9	; 185
    18fc:	ff 4f       	sbci	r31, 0xFF	; 255
    18fe:	80 81       	ld	r24, Z
    1900:	91 81       	ldd	r25, Z+1	; 0x01
    1902:	01 97       	sbiw	r24, 0x01	; 1
    1904:	f1 f7       	brne	.-4      	; 0x1902 <STEPPER_MOTOR_voiddrive+0x52e>
    1906:	fe 01       	movw	r30, r28
    1908:	e9 5b       	subi	r30, 0xB9	; 185
    190a:	ff 4f       	sbci	r31, 0xFF	; 255
    190c:	91 83       	std	Z+1, r25	; 0x01
    190e:	80 83       	st	Z, r24
    _delay_ms(10);
	
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR1,STEPER_MOTOR_PIN_TR1,DIO_U8_HIGH);
    1910:	82 e0       	ldi	r24, 0x02	; 2
    1912:	60 e0       	ldi	r22, 0x00	; 0
    1914:	41 e0       	ldi	r20, 0x01	; 1
    1916:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR2,STEPER_MOTOR_PIN_TR2,DIO_U8_HIGH); 
    191a:	82 e0       	ldi	r24, 0x02	; 2
    191c:	61 e0       	ldi	r22, 0x01	; 1
    191e:	41 e0       	ldi	r20, 0x01	; 1
    1920:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR3,STEPER_MOTOR_PIN_TR3,DIO_U8_HIGH); 
    1924:	82 e0       	ldi	r24, 0x02	; 2
    1926:	62 e0       	ldi	r22, 0x02	; 2
    1928:	41 e0       	ldi	r20, 0x01	; 1
    192a:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR4,STEPER_MOTOR_PIN_TR4,DIO_U8_LOW);  	
    192e:	82 e0       	ldi	r24, 0x02	; 2
    1930:	63 e0       	ldi	r22, 0x03	; 3
    1932:	40 e0       	ldi	r20, 0x00	; 0
    1934:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
    1938:	fe 01       	movw	r30, r28
    193a:	ed 5b       	subi	r30, 0xBD	; 189
    193c:	ff 4f       	sbci	r31, 0xFF	; 255
    193e:	80 e0       	ldi	r24, 0x00	; 0
    1940:	90 e0       	ldi	r25, 0x00	; 0
    1942:	a0 e2       	ldi	r26, 0x20	; 32
    1944:	b1 e4       	ldi	r27, 0x41	; 65
    1946:	80 83       	st	Z, r24
    1948:	91 83       	std	Z+1, r25	; 0x01
    194a:	a2 83       	std	Z+2, r26	; 0x02
    194c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    194e:	8e 01       	movw	r16, r28
    1950:	01 5c       	subi	r16, 0xC1	; 193
    1952:	1f 4f       	sbci	r17, 0xFF	; 255
    1954:	fe 01       	movw	r30, r28
    1956:	ed 5b       	subi	r30, 0xBD	; 189
    1958:	ff 4f       	sbci	r31, 0xFF	; 255
    195a:	60 81       	ld	r22, Z
    195c:	71 81       	ldd	r23, Z+1	; 0x01
    195e:	82 81       	ldd	r24, Z+2	; 0x02
    1960:	93 81       	ldd	r25, Z+3	; 0x03
    1962:	20 e0       	ldi	r18, 0x00	; 0
    1964:	30 e0       	ldi	r19, 0x00	; 0
    1966:	4a ef       	ldi	r20, 0xFA	; 250
    1968:	54 e4       	ldi	r21, 0x44	; 68
    196a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    196e:	dc 01       	movw	r26, r24
    1970:	cb 01       	movw	r24, r22
    1972:	f8 01       	movw	r30, r16
    1974:	80 83       	st	Z, r24
    1976:	91 83       	std	Z+1, r25	; 0x01
    1978:	a2 83       	std	Z+2, r26	; 0x02
    197a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    197c:	fe 01       	movw	r30, r28
    197e:	ff 96       	adiw	r30, 0x3f	; 63
    1980:	60 81       	ld	r22, Z
    1982:	71 81       	ldd	r23, Z+1	; 0x01
    1984:	82 81       	ldd	r24, Z+2	; 0x02
    1986:	93 81       	ldd	r25, Z+3	; 0x03
    1988:	20 e0       	ldi	r18, 0x00	; 0
    198a:	30 e0       	ldi	r19, 0x00	; 0
    198c:	40 e8       	ldi	r20, 0x80	; 128
    198e:	5f e3       	ldi	r21, 0x3F	; 63
    1990:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1994:	88 23       	and	r24, r24
    1996:	2c f4       	brge	.+10     	; 0x19a2 <STEPPER_MOTOR_voiddrive+0x5ce>
		__ticks = 1;
    1998:	81 e0       	ldi	r24, 0x01	; 1
    199a:	90 e0       	ldi	r25, 0x00	; 0
    199c:	9e af       	std	Y+62, r25	; 0x3e
    199e:	8d af       	std	Y+61, r24	; 0x3d
    19a0:	46 c0       	rjmp	.+140    	; 0x1a2e <STEPPER_MOTOR_voiddrive+0x65a>
	else if (__tmp > 65535)
    19a2:	fe 01       	movw	r30, r28
    19a4:	ff 96       	adiw	r30, 0x3f	; 63
    19a6:	60 81       	ld	r22, Z
    19a8:	71 81       	ldd	r23, Z+1	; 0x01
    19aa:	82 81       	ldd	r24, Z+2	; 0x02
    19ac:	93 81       	ldd	r25, Z+3	; 0x03
    19ae:	20 e0       	ldi	r18, 0x00	; 0
    19b0:	3f ef       	ldi	r19, 0xFF	; 255
    19b2:	4f e7       	ldi	r20, 0x7F	; 127
    19b4:	57 e4       	ldi	r21, 0x47	; 71
    19b6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    19ba:	18 16       	cp	r1, r24
    19bc:	64 f5       	brge	.+88     	; 0x1a16 <STEPPER_MOTOR_voiddrive+0x642>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19be:	fe 01       	movw	r30, r28
    19c0:	ed 5b       	subi	r30, 0xBD	; 189
    19c2:	ff 4f       	sbci	r31, 0xFF	; 255
    19c4:	60 81       	ld	r22, Z
    19c6:	71 81       	ldd	r23, Z+1	; 0x01
    19c8:	82 81       	ldd	r24, Z+2	; 0x02
    19ca:	93 81       	ldd	r25, Z+3	; 0x03
    19cc:	20 e0       	ldi	r18, 0x00	; 0
    19ce:	30 e0       	ldi	r19, 0x00	; 0
    19d0:	40 e2       	ldi	r20, 0x20	; 32
    19d2:	51 e4       	ldi	r21, 0x41	; 65
    19d4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19d8:	dc 01       	movw	r26, r24
    19da:	cb 01       	movw	r24, r22
    19dc:	bc 01       	movw	r22, r24
    19de:	cd 01       	movw	r24, r26
    19e0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19e4:	dc 01       	movw	r26, r24
    19e6:	cb 01       	movw	r24, r22
    19e8:	9e af       	std	Y+62, r25	; 0x3e
    19ea:	8d af       	std	Y+61, r24	; 0x3d
    19ec:	0f c0       	rjmp	.+30     	; 0x1a0c <STEPPER_MOTOR_voiddrive+0x638>
    19ee:	88 ec       	ldi	r24, 0xC8	; 200
    19f0:	90 e0       	ldi	r25, 0x00	; 0
    19f2:	9c af       	std	Y+60, r25	; 0x3c
    19f4:	8b af       	std	Y+59, r24	; 0x3b
    19f6:	8b ad       	ldd	r24, Y+59	; 0x3b
    19f8:	9c ad       	ldd	r25, Y+60	; 0x3c
    19fa:	01 97       	sbiw	r24, 0x01	; 1
    19fc:	f1 f7       	brne	.-4      	; 0x19fa <STEPPER_MOTOR_voiddrive+0x626>
    19fe:	9c af       	std	Y+60, r25	; 0x3c
    1a00:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a02:	8d ad       	ldd	r24, Y+61	; 0x3d
    1a04:	9e ad       	ldd	r25, Y+62	; 0x3e
    1a06:	01 97       	sbiw	r24, 0x01	; 1
    1a08:	9e af       	std	Y+62, r25	; 0x3e
    1a0a:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a0c:	8d ad       	ldd	r24, Y+61	; 0x3d
    1a0e:	9e ad       	ldd	r25, Y+62	; 0x3e
    1a10:	00 97       	sbiw	r24, 0x00	; 0
    1a12:	69 f7       	brne	.-38     	; 0x19ee <STEPPER_MOTOR_voiddrive+0x61a>
    1a14:	16 c0       	rjmp	.+44     	; 0x1a42 <STEPPER_MOTOR_voiddrive+0x66e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a16:	fe 01       	movw	r30, r28
    1a18:	ff 96       	adiw	r30, 0x3f	; 63
    1a1a:	60 81       	ld	r22, Z
    1a1c:	71 81       	ldd	r23, Z+1	; 0x01
    1a1e:	82 81       	ldd	r24, Z+2	; 0x02
    1a20:	93 81       	ldd	r25, Z+3	; 0x03
    1a22:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a26:	dc 01       	movw	r26, r24
    1a28:	cb 01       	movw	r24, r22
    1a2a:	9e af       	std	Y+62, r25	; 0x3e
    1a2c:	8d af       	std	Y+61, r24	; 0x3d
    1a2e:	8d ad       	ldd	r24, Y+61	; 0x3d
    1a30:	9e ad       	ldd	r25, Y+62	; 0x3e
    1a32:	9a af       	std	Y+58, r25	; 0x3a
    1a34:	89 af       	std	Y+57, r24	; 0x39
    1a36:	89 ad       	ldd	r24, Y+57	; 0x39
    1a38:	9a ad       	ldd	r25, Y+58	; 0x3a
    1a3a:	01 97       	sbiw	r24, 0x01	; 1
    1a3c:	f1 f7       	brne	.-4      	; 0x1a3a <STEPPER_MOTOR_voiddrive+0x666>
    1a3e:	9a af       	std	Y+58, r25	; 0x3a
    1a40:	89 af       	std	Y+57, r24	; 0x39
 
  local_u8nof_iteration = local_u8nof_step/4;
  if(STEPER_MOTOR_PIN_COM == VCC && copy_u8direction == CLOCK_WISE)
  {

	 for(i=0;i<local_u8nof_iteration;i++)
    1a42:	de 01       	movw	r26, r28
    1a44:	ad 58       	subi	r26, 0x8D	; 141
    1a46:	bf 4f       	sbci	r27, 0xFF	; 255
    1a48:	fe 01       	movw	r30, r28
    1a4a:	ed 58       	subi	r30, 0x8D	; 141
    1a4c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a4e:	80 81       	ld	r24, Z
    1a50:	8f 5f       	subi	r24, 0xFF	; 255
    1a52:	8c 93       	st	X, r24
    1a54:	fe 01       	movw	r30, r28
    1a56:	ed 58       	subi	r30, 0x8D	; 141
    1a58:	ff 4f       	sbci	r31, 0xFF	; 255
    1a5a:	de 01       	movw	r26, r28
    1a5c:	ac 58       	subi	r26, 0x8C	; 140
    1a5e:	bf 4f       	sbci	r27, 0xFF	; 255
    1a60:	90 81       	ld	r25, Z
    1a62:	8c 91       	ld	r24, X
    1a64:	98 17       	cp	r25, r24
    1a66:	08 f4       	brcc	.+2      	; 0x1a6a <STEPPER_MOTOR_voiddrive+0x696>
    1a68:	fe cc       	rjmp	.-1540   	; 0x1466 <STEPPER_MOTOR_voiddrive+0x92>
    1a6a:	38 c2       	rjmp	.+1136   	; 0x1edc <STEPPER_MOTOR_voiddrive+0xb08>
	_delay_ms(10);
	
	 }
  }

  else if(STEPER_MOTOR_PIN_COM == VCC && copy_u8direction == COUNTER_CLOCK_WISE)
    1a6c:	fe 01       	movw	r30, r28
    1a6e:	e9 58       	subi	r30, 0x89	; 137
    1a70:	ff 4f       	sbci	r31, 0xFF	; 255
    1a72:	80 81       	ld	r24, Z
    1a74:	82 30       	cpi	r24, 0x02	; 2
    1a76:	09 f0       	breq	.+2      	; 0x1a7a <STEPPER_MOTOR_voiddrive+0x6a6>
    1a78:	31 c2       	rjmp	.+1122   	; 0x1edc <STEPPER_MOTOR_voiddrive+0xb08>
  {
   for(i=0;i<local_u8nof_iteration;i++)
    1a7a:	fe 01       	movw	r30, r28
    1a7c:	ed 58       	subi	r30, 0x8D	; 141
    1a7e:	ff 4f       	sbci	r31, 0xFF	; 255
    1a80:	10 82       	st	Z, r1
    1a82:	21 c2       	rjmp	.+1090   	; 0x1ec6 <STEPPER_MOTOR_voiddrive+0xaf2>
	 {  
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR1,STEPER_MOTOR_PIN_TR1,DIO_U8_HIGH);
    1a84:	82 e0       	ldi	r24, 0x02	; 2
    1a86:	60 e0       	ldi	r22, 0x00	; 0
    1a88:	41 e0       	ldi	r20, 0x01	; 1
    1a8a:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR2,STEPER_MOTOR_PIN_TR2,DIO_U8_HIGH); 
    1a8e:	82 e0       	ldi	r24, 0x02	; 2
    1a90:	61 e0       	ldi	r22, 0x01	; 1
    1a92:	41 e0       	ldi	r20, 0x01	; 1
    1a94:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR3,STEPER_MOTOR_PIN_TR3,DIO_U8_HIGH); 
    1a98:	82 e0       	ldi	r24, 0x02	; 2
    1a9a:	62 e0       	ldi	r22, 0x02	; 2
    1a9c:	41 e0       	ldi	r20, 0x01	; 1
    1a9e:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR4,STEPER_MOTOR_PIN_TR4,DIO_U8_LOW);
    1aa2:	82 e0       	ldi	r24, 0x02	; 2
    1aa4:	63 e0       	ldi	r22, 0x03	; 3
    1aa6:	40 e0       	ldi	r20, 0x00	; 0
    1aa8:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
    1aac:	80 e0       	ldi	r24, 0x00	; 0
    1aae:	90 e0       	ldi	r25, 0x00	; 0
    1ab0:	a0 e2       	ldi	r26, 0x20	; 32
    1ab2:	b1 e4       	ldi	r27, 0x41	; 65
    1ab4:	8d ab       	std	Y+53, r24	; 0x35
    1ab6:	9e ab       	std	Y+54, r25	; 0x36
    1ab8:	af ab       	std	Y+55, r26	; 0x37
    1aba:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1abc:	6d a9       	ldd	r22, Y+53	; 0x35
    1abe:	7e a9       	ldd	r23, Y+54	; 0x36
    1ac0:	8f a9       	ldd	r24, Y+55	; 0x37
    1ac2:	98 ad       	ldd	r25, Y+56	; 0x38
    1ac4:	20 e0       	ldi	r18, 0x00	; 0
    1ac6:	30 e0       	ldi	r19, 0x00	; 0
    1ac8:	4a ef       	ldi	r20, 0xFA	; 250
    1aca:	54 e4       	ldi	r21, 0x44	; 68
    1acc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ad0:	dc 01       	movw	r26, r24
    1ad2:	cb 01       	movw	r24, r22
    1ad4:	89 ab       	std	Y+49, r24	; 0x31
    1ad6:	9a ab       	std	Y+50, r25	; 0x32
    1ad8:	ab ab       	std	Y+51, r26	; 0x33
    1ada:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1adc:	69 a9       	ldd	r22, Y+49	; 0x31
    1ade:	7a a9       	ldd	r23, Y+50	; 0x32
    1ae0:	8b a9       	ldd	r24, Y+51	; 0x33
    1ae2:	9c a9       	ldd	r25, Y+52	; 0x34
    1ae4:	20 e0       	ldi	r18, 0x00	; 0
    1ae6:	30 e0       	ldi	r19, 0x00	; 0
    1ae8:	40 e8       	ldi	r20, 0x80	; 128
    1aea:	5f e3       	ldi	r21, 0x3F	; 63
    1aec:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1af0:	88 23       	and	r24, r24
    1af2:	2c f4       	brge	.+10     	; 0x1afe <STEPPER_MOTOR_voiddrive+0x72a>
		__ticks = 1;
    1af4:	81 e0       	ldi	r24, 0x01	; 1
    1af6:	90 e0       	ldi	r25, 0x00	; 0
    1af8:	98 ab       	std	Y+48, r25	; 0x30
    1afa:	8f a7       	std	Y+47, r24	; 0x2f
    1afc:	3f c0       	rjmp	.+126    	; 0x1b7c <STEPPER_MOTOR_voiddrive+0x7a8>
	else if (__tmp > 65535)
    1afe:	69 a9       	ldd	r22, Y+49	; 0x31
    1b00:	7a a9       	ldd	r23, Y+50	; 0x32
    1b02:	8b a9       	ldd	r24, Y+51	; 0x33
    1b04:	9c a9       	ldd	r25, Y+52	; 0x34
    1b06:	20 e0       	ldi	r18, 0x00	; 0
    1b08:	3f ef       	ldi	r19, 0xFF	; 255
    1b0a:	4f e7       	ldi	r20, 0x7F	; 127
    1b0c:	57 e4       	ldi	r21, 0x47	; 71
    1b0e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1b12:	18 16       	cp	r1, r24
    1b14:	4c f5       	brge	.+82     	; 0x1b68 <STEPPER_MOTOR_voiddrive+0x794>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b16:	6d a9       	ldd	r22, Y+53	; 0x35
    1b18:	7e a9       	ldd	r23, Y+54	; 0x36
    1b1a:	8f a9       	ldd	r24, Y+55	; 0x37
    1b1c:	98 ad       	ldd	r25, Y+56	; 0x38
    1b1e:	20 e0       	ldi	r18, 0x00	; 0
    1b20:	30 e0       	ldi	r19, 0x00	; 0
    1b22:	40 e2       	ldi	r20, 0x20	; 32
    1b24:	51 e4       	ldi	r21, 0x41	; 65
    1b26:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b2a:	dc 01       	movw	r26, r24
    1b2c:	cb 01       	movw	r24, r22
    1b2e:	bc 01       	movw	r22, r24
    1b30:	cd 01       	movw	r24, r26
    1b32:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b36:	dc 01       	movw	r26, r24
    1b38:	cb 01       	movw	r24, r22
    1b3a:	98 ab       	std	Y+48, r25	; 0x30
    1b3c:	8f a7       	std	Y+47, r24	; 0x2f
    1b3e:	0f c0       	rjmp	.+30     	; 0x1b5e <STEPPER_MOTOR_voiddrive+0x78a>
    1b40:	88 ec       	ldi	r24, 0xC8	; 200
    1b42:	90 e0       	ldi	r25, 0x00	; 0
    1b44:	9e a7       	std	Y+46, r25	; 0x2e
    1b46:	8d a7       	std	Y+45, r24	; 0x2d
    1b48:	8d a5       	ldd	r24, Y+45	; 0x2d
    1b4a:	9e a5       	ldd	r25, Y+46	; 0x2e
    1b4c:	01 97       	sbiw	r24, 0x01	; 1
    1b4e:	f1 f7       	brne	.-4      	; 0x1b4c <STEPPER_MOTOR_voiddrive+0x778>
    1b50:	9e a7       	std	Y+46, r25	; 0x2e
    1b52:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b54:	8f a5       	ldd	r24, Y+47	; 0x2f
    1b56:	98 a9       	ldd	r25, Y+48	; 0x30
    1b58:	01 97       	sbiw	r24, 0x01	; 1
    1b5a:	98 ab       	std	Y+48, r25	; 0x30
    1b5c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b5e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1b60:	98 a9       	ldd	r25, Y+48	; 0x30
    1b62:	00 97       	sbiw	r24, 0x00	; 0
    1b64:	69 f7       	brne	.-38     	; 0x1b40 <STEPPER_MOTOR_voiddrive+0x76c>
    1b66:	14 c0       	rjmp	.+40     	; 0x1b90 <STEPPER_MOTOR_voiddrive+0x7bc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b68:	69 a9       	ldd	r22, Y+49	; 0x31
    1b6a:	7a a9       	ldd	r23, Y+50	; 0x32
    1b6c:	8b a9       	ldd	r24, Y+51	; 0x33
    1b6e:	9c a9       	ldd	r25, Y+52	; 0x34
    1b70:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b74:	dc 01       	movw	r26, r24
    1b76:	cb 01       	movw	r24, r22
    1b78:	98 ab       	std	Y+48, r25	; 0x30
    1b7a:	8f a7       	std	Y+47, r24	; 0x2f
    1b7c:	8f a5       	ldd	r24, Y+47	; 0x2f
    1b7e:	98 a9       	ldd	r25, Y+48	; 0x30
    1b80:	9c a7       	std	Y+44, r25	; 0x2c
    1b82:	8b a7       	std	Y+43, r24	; 0x2b
    1b84:	8b a5       	ldd	r24, Y+43	; 0x2b
    1b86:	9c a5       	ldd	r25, Y+44	; 0x2c
    1b88:	01 97       	sbiw	r24, 0x01	; 1
    1b8a:	f1 f7       	brne	.-4      	; 0x1b88 <STEPPER_MOTOR_voiddrive+0x7b4>
    1b8c:	9c a7       	std	Y+44, r25	; 0x2c
    1b8e:	8b a7       	std	Y+43, r24	; 0x2b
    _delay_ms(10);	
	
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR1,STEPER_MOTOR_PIN_TR1,DIO_U8_HIGH);
    1b90:	82 e0       	ldi	r24, 0x02	; 2
    1b92:	60 e0       	ldi	r22, 0x00	; 0
    1b94:	41 e0       	ldi	r20, 0x01	; 1
    1b96:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR2,STEPER_MOTOR_PIN_TR2,DIO_U8_HIGH); 
    1b9a:	82 e0       	ldi	r24, 0x02	; 2
    1b9c:	61 e0       	ldi	r22, 0x01	; 1
    1b9e:	41 e0       	ldi	r20, 0x01	; 1
    1ba0:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR3,STEPER_MOTOR_PIN_TR3,DIO_U8_LOW); 
    1ba4:	82 e0       	ldi	r24, 0x02	; 2
    1ba6:	62 e0       	ldi	r22, 0x02	; 2
    1ba8:	40 e0       	ldi	r20, 0x00	; 0
    1baa:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR4,STEPER_MOTOR_PIN_TR4,DIO_U8_HIGH);
    1bae:	82 e0       	ldi	r24, 0x02	; 2
    1bb0:	63 e0       	ldi	r22, 0x03	; 3
    1bb2:	41 e0       	ldi	r20, 0x01	; 1
    1bb4:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
    1bb8:	80 e0       	ldi	r24, 0x00	; 0
    1bba:	90 e0       	ldi	r25, 0x00	; 0
    1bbc:	a0 e2       	ldi	r26, 0x20	; 32
    1bbe:	b1 e4       	ldi	r27, 0x41	; 65
    1bc0:	8f a3       	std	Y+39, r24	; 0x27
    1bc2:	98 a7       	std	Y+40, r25	; 0x28
    1bc4:	a9 a7       	std	Y+41, r26	; 0x29
    1bc6:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1bc8:	6f a1       	ldd	r22, Y+39	; 0x27
    1bca:	78 a5       	ldd	r23, Y+40	; 0x28
    1bcc:	89 a5       	ldd	r24, Y+41	; 0x29
    1bce:	9a a5       	ldd	r25, Y+42	; 0x2a
    1bd0:	20 e0       	ldi	r18, 0x00	; 0
    1bd2:	30 e0       	ldi	r19, 0x00	; 0
    1bd4:	4a ef       	ldi	r20, 0xFA	; 250
    1bd6:	54 e4       	ldi	r21, 0x44	; 68
    1bd8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1bdc:	dc 01       	movw	r26, r24
    1bde:	cb 01       	movw	r24, r22
    1be0:	8b a3       	std	Y+35, r24	; 0x23
    1be2:	9c a3       	std	Y+36, r25	; 0x24
    1be4:	ad a3       	std	Y+37, r26	; 0x25
    1be6:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1be8:	6b a1       	ldd	r22, Y+35	; 0x23
    1bea:	7c a1       	ldd	r23, Y+36	; 0x24
    1bec:	8d a1       	ldd	r24, Y+37	; 0x25
    1bee:	9e a1       	ldd	r25, Y+38	; 0x26
    1bf0:	20 e0       	ldi	r18, 0x00	; 0
    1bf2:	30 e0       	ldi	r19, 0x00	; 0
    1bf4:	40 e8       	ldi	r20, 0x80	; 128
    1bf6:	5f e3       	ldi	r21, 0x3F	; 63
    1bf8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1bfc:	88 23       	and	r24, r24
    1bfe:	2c f4       	brge	.+10     	; 0x1c0a <STEPPER_MOTOR_voiddrive+0x836>
		__ticks = 1;
    1c00:	81 e0       	ldi	r24, 0x01	; 1
    1c02:	90 e0       	ldi	r25, 0x00	; 0
    1c04:	9a a3       	std	Y+34, r25	; 0x22
    1c06:	89 a3       	std	Y+33, r24	; 0x21
    1c08:	3f c0       	rjmp	.+126    	; 0x1c88 <STEPPER_MOTOR_voiddrive+0x8b4>
	else if (__tmp > 65535)
    1c0a:	6b a1       	ldd	r22, Y+35	; 0x23
    1c0c:	7c a1       	ldd	r23, Y+36	; 0x24
    1c0e:	8d a1       	ldd	r24, Y+37	; 0x25
    1c10:	9e a1       	ldd	r25, Y+38	; 0x26
    1c12:	20 e0       	ldi	r18, 0x00	; 0
    1c14:	3f ef       	ldi	r19, 0xFF	; 255
    1c16:	4f e7       	ldi	r20, 0x7F	; 127
    1c18:	57 e4       	ldi	r21, 0x47	; 71
    1c1a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1c1e:	18 16       	cp	r1, r24
    1c20:	4c f5       	brge	.+82     	; 0x1c74 <STEPPER_MOTOR_voiddrive+0x8a0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c22:	6f a1       	ldd	r22, Y+39	; 0x27
    1c24:	78 a5       	ldd	r23, Y+40	; 0x28
    1c26:	89 a5       	ldd	r24, Y+41	; 0x29
    1c28:	9a a5       	ldd	r25, Y+42	; 0x2a
    1c2a:	20 e0       	ldi	r18, 0x00	; 0
    1c2c:	30 e0       	ldi	r19, 0x00	; 0
    1c2e:	40 e2       	ldi	r20, 0x20	; 32
    1c30:	51 e4       	ldi	r21, 0x41	; 65
    1c32:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c36:	dc 01       	movw	r26, r24
    1c38:	cb 01       	movw	r24, r22
    1c3a:	bc 01       	movw	r22, r24
    1c3c:	cd 01       	movw	r24, r26
    1c3e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c42:	dc 01       	movw	r26, r24
    1c44:	cb 01       	movw	r24, r22
    1c46:	9a a3       	std	Y+34, r25	; 0x22
    1c48:	89 a3       	std	Y+33, r24	; 0x21
    1c4a:	0f c0       	rjmp	.+30     	; 0x1c6a <STEPPER_MOTOR_voiddrive+0x896>
    1c4c:	88 ec       	ldi	r24, 0xC8	; 200
    1c4e:	90 e0       	ldi	r25, 0x00	; 0
    1c50:	98 a3       	std	Y+32, r25	; 0x20
    1c52:	8f 8f       	std	Y+31, r24	; 0x1f
    1c54:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1c56:	98 a1       	ldd	r25, Y+32	; 0x20
    1c58:	01 97       	sbiw	r24, 0x01	; 1
    1c5a:	f1 f7       	brne	.-4      	; 0x1c58 <STEPPER_MOTOR_voiddrive+0x884>
    1c5c:	98 a3       	std	Y+32, r25	; 0x20
    1c5e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c60:	89 a1       	ldd	r24, Y+33	; 0x21
    1c62:	9a a1       	ldd	r25, Y+34	; 0x22
    1c64:	01 97       	sbiw	r24, 0x01	; 1
    1c66:	9a a3       	std	Y+34, r25	; 0x22
    1c68:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c6a:	89 a1       	ldd	r24, Y+33	; 0x21
    1c6c:	9a a1       	ldd	r25, Y+34	; 0x22
    1c6e:	00 97       	sbiw	r24, 0x00	; 0
    1c70:	69 f7       	brne	.-38     	; 0x1c4c <STEPPER_MOTOR_voiddrive+0x878>
    1c72:	14 c0       	rjmp	.+40     	; 0x1c9c <STEPPER_MOTOR_voiddrive+0x8c8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c74:	6b a1       	ldd	r22, Y+35	; 0x23
    1c76:	7c a1       	ldd	r23, Y+36	; 0x24
    1c78:	8d a1       	ldd	r24, Y+37	; 0x25
    1c7a:	9e a1       	ldd	r25, Y+38	; 0x26
    1c7c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c80:	dc 01       	movw	r26, r24
    1c82:	cb 01       	movw	r24, r22
    1c84:	9a a3       	std	Y+34, r25	; 0x22
    1c86:	89 a3       	std	Y+33, r24	; 0x21
    1c88:	89 a1       	ldd	r24, Y+33	; 0x21
    1c8a:	9a a1       	ldd	r25, Y+34	; 0x22
    1c8c:	9e 8f       	std	Y+30, r25	; 0x1e
    1c8e:	8d 8f       	std	Y+29, r24	; 0x1d
    1c90:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1c92:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1c94:	01 97       	sbiw	r24, 0x01	; 1
    1c96:	f1 f7       	brne	.-4      	; 0x1c94 <STEPPER_MOTOR_voiddrive+0x8c0>
    1c98:	9e 8f       	std	Y+30, r25	; 0x1e
    1c9a:	8d 8f       	std	Y+29, r24	; 0x1d
    _delay_ms(10);
	
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR1,STEPER_MOTOR_PIN_TR1,DIO_U8_HIGH);
    1c9c:	82 e0       	ldi	r24, 0x02	; 2
    1c9e:	60 e0       	ldi	r22, 0x00	; 0
    1ca0:	41 e0       	ldi	r20, 0x01	; 1
    1ca2:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR2,STEPER_MOTOR_PIN_TR2,DIO_U8_LOW); 
    1ca6:	82 e0       	ldi	r24, 0x02	; 2
    1ca8:	61 e0       	ldi	r22, 0x01	; 1
    1caa:	40 e0       	ldi	r20, 0x00	; 0
    1cac:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR3,STEPER_MOTOR_PIN_TR3,DIO_U8_HIGH); 
    1cb0:	82 e0       	ldi	r24, 0x02	; 2
    1cb2:	62 e0       	ldi	r22, 0x02	; 2
    1cb4:	41 e0       	ldi	r20, 0x01	; 1
    1cb6:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR4,STEPER_MOTOR_PIN_TR4,DIO_U8_HIGH);
    1cba:	82 e0       	ldi	r24, 0x02	; 2
    1cbc:	63 e0       	ldi	r22, 0x03	; 3
    1cbe:	41 e0       	ldi	r20, 0x01	; 1
    1cc0:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
    1cc4:	80 e0       	ldi	r24, 0x00	; 0
    1cc6:	90 e0       	ldi	r25, 0x00	; 0
    1cc8:	a0 e2       	ldi	r26, 0x20	; 32
    1cca:	b1 e4       	ldi	r27, 0x41	; 65
    1ccc:	89 8f       	std	Y+25, r24	; 0x19
    1cce:	9a 8f       	std	Y+26, r25	; 0x1a
    1cd0:	ab 8f       	std	Y+27, r26	; 0x1b
    1cd2:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1cd4:	69 8d       	ldd	r22, Y+25	; 0x19
    1cd6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1cd8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1cda:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1cdc:	20 e0       	ldi	r18, 0x00	; 0
    1cde:	30 e0       	ldi	r19, 0x00	; 0
    1ce0:	4a ef       	ldi	r20, 0xFA	; 250
    1ce2:	54 e4       	ldi	r21, 0x44	; 68
    1ce4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ce8:	dc 01       	movw	r26, r24
    1cea:	cb 01       	movw	r24, r22
    1cec:	8d 8b       	std	Y+21, r24	; 0x15
    1cee:	9e 8b       	std	Y+22, r25	; 0x16
    1cf0:	af 8b       	std	Y+23, r26	; 0x17
    1cf2:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1cf4:	6d 89       	ldd	r22, Y+21	; 0x15
    1cf6:	7e 89       	ldd	r23, Y+22	; 0x16
    1cf8:	8f 89       	ldd	r24, Y+23	; 0x17
    1cfa:	98 8d       	ldd	r25, Y+24	; 0x18
    1cfc:	20 e0       	ldi	r18, 0x00	; 0
    1cfe:	30 e0       	ldi	r19, 0x00	; 0
    1d00:	40 e8       	ldi	r20, 0x80	; 128
    1d02:	5f e3       	ldi	r21, 0x3F	; 63
    1d04:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1d08:	88 23       	and	r24, r24
    1d0a:	2c f4       	brge	.+10     	; 0x1d16 <STEPPER_MOTOR_voiddrive+0x942>
		__ticks = 1;
    1d0c:	81 e0       	ldi	r24, 0x01	; 1
    1d0e:	90 e0       	ldi	r25, 0x00	; 0
    1d10:	9c 8b       	std	Y+20, r25	; 0x14
    1d12:	8b 8b       	std	Y+19, r24	; 0x13
    1d14:	3f c0       	rjmp	.+126    	; 0x1d94 <STEPPER_MOTOR_voiddrive+0x9c0>
	else if (__tmp > 65535)
    1d16:	6d 89       	ldd	r22, Y+21	; 0x15
    1d18:	7e 89       	ldd	r23, Y+22	; 0x16
    1d1a:	8f 89       	ldd	r24, Y+23	; 0x17
    1d1c:	98 8d       	ldd	r25, Y+24	; 0x18
    1d1e:	20 e0       	ldi	r18, 0x00	; 0
    1d20:	3f ef       	ldi	r19, 0xFF	; 255
    1d22:	4f e7       	ldi	r20, 0x7F	; 127
    1d24:	57 e4       	ldi	r21, 0x47	; 71
    1d26:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1d2a:	18 16       	cp	r1, r24
    1d2c:	4c f5       	brge	.+82     	; 0x1d80 <STEPPER_MOTOR_voiddrive+0x9ac>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d2e:	69 8d       	ldd	r22, Y+25	; 0x19
    1d30:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1d32:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1d34:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1d36:	20 e0       	ldi	r18, 0x00	; 0
    1d38:	30 e0       	ldi	r19, 0x00	; 0
    1d3a:	40 e2       	ldi	r20, 0x20	; 32
    1d3c:	51 e4       	ldi	r21, 0x41	; 65
    1d3e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d42:	dc 01       	movw	r26, r24
    1d44:	cb 01       	movw	r24, r22
    1d46:	bc 01       	movw	r22, r24
    1d48:	cd 01       	movw	r24, r26
    1d4a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d4e:	dc 01       	movw	r26, r24
    1d50:	cb 01       	movw	r24, r22
    1d52:	9c 8b       	std	Y+20, r25	; 0x14
    1d54:	8b 8b       	std	Y+19, r24	; 0x13
    1d56:	0f c0       	rjmp	.+30     	; 0x1d76 <STEPPER_MOTOR_voiddrive+0x9a2>
    1d58:	88 ec       	ldi	r24, 0xC8	; 200
    1d5a:	90 e0       	ldi	r25, 0x00	; 0
    1d5c:	9a 8b       	std	Y+18, r25	; 0x12
    1d5e:	89 8b       	std	Y+17, r24	; 0x11
    1d60:	89 89       	ldd	r24, Y+17	; 0x11
    1d62:	9a 89       	ldd	r25, Y+18	; 0x12
    1d64:	01 97       	sbiw	r24, 0x01	; 1
    1d66:	f1 f7       	brne	.-4      	; 0x1d64 <STEPPER_MOTOR_voiddrive+0x990>
    1d68:	9a 8b       	std	Y+18, r25	; 0x12
    1d6a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d6c:	8b 89       	ldd	r24, Y+19	; 0x13
    1d6e:	9c 89       	ldd	r25, Y+20	; 0x14
    1d70:	01 97       	sbiw	r24, 0x01	; 1
    1d72:	9c 8b       	std	Y+20, r25	; 0x14
    1d74:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d76:	8b 89       	ldd	r24, Y+19	; 0x13
    1d78:	9c 89       	ldd	r25, Y+20	; 0x14
    1d7a:	00 97       	sbiw	r24, 0x00	; 0
    1d7c:	69 f7       	brne	.-38     	; 0x1d58 <STEPPER_MOTOR_voiddrive+0x984>
    1d7e:	14 c0       	rjmp	.+40     	; 0x1da8 <STEPPER_MOTOR_voiddrive+0x9d4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d80:	6d 89       	ldd	r22, Y+21	; 0x15
    1d82:	7e 89       	ldd	r23, Y+22	; 0x16
    1d84:	8f 89       	ldd	r24, Y+23	; 0x17
    1d86:	98 8d       	ldd	r25, Y+24	; 0x18
    1d88:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d8c:	dc 01       	movw	r26, r24
    1d8e:	cb 01       	movw	r24, r22
    1d90:	9c 8b       	std	Y+20, r25	; 0x14
    1d92:	8b 8b       	std	Y+19, r24	; 0x13
    1d94:	8b 89       	ldd	r24, Y+19	; 0x13
    1d96:	9c 89       	ldd	r25, Y+20	; 0x14
    1d98:	98 8b       	std	Y+16, r25	; 0x10
    1d9a:	8f 87       	std	Y+15, r24	; 0x0f
    1d9c:	8f 85       	ldd	r24, Y+15	; 0x0f
    1d9e:	98 89       	ldd	r25, Y+16	; 0x10
    1da0:	01 97       	sbiw	r24, 0x01	; 1
    1da2:	f1 f7       	brne	.-4      	; 0x1da0 <STEPPER_MOTOR_voiddrive+0x9cc>
    1da4:	98 8b       	std	Y+16, r25	; 0x10
    1da6:	8f 87       	std	Y+15, r24	; 0x0f
    _delay_ms(10);
	
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR1,STEPER_MOTOR_PIN_TR1,DIO_U8_LOW);
    1da8:	82 e0       	ldi	r24, 0x02	; 2
    1daa:	60 e0       	ldi	r22, 0x00	; 0
    1dac:	40 e0       	ldi	r20, 0x00	; 0
    1dae:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR2,STEPER_MOTOR_PIN_TR2,DIO_U8_HIGH); 
    1db2:	82 e0       	ldi	r24, 0x02	; 2
    1db4:	61 e0       	ldi	r22, 0x01	; 1
    1db6:	41 e0       	ldi	r20, 0x01	; 1
    1db8:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR3,STEPER_MOTOR_PIN_TR3,DIO_U8_HIGH); 
    1dbc:	82 e0       	ldi	r24, 0x02	; 2
    1dbe:	62 e0       	ldi	r22, 0x02	; 2
    1dc0:	41 e0       	ldi	r20, 0x01	; 1
    1dc2:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(STEPPER_MOTOR_PORT_PIN_TR4,STEPER_MOTOR_PIN_TR4,DIO_U8_HIGH); 
    1dc6:	82 e0       	ldi	r24, 0x02	; 2
    1dc8:	63 e0       	ldi	r22, 0x03	; 3
    1dca:	41 e0       	ldi	r20, 0x01	; 1
    1dcc:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
    1dd0:	80 e0       	ldi	r24, 0x00	; 0
    1dd2:	90 e0       	ldi	r25, 0x00	; 0
    1dd4:	a0 e2       	ldi	r26, 0x20	; 32
    1dd6:	b1 e4       	ldi	r27, 0x41	; 65
    1dd8:	8b 87       	std	Y+11, r24	; 0x0b
    1dda:	9c 87       	std	Y+12, r25	; 0x0c
    1ddc:	ad 87       	std	Y+13, r26	; 0x0d
    1dde:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1de0:	6b 85       	ldd	r22, Y+11	; 0x0b
    1de2:	7c 85       	ldd	r23, Y+12	; 0x0c
    1de4:	8d 85       	ldd	r24, Y+13	; 0x0d
    1de6:	9e 85       	ldd	r25, Y+14	; 0x0e
    1de8:	20 e0       	ldi	r18, 0x00	; 0
    1dea:	30 e0       	ldi	r19, 0x00	; 0
    1dec:	4a ef       	ldi	r20, 0xFA	; 250
    1dee:	54 e4       	ldi	r21, 0x44	; 68
    1df0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1df4:	dc 01       	movw	r26, r24
    1df6:	cb 01       	movw	r24, r22
    1df8:	8f 83       	std	Y+7, r24	; 0x07
    1dfa:	98 87       	std	Y+8, r25	; 0x08
    1dfc:	a9 87       	std	Y+9, r26	; 0x09
    1dfe:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1e00:	6f 81       	ldd	r22, Y+7	; 0x07
    1e02:	78 85       	ldd	r23, Y+8	; 0x08
    1e04:	89 85       	ldd	r24, Y+9	; 0x09
    1e06:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e08:	20 e0       	ldi	r18, 0x00	; 0
    1e0a:	30 e0       	ldi	r19, 0x00	; 0
    1e0c:	40 e8       	ldi	r20, 0x80	; 128
    1e0e:	5f e3       	ldi	r21, 0x3F	; 63
    1e10:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1e14:	88 23       	and	r24, r24
    1e16:	2c f4       	brge	.+10     	; 0x1e22 <STEPPER_MOTOR_voiddrive+0xa4e>
		__ticks = 1;
    1e18:	81 e0       	ldi	r24, 0x01	; 1
    1e1a:	90 e0       	ldi	r25, 0x00	; 0
    1e1c:	9e 83       	std	Y+6, r25	; 0x06
    1e1e:	8d 83       	std	Y+5, r24	; 0x05
    1e20:	3f c0       	rjmp	.+126    	; 0x1ea0 <STEPPER_MOTOR_voiddrive+0xacc>
	else if (__tmp > 65535)
    1e22:	6f 81       	ldd	r22, Y+7	; 0x07
    1e24:	78 85       	ldd	r23, Y+8	; 0x08
    1e26:	89 85       	ldd	r24, Y+9	; 0x09
    1e28:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e2a:	20 e0       	ldi	r18, 0x00	; 0
    1e2c:	3f ef       	ldi	r19, 0xFF	; 255
    1e2e:	4f e7       	ldi	r20, 0x7F	; 127
    1e30:	57 e4       	ldi	r21, 0x47	; 71
    1e32:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1e36:	18 16       	cp	r1, r24
    1e38:	4c f5       	brge	.+82     	; 0x1e8c <STEPPER_MOTOR_voiddrive+0xab8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e3a:	6b 85       	ldd	r22, Y+11	; 0x0b
    1e3c:	7c 85       	ldd	r23, Y+12	; 0x0c
    1e3e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1e40:	9e 85       	ldd	r25, Y+14	; 0x0e
    1e42:	20 e0       	ldi	r18, 0x00	; 0
    1e44:	30 e0       	ldi	r19, 0x00	; 0
    1e46:	40 e2       	ldi	r20, 0x20	; 32
    1e48:	51 e4       	ldi	r21, 0x41	; 65
    1e4a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e4e:	dc 01       	movw	r26, r24
    1e50:	cb 01       	movw	r24, r22
    1e52:	bc 01       	movw	r22, r24
    1e54:	cd 01       	movw	r24, r26
    1e56:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e5a:	dc 01       	movw	r26, r24
    1e5c:	cb 01       	movw	r24, r22
    1e5e:	9e 83       	std	Y+6, r25	; 0x06
    1e60:	8d 83       	std	Y+5, r24	; 0x05
    1e62:	0f c0       	rjmp	.+30     	; 0x1e82 <STEPPER_MOTOR_voiddrive+0xaae>
    1e64:	88 ec       	ldi	r24, 0xC8	; 200
    1e66:	90 e0       	ldi	r25, 0x00	; 0
    1e68:	9c 83       	std	Y+4, r25	; 0x04
    1e6a:	8b 83       	std	Y+3, r24	; 0x03
    1e6c:	8b 81       	ldd	r24, Y+3	; 0x03
    1e6e:	9c 81       	ldd	r25, Y+4	; 0x04
    1e70:	01 97       	sbiw	r24, 0x01	; 1
    1e72:	f1 f7       	brne	.-4      	; 0x1e70 <STEPPER_MOTOR_voiddrive+0xa9c>
    1e74:	9c 83       	std	Y+4, r25	; 0x04
    1e76:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e78:	8d 81       	ldd	r24, Y+5	; 0x05
    1e7a:	9e 81       	ldd	r25, Y+6	; 0x06
    1e7c:	01 97       	sbiw	r24, 0x01	; 1
    1e7e:	9e 83       	std	Y+6, r25	; 0x06
    1e80:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e82:	8d 81       	ldd	r24, Y+5	; 0x05
    1e84:	9e 81       	ldd	r25, Y+6	; 0x06
    1e86:	00 97       	sbiw	r24, 0x00	; 0
    1e88:	69 f7       	brne	.-38     	; 0x1e64 <STEPPER_MOTOR_voiddrive+0xa90>
    1e8a:	14 c0       	rjmp	.+40     	; 0x1eb4 <STEPPER_MOTOR_voiddrive+0xae0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e8c:	6f 81       	ldd	r22, Y+7	; 0x07
    1e8e:	78 85       	ldd	r23, Y+8	; 0x08
    1e90:	89 85       	ldd	r24, Y+9	; 0x09
    1e92:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e94:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e98:	dc 01       	movw	r26, r24
    1e9a:	cb 01       	movw	r24, r22
    1e9c:	9e 83       	std	Y+6, r25	; 0x06
    1e9e:	8d 83       	std	Y+5, r24	; 0x05
    1ea0:	8d 81       	ldd	r24, Y+5	; 0x05
    1ea2:	9e 81       	ldd	r25, Y+6	; 0x06
    1ea4:	9a 83       	std	Y+2, r25	; 0x02
    1ea6:	89 83       	std	Y+1, r24	; 0x01
    1ea8:	89 81       	ldd	r24, Y+1	; 0x01
    1eaa:	9a 81       	ldd	r25, Y+2	; 0x02
    1eac:	01 97       	sbiw	r24, 0x01	; 1
    1eae:	f1 f7       	brne	.-4      	; 0x1eac <STEPPER_MOTOR_voiddrive+0xad8>
    1eb0:	9a 83       	std	Y+2, r25	; 0x02
    1eb2:	89 83       	std	Y+1, r24	; 0x01
	 }
  }

  else if(STEPER_MOTOR_PIN_COM == VCC && copy_u8direction == COUNTER_CLOCK_WISE)
  {
   for(i=0;i<local_u8nof_iteration;i++)
    1eb4:	de 01       	movw	r26, r28
    1eb6:	ad 58       	subi	r26, 0x8D	; 141
    1eb8:	bf 4f       	sbci	r27, 0xFF	; 255
    1eba:	fe 01       	movw	r30, r28
    1ebc:	ed 58       	subi	r30, 0x8D	; 141
    1ebe:	ff 4f       	sbci	r31, 0xFF	; 255
    1ec0:	80 81       	ld	r24, Z
    1ec2:	8f 5f       	subi	r24, 0xFF	; 255
    1ec4:	8c 93       	st	X, r24
    1ec6:	fe 01       	movw	r30, r28
    1ec8:	ed 58       	subi	r30, 0x8D	; 141
    1eca:	ff 4f       	sbci	r31, 0xFF	; 255
    1ecc:	de 01       	movw	r26, r28
    1ece:	ac 58       	subi	r26, 0x8C	; 140
    1ed0:	bf 4f       	sbci	r27, 0xFF	; 255
    1ed2:	90 81       	ld	r25, Z
    1ed4:	8c 91       	ld	r24, X
    1ed6:	98 17       	cp	r25, r24
    1ed8:	08 f4       	brcc	.+2      	; 0x1edc <STEPPER_MOTOR_voiddrive+0xb08>
    1eda:	d4 cd       	rjmp	.-1112   	; 0x1a84 <STEPPER_MOTOR_voiddrive+0x6b0>
  
  }
  
  
}
}
    1edc:	c9 58       	subi	r28, 0x89	; 137
    1ede:	df 4f       	sbci	r29, 0xFF	; 255
    1ee0:	0f b6       	in	r0, 0x3f	; 63
    1ee2:	f8 94       	cli
    1ee4:	de bf       	out	0x3e, r29	; 62
    1ee6:	0f be       	out	0x3f, r0	; 63
    1ee8:	cd bf       	out	0x3d, r28	; 61
    1eea:	cf 91       	pop	r28
    1eec:	df 91       	pop	r29
    1eee:	1f 91       	pop	r17
    1ef0:	0f 91       	pop	r16
    1ef2:	08 95       	ret

00001ef4 <main>:

#include "DIO_interface.h"
#include "STEPPER_MOTOR_interfac.h"

int main()
{
    1ef4:	df 93       	push	r29
    1ef6:	cf 93       	push	r28
    1ef8:	cd b7       	in	r28, 0x3d	; 61
    1efa:	de b7       	in	r29, 0x3e	; 62
	DIO_voidInit();
    1efc:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_voidInit>

	DIO_u8SetPinValue(DIO_U8_PORTC,DIO_U8_PIN0,DIO_U8_LOW);
    1f00:	82 e0       	ldi	r24, 0x02	; 2
    1f02:	60 e0       	ldi	r22, 0x00	; 0
    1f04:	40 e0       	ldi	r20, 0x00	; 0
    1f06:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(DIO_U8_PORTC,DIO_U8_PIN1,DIO_U8_LOW);
    1f0a:	82 e0       	ldi	r24, 0x02	; 2
    1f0c:	61 e0       	ldi	r22, 0x01	; 1
    1f0e:	40 e0       	ldi	r20, 0x00	; 0
    1f10:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(DIO_U8_PORTC,DIO_U8_PIN2,DIO_U8_LOW);
    1f14:	82 e0       	ldi	r24, 0x02	; 2
    1f16:	62 e0       	ldi	r22, 0x02	; 2
    1f18:	40 e0       	ldi	r20, 0x00	; 0
    1f1a:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(DIO_U8_PORTC,DIO_U8_PIN3,DIO_U8_HIGH);
    1f1e:	82 e0       	ldi	r24, 0x02	; 2
    1f20:	63 e0       	ldi	r22, 0x03	; 3
    1f22:	41 e0       	ldi	r20, 0x01	; 1
    1f24:	0e 94 b1 06 	call	0xd62	; 0xd62 <DIO_u8SetPinValue>
    1f28:	ff cf       	rjmp	.-2      	; 0x1f28 <main+0x34>

00001f2a <__udivmodhi4>:
    1f2a:	aa 1b       	sub	r26, r26
    1f2c:	bb 1b       	sub	r27, r27
    1f2e:	51 e1       	ldi	r21, 0x11	; 17
    1f30:	07 c0       	rjmp	.+14     	; 0x1f40 <__udivmodhi4_ep>

00001f32 <__udivmodhi4_loop>:
    1f32:	aa 1f       	adc	r26, r26
    1f34:	bb 1f       	adc	r27, r27
    1f36:	a6 17       	cp	r26, r22
    1f38:	b7 07       	cpc	r27, r23
    1f3a:	10 f0       	brcs	.+4      	; 0x1f40 <__udivmodhi4_ep>
    1f3c:	a6 1b       	sub	r26, r22
    1f3e:	b7 0b       	sbc	r27, r23

00001f40 <__udivmodhi4_ep>:
    1f40:	88 1f       	adc	r24, r24
    1f42:	99 1f       	adc	r25, r25
    1f44:	5a 95       	dec	r21
    1f46:	a9 f7       	brne	.-22     	; 0x1f32 <__udivmodhi4_loop>
    1f48:	80 95       	com	r24
    1f4a:	90 95       	com	r25
    1f4c:	bc 01       	movw	r22, r24
    1f4e:	cd 01       	movw	r24, r26
    1f50:	08 95       	ret

00001f52 <__prologue_saves__>:
    1f52:	2f 92       	push	r2
    1f54:	3f 92       	push	r3
    1f56:	4f 92       	push	r4
    1f58:	5f 92       	push	r5
    1f5a:	6f 92       	push	r6
    1f5c:	7f 92       	push	r7
    1f5e:	8f 92       	push	r8
    1f60:	9f 92       	push	r9
    1f62:	af 92       	push	r10
    1f64:	bf 92       	push	r11
    1f66:	cf 92       	push	r12
    1f68:	df 92       	push	r13
    1f6a:	ef 92       	push	r14
    1f6c:	ff 92       	push	r15
    1f6e:	0f 93       	push	r16
    1f70:	1f 93       	push	r17
    1f72:	cf 93       	push	r28
    1f74:	df 93       	push	r29
    1f76:	cd b7       	in	r28, 0x3d	; 61
    1f78:	de b7       	in	r29, 0x3e	; 62
    1f7a:	ca 1b       	sub	r28, r26
    1f7c:	db 0b       	sbc	r29, r27
    1f7e:	0f b6       	in	r0, 0x3f	; 63
    1f80:	f8 94       	cli
    1f82:	de bf       	out	0x3e, r29	; 62
    1f84:	0f be       	out	0x3f, r0	; 63
    1f86:	cd bf       	out	0x3d, r28	; 61
    1f88:	09 94       	ijmp

00001f8a <__epilogue_restores__>:
    1f8a:	2a 88       	ldd	r2, Y+18	; 0x12
    1f8c:	39 88       	ldd	r3, Y+17	; 0x11
    1f8e:	48 88       	ldd	r4, Y+16	; 0x10
    1f90:	5f 84       	ldd	r5, Y+15	; 0x0f
    1f92:	6e 84       	ldd	r6, Y+14	; 0x0e
    1f94:	7d 84       	ldd	r7, Y+13	; 0x0d
    1f96:	8c 84       	ldd	r8, Y+12	; 0x0c
    1f98:	9b 84       	ldd	r9, Y+11	; 0x0b
    1f9a:	aa 84       	ldd	r10, Y+10	; 0x0a
    1f9c:	b9 84       	ldd	r11, Y+9	; 0x09
    1f9e:	c8 84       	ldd	r12, Y+8	; 0x08
    1fa0:	df 80       	ldd	r13, Y+7	; 0x07
    1fa2:	ee 80       	ldd	r14, Y+6	; 0x06
    1fa4:	fd 80       	ldd	r15, Y+5	; 0x05
    1fa6:	0c 81       	ldd	r16, Y+4	; 0x04
    1fa8:	1b 81       	ldd	r17, Y+3	; 0x03
    1faa:	aa 81       	ldd	r26, Y+2	; 0x02
    1fac:	b9 81       	ldd	r27, Y+1	; 0x01
    1fae:	ce 0f       	add	r28, r30
    1fb0:	d1 1d       	adc	r29, r1
    1fb2:	0f b6       	in	r0, 0x3f	; 63
    1fb4:	f8 94       	cli
    1fb6:	de bf       	out	0x3e, r29	; 62
    1fb8:	0f be       	out	0x3f, r0	; 63
    1fba:	cd bf       	out	0x3d, r28	; 61
    1fbc:	ed 01       	movw	r28, r26
    1fbe:	08 95       	ret

00001fc0 <_exit>:
    1fc0:	f8 94       	cli

00001fc2 <__stop_program>:
    1fc2:	ff cf       	rjmp	.-2      	; 0x1fc2 <__stop_program>
